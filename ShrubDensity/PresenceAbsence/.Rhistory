DdensityM2 <- DplotXspp/180
write.csv(DdensityM2,file="F:/ShrubDensity/HeightClass/DdensityM2.csv")
#Class E
EdensityM2 <- EplotXspp/180
write.csv(EdensityM2,file="F:/ShrubDensity/HeightClass/EdensityM2.csv")
#Class A
AdensityHa <- AdensityM2/10000
write.csv(AdensityHa,file="F:/ShrubDensity/HeightClass/AdensityHa.csv")
#Class B
BdensityHa <- BdensityM2/10000
write.csv(BdensityHa,file="F:/ShrubDensity/HeightClass/BdensityHa.csv")
#Class C
CdensityHa <- CdensityM2/10000
write.csv(CdensityHa,file="F:/ShrubDensity/HeightClass/CdensityHa.csv")
#Class D
DdensityHa <- DdensityM2/10000
write.csv(DdensityHa,file="F:/ShrubDensity/HeightClass/DdensityHa.csv")
#Class E
EdensityHa <- EdensityM2/10000
write.csv(EdensityHa,file="F:/ShrubDensity/HeightClass/EdensityHa.csv")
View(class)
3/180
*100
0.01666667*100
library(vegan)
mydata <- read.csv("F:/LPI/LPIRelativeCoverCommonInExcel.csv",header=TRUE,row.names=1)
mydata.mds <- metaMDS(mydata)
names(mydata.mds)
mydata.mds
variableScores <- mydata.mds$species
sampleScores <- mydata.mds$points
variableScores
sampleScores
plot(mydata.mds)
plot(mydata.mds, type="t", display=c("species"))
plot(mydata.mds, type="n")
points(mydata.mds, display=c("sites"), choices=c(1,2), pch=3, col="red")
text(mydata.mds, display=c("species"), choices=c(1,2), col="blue", cex=0.7)
stressplot(mydata.mds)
ordiplot(mydata.mds,type="t")
lpi<-read.csv("F:/LPI/LPIRelativeCoverCommonInExcel.csv",header=TRUE,row.names=1)
lpi
#this is the explanatory matrix dataframe
#it contains variables like aspect, slope, elevation, etc.
lpi.env<- read.csv("F:/Soils/SoilEnvironmentalData.csv", header = TRUE)
lpi.env
install.packages("vegan")
library(vegan)
nmds.output<-metaMDS(lpi,distance = "bray",trymax=2000,k=2)
ordiplot(nmds.output)
ordiplot(nmds.output, display ="species", type ="n")
text(nmds.output, display="species", col="sienna3")
ordiplot(nmds.output, display = "sites", type = "n")
text(nmds.output, display="sites")#, labels = as.character(east.env$Com_Site))
ordiplot(nmds.output, display = "sites", type = "n", main = 'Beef Basin Vegetation Classes')
orditorp(nmds.output, dis="sites", cex=1.5, font=3, col="black",
labels = as.character(lpi.env$id))#Make sure that you use the right environmental data frame.
ordiplot(nmds.output, type="n", main="NMDS of Beef Basin", xlab="NMDS1",
ylab="NMDS2")
orditorp(nmds.output, display="sites", cex=0.7, font=3, col="black",
labels = as.character(lpi.env$id))
text(nmds.output, display="species", col="sienna3")
ordiplot(nmds.output, display = "sites", type = "n")
orditorp(nmds.output, dis="sites", cex=1.5, font=3, col="black",
labels = as.character(lpi.env$id))#Make sure that you use the right environmental data frame.
ordiplot(nmds.output, type="n", main="NMDS of Beef Basin", xlab="NMDS1",
ylab="NMDS2")
orditorp(nmds.output, dis="sites", cex=1.5, font=3, col="black",
labels = as.character(lpi.env$id))
text(nmds.output, display="species", col="sienna3")
ordiplot(nmds.output, display = "sites", type = "n")
orditorp(nmds.output, dis="sites", cex=1.5, font=3, col="black",
labels = as.character(lpi.env$id))#Make sure that you use the right environmental data frame.
a<-ordiplot(nmds.output, type="n", main="NMDS of Beef Basin", xlab="NMDS1",
ylab="NMDS2")
orditorp(nmds.output, dis="sites", cex=1.5, font=3, col="black",
labels = as.character(lpi.env$id))
text(nmds.output, display="species", col="sienna3")
ordiplot(nmds.output, choices = c(1,2),main="NMDS of Beef Basin")
#overlay text of the species names
text(nmds.output, choices = c(1,2), display="species", col="sienna3")
text(nmds.output, choices = c(1,2), display="sites", col="black")
#this will plot NMDS2 and NMDS3 if k>2; it k=2, this just looks weird.
ordiplot(nmds.output, choices = c(2,3),main="NMDS of Beef Basin")
#overlay text of the species names
text(nmds.output, choices = c(2,3), display="species", col="sienna3")
text(nmds.output, choices = c(2,3), display="sites", col="black")
#this will plot NMDS2 and NMDS3 if k>2; it k=2, this just looks weird.
ordiplot(nmds.output, choices = c(1,3),main="NMDS of Beef Basin")
#overlay text of the species names
text(nmds.output, choices = c(1,3), display="species", col="sienna3")
text(nmds.output, choices = c(1,3), display="sites", col="black")
#repeat what we did above
#do you want to only look at species?
ordiplot(nmds.output, choices = c(1,3), main="NMDS of Beef Basin")
text(nmds.output, choices = c(1,3), display="species", col="sienna3")
#this is a cool way to interactively identify what the points are on the plot
env.rel<-envfit(nmds.output,lpi.env[,c(2:19)])
ordiplot(nmds.output)
plot(env.rel)
#The relative length of the arrows shows the relative strengths of the correlations
#This is the output of the correlations performed by the env.fit function
env.rel
ordisurf(nmds.output,lpi.env$Elevation, main = 'Elevation')
ordisurf(nmds.output,lpi.env$maxClay, main = 'Maximum Clay Percentage')
ordisurf(nmds.output,lpi.env$maxSand, main = 'Maximum Sand Percentage')
ordisurf(nmds.output,lpi.env$maxDepth, main = 'Depth of Soil Pedon')
ordisurf(nmds.output,lpi.env$maxpH, main = 'Maximum Soil pH')
ordisurf(nmds.output,lpi.env$minpH, main = 'Minimum Soil pH')
data<-read.csv("F:/LPI/LPIRelativeCoverCommonInExcel.csv",header=TRUE,row.names=1)
data
write.csv(data,file="F:/LPI/data1.csv")
#calculate dissimilarities, use function "vegdist"in VEGAN package
data.dis<-vegdist(data,method="bray")
#data.dis
dis.matrix<-as.matrix(data.dis)
#dis.matrix
#write.csv(dis.matrix,file="F:/LPI/LPIDistanceMatrix.csv")
#rankindex compares euclidean, bray-curtis, etc... for my data
rankindex(dis.matrix,data)
#calculate isoMDS function, use isoDS function in MASS package
#data.mds<-isoMDS(data.dis)
#data.mds
data.mds <- metaMDS(data)
data.mds
data.mds <- metaMDS(data)
data.mds
#--------stressplot and ordiplot----------
#Stress <0.10 indicates that the ordination is good "with no real
#risk of drawing false inferences" (Clarke 1993, p. 26).
stressplot(data.mds) # linear fit is the fit between ordination values and distances
ordiplot(data.mds,type="t")
ordiplot(data.mds)
ordiplot(data.mds, display ="sites", type ="n")
text(data.mds, display="sites", col="blue", cex=0.7)
ordiplot(data.mds)
ordiplot(data.mds, display ="sites", type ="n")
text(data.mds, display="sites", col="black", cex=0.7)
data.env<-read.csv("F:/Soils/SoilEnvironmentalData.csv",header=TRUE,row.names=1)
significant.data.env<-data.env[,c(5:8,11,14:18)]
more.significant.data.env<-data.env[,c(6,7,11,15,18)]
non.significant.data.env<-data.env[,c(1:4,9,10,12,13)]
data.mds<-metaMDS(comm=data,distance="euc",trace=FALSE)
data.mds
stressplot(data.mds)
stressplot(data.mds) # linear fit is the fit between ordination values and distances
data.mds <- metaMDS(data)
stressplot(data.mds) # linear fit is the fit between ordination values and distances
data.mds<-metaMDS(comm=data,distance="euc",trace=FALSE)
data.mds
stressplot(data.mds)
data.mds<-metaMDS(comm=data,distance="man",trace=FALSE)
data.mds
stressplot(data.mds)
data.mds<-metaMDS(comm=data,distance="bra",trace=FALSE)
data.mds
stressplot(data.mds)
data.mds<-metaMDS(comm=data,distance="bra",trace=FALSE)
data.mds
stressplot(data.mds)
data.mds<-metaMDS(comm=data,distance="euc",trace=FALSE)
data.mds
stressplot(data.mds)
fit<-envfit(data.mds,significant.data.env,perm=1000)
fit
#plotMDS
plot(data.mds,type="t",main="NMDS using Euclidean Distance")
ordiplot(data.mds)
ordiplot(data.mds, display ="species", type ="n")
text(data.mds, display="sites", col="blue", cex=0.7)
text(data.mds, display="species", col="red", cex=0.7)
#plot environmental loadings
plot(fit,col="black", cex=0.7)
View(significant.data.env)
data.A.env<-read.csv("F:/ShrubDensity/HeightClass/AdensityM2.csv")
View(data.A.env)
View(data)
data.A.env<-read.csv("F:/ShrubDensity/HeightClass/AdensityM2.csv")
data.B.env<-read.csv("F:/ShrubDensity/HeightClass/BdensityM2.csv")
data.C.env<-read.csv("F:/ShrubDensity/HeightClass/CdensityM2.csv")
data.D.env<-read.csv("F:/ShrubDensity/HeightClass/DdensityM2.csv")
data.E.env<-read.csv("F:/ShrubDensity/HeightClass/EdensityM2.csv")
View(data.env)
View(data.env)
data.env<-read.csv("F:/Soils/SoilEnvironmentalData.csv",header=TRUE,row.names=1)
#Remove IL2_9 from soils data because it does not exist in shrub data
data.env<-data.env[data.env$row.names!='IL2_9',]
View(data.env)
data.env<-read.csv("F:/Soils/SoilEnvironmentalData.csv",header=TRUE,row.names=1)
data.env<-data.env.input[data.env.input$row.names!='IL2_9',]
data.env.input<-read.csv("F:/Soils/SoilEnvironmentalData.csv",header=TRUE,row.names=1)
#Remove IL2_9 from soils data because it does not exist in shrub data
data.env<-data.env.input[data.env.input$row.names!='IL2_9',]
data.env.input<-read.csv("F:/Soils/SoilEnvironmentalData.csv",header=TRUE,row.names=1)
#Remove IL2_9 from soils data because it does not exist in shrub data
data.env<-data.env.input[data.env.input$row.names!='IL2_9',]
data.env.input<-read.csv("F:/Soils/SoilEnvironmentalData.csv",header=TRUE)
#Remove IL2_9 from soils data because it does not exist in shrub data
data.env<-data.env.input[data.env.input$id!='IL2_9',]
library(vegan)
library(MASS)
data<-read.csv("F:/LPI/LPIRelativeCoverCommonInExcel.csv",header=TRUE,row.names=1)
data<-read.csv("F:/LPI/LPIRelativeCoverCommonInExcel.csv",header=TRUE)
data
write.csv(data,file="F:/LPI/data1.csv")
#calculate dissimilarities, use function "vegdist"in VEGAN package
data.dis<-vegdist(data,method="bray")
#data.dis
dis.matrix<-as.matrix(data.dis)
#dis.matrix
#write.csv(dis.matrix,file="F:/LPI/LPIDistanceMatrix.csv")
#rankindex compares euclidean, bray-curtis, etc... for my data
data<-read.csv("F:/LPI/LPIRelativeCoverCommonInExcel.csv",header=TRUE)
View(data)
data<-read.csv("F:/LPI/LPIRelativeCoverCommonInExcel.csv",header=TRUE)
data<-data[data$X!='IL2_9',]
data
write.csv(data,file="F:/LPI/data1.csv")
library(vegan)
library(MASS)
data<-read.csv("F:/LPI/LPIRelativeCoverCommonInExcel.csv",header=TRUE)
#Remove IL2_9 from LPI data because it does not exist in Shrub data
data<-data[data$X!='IL2_9',]
data
write.csv(data,file="F:/LPI/data1.csv")
data.dis<-vegdist(data,method="bray")
data<-data[,2:46]
View(data)
data<-read.csv("F:/LPI/LPIRelativeCoverCommonInExcel.csv",header=TRUE)
data<-data[row.names=1]
data<-data[,row.names=1]
View(data)
data<-data[,1="plot"]
soilsSum<-read.csv("F:/Soils/SoilEnvironmentalData.csv", header=T)
soilsOrg<-read.csv("C:/Users/Grant/Documents/Beef Basin 2013/SoilDataInputR.csv", header=T)
Sage<-read.csv("F:/ShrubDensity/SagePresenceAbsence.csv", header=T)
Live<-read.csv("F:/ShrubDensity/SageLivePresenceAbsence.csv")
Dead<-read.csv("F:/ShrubDensity/SageDeadPresenceAbsence.csv")
soilsSum<-read.csv("F:/Soils/SoilEnvironmentalData.csv", header=T)
soilsOrg<-read.csv("C:/Users/Grant/Documents/Beef Basin 2013/SoilDataInputR.csv", header=T)
Sage<-read.csv("F:/ShrubDensity/PresenceAbsence/SagePresenceAbsence.csv", header=T)
Live<-read.csv("F:/ShrubDensity/PresenceAbsence/SageLivePresenceAbsence.csv")
Dead<-read.csv("F:/ShrubDensity/PresenceAbsence/SageDeadPresenceAbsence.csv")
sum1<-soilsSum[soilsSum$id!='IL2_9',]
View(sum1)
View(Sage)
sumSage<- cbind(sum1,Sage)
View(sumSage)
View(sumSage)
g<-glm(as.factor(ARTR2)~maxDepth+minpH+BioticCrustClass+as.factor(CarbonateStage),data=sumSage, family= 'binomial')
summary(g)
h<-glm(as.factor(ARTR2.D)~maxDepth+minpH+minClay+maxpH+as.factor(CarbonateStage),data=sumSage, family= 'binomial')
summary(h)
plot(g)
boxplot(maxDepth~ARTR2,data = sumSage, main= 'maxDepth')
boxplot(minSand~ARTR2,data = sumSage, main= 'minSand')
boxplot(maxSand~ARTR2,data = sumSage, main= 'maxSand')
boxplot(minClay~ARTR2,data = sumSage, main= 'minClay')
boxplot(maxClay~ARTR2,data = sumSage, main= 'maxClay')
boxplot(BioticCrustClass~ARTR2,data = sumSage, main= 'BioticCrustClass')
boxplot(CarbonateStage~ARTR2,data = sumSage, main= 'CarbonateStage')
boxplot(maxpH~ARTR2,data = sumSage, main= 'maxpH')
boxplot(minpH~ARTR2,data = sumSage, main= 'minpH')
abiotic = read.csv("AMEA_Abiotic.csv"); rownames(abiotic) = abiotic$Plot
data<-read.csv("F:/LPI/LPIRelativeCoverCommonInExcel.csv",header=TRUE)
View(data)
data<-read.csv("F:/LPI/LPIRelativeCoverCommonInExcel.csv",header=TRUE); rownames(X) = X$Plot
View(data)
data<-read.csv("F:/LPI/LPIRelativeCoverCommonInExcel.csv",header=TRUE,plot=1)
data<-read.csv("F:/LPI/LPIRelativeCoverCommonInExcel.csv",header=TRUE)
#Remove IL2_9 from LPI data because it does not exist in Shrub data
data<-data[data$X!='IL2_9',]
write.csv(data,file="F:/LPI/data1.csv",header=TRUE,row.names=1)
data<-read.csv("F:/LPI/LPIRelativeCoverCommonInExcel.csv",header=TRUE)
#Remove IL2_9 from LPI data because it does not exist in Shrub data
data<-data[data$X!='IL2_9',]
write.csv(data,file="F:/LPI/data1.csv")
data<-read.csv("F:/LPI/data1.csv",header=TRUE,row.names=1)
View(data)
data<-read.csv("F:/LPI/LPIRelativeCoverCommonInExcel.csv",header=TRUE)
#Remove IL2_9 from LPI data because it does not exist in Shrub data
data<-data[data$X!='IL2_9',]
write.csv(data,file="F:/LPI/data1.csv")
View(data)
View(data)
data<-read.csv("F:/LPI/LPIRelativeCoverCommonInExcel.csv",header=TRUE)
View(data)
data<-data[data$X!='IL2_9',]
View(data)
write.csv(data,file="F:/LPI/data1.csv")
data<-read.csv("F:/LPI/data1.csv",header=TRUE,row.names=2)
View(data)
data<-read.csv("F:/LPI/LPIRelativeCoverCommonInExcel.csv",header=TRUE)
#Remove IL2_9 from LPI data because it does not exist in Shrub data
data<-data[data$X!='IL2_9',]
View(data)
data<-data[,2:46]
View(data)
data<-read.csv("F:/LPI/LPIRelativeCoverCommonInExcel.csv",header=TRUE)
#Remove IL2_9 from LPI data because it does not exist in Shrub data
data<-data[data$X!='IL2_9',]
View(data)
View(data)
data<-read.csv("F:/LPI/LPIRelativeCoverCommonInExcel.csv",header=TRUE)
View(data)
data<-data[data$X!='IL2_9',row.names=1]
data<-data[data$X!='IL2_9',];row.names=1
row.names
data<-read.csv("F:/LPI/LPIRelativeCoverCommonInExcel.csv",header=TRUE)
View(data)
data<-data[data$X!='IL2_9',]
View(data)
data<-read.csv("F:/LPI/data1.csv",header=TRUE,row.names=2)
View(data)
data<-read.csv("F:/LPI/data1.csv",header=TRUE,row.names=2)
data<-read.csv("F:/LPI/LPIRelativeCoverCommonInExcel.csv",header=TRUE)
data<-read.csv("F:/LPI/LPIRelativeCoverCommonInExcel.csv",header=TRUE)
#Remove IL2_9 from LPI data because it does not exist in Shrub data
data<-data[data$X!='IL2_9',]
View(data)
row.names<-data$X
data<-read.csv("F:/LPI/LPIRelativeCoverCommonInExcel.csv",header=TRUE)
View(data)
data<-data([data$X!='IL2_9',],row.names=1)
data<-data[data$X!='IL2_9',]
View(data)
data<-row.names[data$X]
?row.names
row.names[data$X]
data<-read.csv("F:/LPI/LPIRelativeCoverCommonInExcel.csv",header=TRUE,row.names=X)
data<-read.csv("F:/LPI/LPIRelativeCoverCommonInExcel.csv",header=TRUE,row.names=data$X)
data<-read.csv("F:/LPI/LPIRelativeCoverCommonInExcel.csv",header=TRUE)
data<-data[data$X!='IL2_9',]
View(data)
write.csv(data,file="F:/LPI/data1.csv")
data<-read.csv("F:/LPI/data1.csv",header=TRUE,row.names=2)
View(data)
data<-data[1,3:46]
View(data)
data<-read.csv("F:/LPI/LPIRelativeCoverCommonInExcel.csv",header=TRUE)
#Remove IL2_9 from LPI data because it does not exist in Shrub data
data<-data[data$X!='IL2_9',]
write.csv(data,file="F:/LPI/data1.csv")
data<-read.csv("F:/LPI/data1.csv",header=TRUE,row.names=2)
data<-data[,(1,3:46)]
View(data)
data<-data[,data$X!]
data<-data[,2:46]
View(data)
data.dis<-vegdist(data,method="bray")
#data.dis
dis.matrix<-as.matrix(data.dis)
rankindex(dis.matrix,data)
data.mds <- metaMDS(data)
data.mds
stressplot(data.mds) # linear fit is the fit between ordination values and distances
ordiplot(data.mds,type="t")
ordiplot(data.mds)
ordiplot(data.mds, display ="sites", type ="n")
text(data.mds, display="sites", col="black", cex=0.7)
class <- read.csv('F:/ShrubDensity/HeightClass/PlantDenDetail.csv')
View(class)
AplotXspp<-xtabs(SpeciesCode$ARTR2~Plot+ClassAtotal, class)
View(class)
data<-read.csv("F:/LPI/LPIRelativeCoverCommonInExcel.csv",header=TRUE)
#Remove IL2_9 from LPI data because it does not exist in Shrub data
data<-data[data$X!='IL2_9',]
write.csv(data,file="F:/LPI/data1.csv")
data<-read.csv("F:/LPI/data1.csv",header=TRUE,row.names=2)
data<-data[,2:46]
View(data)
data.dis<-vegdist(data,method="bray")
#data.dis
dis.matrix<-as.matrix(data.dis)
#dis.matrix
#write.csv(dis.matrix,file="F:/LPI/LPIDistanceMatrix.csv")
#rankindex compares euclidean, bray-curtis, etc... for my data
rankindex(dis.matrix,data)
data.mds <- metaMDS(data)
data.mds
data.mds <- metaMDS(data)
data.mds
data.mds <- metaMDS(data)
data.mds
stressplot(data.mds) # linear fit is the fit between ordination values and distances
ordiplot(data.mds,type="t")
ordiplot(data.mds)
ordiplot(data.mds, display ="sites", type ="n")
text(data.mds, display="sites", col="black", cex=0.7)
data.mds<-metaMDS(comm=data,distance="euc",trace=FALSE)
data.mds
stressplot(data.mds)
library(vegan)
library(MASS)
#---NMDS Script for Beef Basin Data --------
# this code has been modified from Plant Community Ecology and various online sources
#### Took the file F:/LPI/LPIRelativeCover.csv and used
#### SUM and COUNTIF in Excel to find the colum sums and
#### number of sites each veg was found at then I manually
#### removed those with COUNTIF below 5 AND SUMS below .05 (had to both be below to be removed)
#### Also cleaned up the data (combined SALS0 and SALSO, etc...)
data<-read.csv("F:/LPI/LPIRelativeCoverCommonInExcel.csv",header=TRUE)
data<-data[data$X!='IL2_9',] #Remove IL2_9 from LPI data because it does not exist in Shrub data
write.csv(data,file="F:/LPI/data1.csv")
data<-read.csv("F:/LPI/data1.csv",header=TRUE,row.names=2)
data<-data[,2:46]
#calculate dissimilarities, use function "vegdist"in VEGAN package
data.dis<-vegdist(data,method="bray")
#data.dis
dis.matrix<-as.matrix(data.dis)
#dis.matrix
#write.csv(dis.matrix,file="F:/LPI/LPIDistanceMatrix.csv")
#rankindex compares euclidean, bray-curtis, etc... for my data
rankindex(dis.matrix,data)
data.mds<-metaMDS(comm=data,distance="euc",trace=FALSE)
data.mds
#Stress <0.10 indicates that the ordination is good "with no real
#risk of drawing false inferences" (Clarke 1993, p. 26).
# linear fit is the fit between ordination values and distances
stressplot(data.mds)
###########################  ENVIRONMENTAL DATA  ###########################################
#read in environmental data
data.env.input<-read.csv("F:/Soils/SoilEnvironmentalData.csv",header=TRUE)
#Remove IL2_9 from Soils data because it does not exist in Shrub data
data.env<-data.env.input[data.env.input$id!='IL2_9',]
View(data.env)
data.env.input<-read.csv("F:/Soils/SoilEnvironmentalData.csv",header=TRUE)
#Remove IL2_9 from Soils data because it does not exist in Shrub data
data.env<-data.env.input[data.env.input$id!='IL2_9',]
write.csv(data.env,file="F:/LPI/data2.csv")
View(data.env)
data.env<-read.csv("F:/LPI/data2.csv",header=TRUE,row.names=2)
data.env<-data.env[,2:19]
View(data.env)
data.env<-read.csv("F:/Soils/SoilEnvironmentalData.csv",header=TRUE)
#Remove IL2_9 from Soils data because it does not exist in Shrub data
data.env<-data.env[data.env$id!='IL2_9',]
write.csv(data.env,file="F:/LPI/data2.csv")
data.env<-read.csv("F:/LPI/data2.csv",header=TRUE,row.names=2)
data.env<-data.env[,2:19]
View(data.env)
data<-read.csv("F:/LPI/LPIRelativeCoverCommonInExcel.csv",header=TRUE)
data<-data[data$X!='IL2_9',] #Remove IL2_9 from LPI data because it does not exist in Shrub data
write.csv(data,file="F:/LPI/data1.csv")
data<-read.csv("F:/LPI/data1.csv",header=TRUE,row.names=2)
data<-data[,2:46]
data.dis<-vegdist(data,method="bray")
#data.dis
dis.matrix<-as.matrix(data.dis)
#dis.matrix
#write.csv(dis.matrix,file="F:/LPI/LPIDistanceMatrix.csv")
#rankindex compares euclidean, bray-curtis, etc... for my data
rankindex(dis.matrix,data)
data.mds<-metaMDS(comm=data,distance="euc",trace=FALSE)
data.mds
#Stress <0.10 indicates that the ordination is good "with no real
#risk of drawing false inferences" (Clarke 1993, p. 26).
# linear fit is the fit between ordination values and distances
stressplot(data.mds)
data.env<-read.csv("F:/Soils/SoilEnvironmentalData.csv",header=TRUE)
data.env<-data.env[data.env$id!='IL2_9',] #Remove IL2_9 from Soils data because it does not exist in Shrub data
write.csv(data.env,file="F:/LPI/data2.csv")
data.env<-read.csv("F:/LPI/data2.csv",header=TRUE,row.names=2)
data.env<-data.env[,2:19]
data.A.env<-read.csv("F:/ShrubDensity/HeightClass/AdensityM2.csv")
data.B.env<-read.csv("F:/ShrubDensity/HeightClass/BdensityM2.csv")
data.C.env<-read.csv("F:/ShrubDensity/HeightClass/CdensityM2.csv")
data.D.env<-read.csv("F:/ShrubDensity/HeightClass/DdensityM2.csv")
data.E.env<-read.csv("F:/ShrubDensity/HeightClass/EdensityM2.csv")
fit<-envfit(data.mds,significant.data.env,perm=1000)
fit
fit<-envfit(data.mds,data.env,perm=1000)
fit
plot(data.mds,type="t",main="NMDS using Euclidean Distance")
ordiplot(data.mds)
ordiplot(data.mds, display ="species", type ="n")
text(data.mds, display="sites", col="blue", cex=0.7)
text(data.mds, display="species", col="red", cex=0.7)
#plot environmental loadings
plot(fit,col="black", cex=0.7)
plot(data.mds,type="t",main="NMDS using Euclidean Distance")
ordiplot(data.mds)
ordiplot(data.mds, display ="species", type ="n")
text(data.mds, display="sites", col="blue", cex=0.7)
text(data.mds, display="species", col="red", cex=0.7)
#plot environmental loadings
plot(fit,col="black", cex=0.7)
TplotXspp<-xtabs(c(ClassAtotal,ClassBtotal,ClassCtotal,ClassDtotal,ClassEtotal)~Plot+SpeciesCode, class)
?xtabs
TplotXspp<-xtabs(cbind(ClassAtotal,ClassBtotal,ClassCtotal,ClassDtotal,ClassEtotal)~Plot+SpeciesCode, class)
TplotXspp<-xtabs(SpeciesCode~Plot+ClassAtotal, class)
TplotXspp<-xtabs(SpeciesCode~Plot+SpeciesCode, class)
class <- read.csv('F:/ShrubDensity/HeightClass/PlantDenDetail.csv')
library(plyr)
begay<-read.csv('F:/LPI/LPIindicatorsBEGAY.csv')
ignacio<-read.csv('F:/LPI/LPIindicatorsIGNACIOLEANTO.csv')
mido<-read.csv('F:/LPI/LPIindicatorsMIDO.csv')
lpiAll<-rbind(begay, ignacio, mido)
lpiAll
write.csv(lpiAll,file="F:/LPI/LPIofAll3Soils.csv")
lpi<-xtabs(Any.Hit.Avg~Plot+Indicator, lpiAll)
lpi
write.csv(relcover,file="F:/LPI/LPIplotXspp.csv")
lpi<-xtabs(Any.Hit.Avg~Plot+Indicator, lpiAll)
lpi
write.csv(lpi,file="F:/LPI/LPIplotXspp.csv")
View(begay)
View(begay)
soilsSum<-read.csv("F:/Soils/SoilEnvironmentalData.csv", header=T)
soilsOrg<-read.csv("C:/Users/Grant/Documents/Beef Basin 2013/SoilDataInputR.csv", header=T)
View(soilsSum)
View(soilsOrg)
