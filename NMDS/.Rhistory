library(colorspace)
# read in data
data.env <- read.csv("F:/Soils/SoilEnvironmentalDataModWithColbyAWS.csv",header=TRUE, row.names=1)
# add shrub environmental variables
sage <- read.csv("F:/SageNMDSvariables/Sage.Env.April.csv",header=TRUE,row.names=1)
sage[is.na(sage)] <- 0 # replace NA with 0
View(sage)
# set factors to factor not numeric
ix <- c(2,10:25)
data.env[ix] <- lapply(data.env[ix], as.factor)
id <- c(1,3:9,26:30)
data.env[id] <- lapply(data.env[id], as.numeric)
data <- data.env[,c(1,3:9,26:30)]
# look at distance methods
rankindex(sage, data, c("euc","man","bray", "jac", "kul"))
# run metaMDS
ord <- metaMDS(comm=data,distance="bray",trace=FALSE, k=3)
ord # k2=0.156 ~16%  # k3=.091   #k4=.069   #k5=.053  #k6=.046
stressplot(ord)
fit.sage <- envfit(ord, sage,perm=1000)
fit.sage
variableScores <- ord$species # Soil variable scores
sampleScores <- ord$points # Plot scores
View(sampleScores)
View(variableScores)
a12 <- readRDS("F:/SageNMDSvariables/a12.Rdata")
a23 <- readRDS("F:/SageNMDSvariables/a23.Rdata")
a13 <- readRDS("F:/SageNMDSvariables/a13.Rdata")
plot(a12)
title(main = "NMDS 1&2")
plot(fit.sage,col="blue", cex=0.9,font=2)
plot(a12)
title(main = "NMDS 1&2")
plot(fit.sage,col="blue", cex=0.9,font=2)
orditkplot(ord, display="species",choices=c(1,2), col="black", cex=0.7, pcol="gray",pch="+",xlim=c(-0.15,0.1),ylim=c(-0.2,0.2))
saveRDS(a12, file="F:/SageNMDSvariables/a12.Rdata")
a12 <- readRDS("F:/SageNMDSvariables/a12.Rdata")
plot(a12)
title(main = "NMDS 1&2")
plot(fit.sage,col="blue", cex=0.9,font=2)
plot(a23)
title(main = "NMDS 2&3")
plot(fit.sage,col="blue", cex=0.9,font=2)
plot(a13)
title(main = "NMDS 1&3")
plot(fit.sage,col="blue", cex=0.9,font=2)
rel.l.total <- read.csv("F:/ShrubDensity/HeightClass/LiveSizeClassTotalPctCover.csv", header=TRUE, row.names=1)
rel.d.total <- read.csv("F:/ShrubDensity/HeightClass/DeadSizeClassTotalPctCover.csv", header=TRUE, row.names=1)
rel.l.d.total <- read.csv("F:/ShrubDensity/HeightClass/LiveDeadSizeClassTotalPctCover.csv", header=TRUE, row.names=1)
den.l <- read.csv("F:/ShrubDensity/HeightClass/LiveDensityM2Class.csv", header=TRUE, row.names=1)
den.d <- read.csv("F:/ShrubDensity/HeightClass/DeadDensityM2Class.csv", header=TRUE, row.names=1)
den.l.d <- read.csv("F:/ShrubDensity/HeightClass/LiveDeadDensityM2Class.csv", header=TRUE, row.names=1)
rel.l.total[is.na(rel.l.total)] <- 0 # replace NA with 0
rel.d.total[is.na(rel.d.total)] <- 0 # replace NA with 0
rel.l.d.total[is.na(rel.l.d.total)] <- 0 # replace NA with 0
fit.rlt <- envfit(ord,rel.l.total,perm=1000)
fit.rdt <- envfit(ord,rel.d.total,perm=1000)
fit.rldt <- envfit(ord,rel.l.d.total,perm=1000)
fit.den.l <- envfit(ord,den.l,perm=1000)
fit.den.d <- envfit(ord,den.d,perm=1000)
fit.den.l.d <- envfit(ord,den.l.d,perm=1000)
fit.rlt
fit.rdt
fit.rldt
fit.den.l
fit.den.d
fit.den.l.d
plot(bray)
title(main = "NMDS Relative Cover")
plot(fit.rldt,col="blue", cex=0.9,font=2)
plot(fit.rdt,col="red", cex=0.9,font=2)
plot(fit.rlt,col="chartreuse4", cex=0.9,font=2)
plot(bray)
title(main = "NMDS Density")
plot(fit.den.l.d,col="blue", cex=0.9,font=2)
plot(fit.den.d,col="red", cex=0.9,font=2)
plot(fit.den.l,col="chartreuse4", cex=0.9,font=2)
rel.l.total <- read.csv("F:/ShrubDensity/HeightClass/LiveSizeClassTotalPctCover.csv", header=TRUE, row.names=1)
rel.d.total <- read.csv("F:/ShrubDensity/HeightClass/DeadSizeClassTotalPctCover.csv", header=TRUE, row.names=1)
rel.l.d.total <- read.csv("F:/ShrubDensity/HeightClass/LiveDeadSizeClassTotalPctCover.csv", header=TRUE, row.names=1)
den.l <- read.csv("F:/ShrubDensity/HeightClass/LiveDensityM2Class.csv", header=TRUE, row.names=1)
den.d <- read.csv("F:/ShrubDensity/HeightClass/DeadDensityM2Class.csv", header=TRUE, row.names=1)
den.l.d <- read.csv("F:/ShrubDensity/HeightClass/LiveDeadDensityM2Class.csv", header=TRUE, row.names=1)
rel.l.total[is.na(rel.l.total)] <- 0 # replace NA with 0
rel.d.total[is.na(rel.d.total)] <- 0 # replace NA with 0
rel.l.d.total[is.na(rel.l.d.total)] <- 0 # replace NA with 0
fit.rlt <- envfit(ord,rel.l.total,perm=1000)
fit.rdt <- envfit(ord,rel.d.total,perm=1000)
fit.rldt <- envfit(ord,rel.l.d.total,perm=1000)
fit.den.l <- envfit(ord,den.l,perm=1000)
fit.den.d <- envfit(ord,den.d,perm=1000)
fit.den.l.d <- envfit(ord,den.l.d,perm=1000)
fit.rlt
fit.rdt
fit.rldt
fit.den.l
fit.den.d
fit.den.l.d
plot(bray)
title(main = "NMDS Relative Cover")
plot(fit.rldt,col="blue", cex=0.9,font=2)
plot(fit.rdt,col="red", cex=0.9,font=2)
plot(fit.rlt,col="chartreuse4", cex=0.9,font=2)
plot(a12)
title(main = "NMDS Relative Cover 1&2")
plot(fit.rldt,col="blue", cex=0.9,font=2)
plot(fit.rdt,col="red", cex=0.9,font=2)
plot(fit.rlt,col="chartreuse4", cex=0.9,font=2)
plot(bray)
title(main = "NMDS Density1&2")
plot(fit.den.l.d,col="blue", cex=0.9,font=2)
plot(fit.den.d,col="red", cex=0.9,font=2)
plot(fit.den.l,col="chartreuse4", cex=0.9,font=2)
plot(a12)
title(main = "NMDS Relative Cover 1&2")
plot(fit.rldt,col="blue", cex=0.9,font=2)
plot(fit.rdt,col="red", cex=0.9,font=2)
plot(fit.rlt,col="chartreuse4", cex=0.9,font=2)
plot(a12)
title(main = "NMDS Density1&2")
plot(fit.den.l.d,col="blue", cex=0.9,font=2)
plot(fit.den.d,col="red", cex=0.9,font=2)
plot(fit.den.l,col="chartreuse4", cex=0.9,font=2)
plot(a23)
title(main = "NMDS Relative Cover 2&3")
plot(fit.rldt,col="blue", cex=0.9,font=2)
plot(fit.rdt,col="red", cex=0.9,font=2)
plot(fit.rlt,col="chartreuse4", cex=0.9,font=2)
plot(a23)
title(main = "NMDS Density 2&3")
plot(fit.den.l.d,col="blue", cex=0.9,font=2)
plot(fit.den.d,col="red", cex=0.9,font=2)
plot(fit.den.l,col="chartreuse4", cex=0.9,font=2)
plot(a13)
title(main = "NMDS Relative Cover 1&3")
plot(fit.rldt,col="blue", cex=0.9,font=2)
plot(fit.rdt,col="red", cex=0.9,font=2)
plot(fit.rlt,col="chartreuse4", cex=0.9,font=2)
plot(a13)
title(main = "NMDS Density 1&3")
plot(fit.den.l.d,col="blue", cex=0.9,font=2)
plot(fit.den.d,col="red", cex=0.9,font=2)
plot(fit.den.l,col="chartreuse4", cex=0.9,font=2)
plot(a12)
title(main = "NMDS 1&2")
plot(fit.sage,col="blue", cex=0.9,font=2)
plot(a23)
title(main = "NMDS 2&3")
plot(fit.sage,col="blue", cex=0.9,font=2)
plot(a13)
title(main = "NMDS 1&3")
plot(fit.sage,col="blue", cex=0.9,font=2)
plot(a12)
title(main = "NMDS Relative Cover 1&2")
plot(fit.rldt,col="blue", cex=0.9,font=2)
plot(fit.rdt,col="red", cex=0.9,font=2)
plot(fit.rlt,col="chartreuse4", cex=0.9,font=2)
plot(a12)
title(main = "NMDS Density1&2")
plot(fit.den.l.d,col="blue", cex=0.9,font=2)
plot(fit.den.d,col="red", cex=0.9,font=2)
plot(fit.den.l,col="chartreuse4", cex=0.9,font=2)
plot(a23)
title(main = "NMDS Relative Cover 2&3")
plot(fit.rldt,col="blue", cex=0.9,font=2)
plot(fit.rdt,col="red", cex=0.9,font=2)
plot(fit.rlt,col="chartreuse4", cex=0.9,font=2)
plot(a23)
title(main = "NMDS Density 2&3")
plot(fit.den.l.d,col="blue", cex=0.9,font=2)
plot(fit.den.d,col="red", cex=0.9,font=2)
plot(fit.den.l,col="chartreuse4", cex=0.9,font=2)
plot(a13)
title(main = "NMDS Relative Cover 1&3")
plot(fit.rldt,col="blue", cex=0.9,font=2)
plot(fit.rdt,col="red", cex=0.9,font=2)
plot(fit.rlt,col="chartreuse4", cex=0.9,font=2)
plot(a13)
title(main = "NMDS Density 1&3")
plot(fit.den.l.d,col="blue", cex=0.9,font=2)
plot(fit.den.d,col="red", cex=0.9,font=2)
plot(fit.den.l,col="chartreuse4", cex=0.9,font=2)
orditkplot(ord, display="species",choices=c(1,3), col="black", cex=0.7, pcol="gray",pch="+",xlim=c(-0.15,0.1),ylim=c(-0.1,0.15))
saveRDS(a13, file="F:/SageNMDSvariables/a13.Rdata")
#install.packages("vegan")
library(vegan)
library(MASS)
library(colorspace)
data <- read.csv("F:/LPI/Output/USGSLPIPercentCover.csv",header=TRUE, row.names=1)
e.data.mds<-metaMDS(comm=data,distance="euc",trace=FALSE)
e.data.mds #.09
plot.sc = scores(e.data.mds)
stressplot(e.data.mds)
data.env <- read.csv("F:/Soils/SoilEnvironmentaldataUSGSApril.csv",header=TRUE, row.names=1)
data.env[is.na(data.env)] <- 0 # replace NA with 0
data.sage <- read.csv("F:/SageNMDSvariables/Sage.Env.April.csv",header=TRUE,row.names=1)
data.sage[is.na(data.sage)] <- 0 # replace NA with 0
data.l <- read.csv("F:/ShrubDensity/HeightClass/LivePlotbySizeClass.csv", header=TRUE, row.names=1)
data.d <- read.csv("F:/ShrubDensity/HeightClass/DeadPlotbySizeClass.csv", header=TRUE, row.names=1)
fit.env <- envfit(e.data.mds,data.env,perm=1000)
fit.sage <- envfit(e.data.mds, data.sage,perm=1000)
fit.env
orditkplot(e.data.mds, display="species", col="black", cex=0.7, pcol="gray",pch="+",xlim=c(-0.4,0.25),ylim=c(-0.2,0.25))
Plot <- readRDS("F:/SageNMDSvariables/Plot.Rdata")
plot(Plot)
title(main = "NMDS and Soils")
plot(sig.fit.env,col="blue", cex=0.7,font=2)
sig.data.env<-data.env[,c(4,11,14,15,41)]
sig.data.env
plot(sig.fit.env,col="blue", cex=0.7,font=2)
sig.fit.env<-envfit(e.data.mds,sig.data.env,perm=1000)
sig.fit.env # Check that you pulled up the right factors.
plot(sig.fit.env,col="blue", cex=0.7,font=2)
data <- read.csv("F:/LPI/Output/USGSLPIPercentCover.csv",header=TRUE, row.names=1)
data.i <- subset(data, select = c(SPCR,PIED,LAOC3,OPPO,KRLA2,JUOS,HECO26,GUSA2,GUSA2.D,CHVI8,BRTE,BOGR2.D,BOGR2,Bare.Soil,ATCA2.D,ATCA2,ARTR2,ARTR2.D,AMID,ACHY) )
data.g <- subset(data, select = c(SPCR,HECO26,BRTE,BOGR2.D,BOGR2,Bare.Soil,ACHY) )
data.s <- subset(data, select = c(PIED,KRLA2,JUOS,CHVI8,Bare.Soil,ATCA2.D,ATCA2,ARTR2,ARTR2.D) )
data.f <- subset(data, select = c(LAOC3,OPPO,Bare.Soil,AMID) )
# plot variance of columns
mar <- par()$mar
par(mar=mar+c(0,5,0,0))
barplot(sapply(data.s, var), horiz=T, las=1, cex.names=0.5)
barplot(sapply(data.s, var), horiz=T, las=1, cex.names=0.5, log='x')
par(mar=mar)
# Scale
data2 <- data.frame(scale(data.s))
# Verify variance is uniform
plot(sapply(data2, var))
# Proceed with principal components
pc <- princomp(data2)
plot(pc)
plot(pc, type='l')
summary(pc) # 3 components is 'elbow' but does not explain >85% variance(would need 23 components)(only explains about 7%)
# First four principal components
comp <- data.frame(pc$scores[,1:4])
# Plot
plot(comp, pch=16, col=rgb(0,0,0,0.5))
wss <- (nrow(comp)-1)*sum(apply(comp,2,var))
for (i in 2:15) wss[i] <- sum(kmeans(comp,
centers=i)$withinss)
plot(1:15, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares")
# From scree plot elbow occurs at k = 4 (or 6?)
# Apply k-means with k=4 (then try 6)
k <- kmeans(comp, 6, nstart=25, iter.max=1000)
library(RColorBrewer)
library(scales)
palette(alpha(brewer.pal(9,'Set1'), 0.5))
plot(comp, col=k$clust, pch=16)
sort(table(k$clust))
clust <- names(sort(table(k$clust)))
# First cluster
row.names(data[k$clust==clust[1],])
# Second Cluster
row.names(data[k$clust==clust[2],])
# Third Cluster
row.names(data[k$clust==clust[3],])
# Fourth Cluster
row.names(data[k$clust==clust[4],])
# Fifth Cluster
row.names(data[k$clust==clust[5],])
# Sixth Cluster
row.names(data[k$clust==clust[6],])
# Compare accommodation by cluster in boxplot
boxplot(data$Bare.Soil ~ k$cluster,
xlab='Cluster', ylab='Bare.Soil',
main='Bare.Soil by Cluster')
# Compare accommodation by cluster in boxplot
boxplot(data$ARTR2 ~ k$cluster,
xlab='Cluster', ylab='ARTR2',
main='ARTR2 by Cluster')
# Compare accommodation by cluster in boxplot
boxplot(data$ARTR2.D ~ k$cluster,
xlab='Cluster', ylab='ARTR2.D',
main='ARTR2.D by Cluster')
# Compare accommodation by cluster in boxplot
boxplot(data$ATCA2 ~ k$cluster,
xlab='Cluster', ylab='ATCA2',
main='ATCA2 by Cluster')
data <- read.csv("F:/LPI/Output/USGSLPIPercentCover.csv",header=TRUE, row.names=1)
# plot variance of columns
mar <- par()$mar
par(mar=mar+c(0,5,0,0))
barplot(sapply(data, var), horiz=T, las=1, cex.names=0.5)
barplot(sapply(data, var), horiz=T, las=1, cex.names=0.5, log='x')
par(mar=mar)
# Scale
data2 <- data.frame(scale(data))
# Verify variance is uniform
plot(sapply(data2, var))
# Proceed with principal components
pc <- princomp(data2)
plot(pc)
plot(pc, type='l')
summary(pc) # 3 components is 'elbow' but does not explain >85% variance(would need 23 components)(only explains about 7%)
comp <- data.frame(pc$scores[,1:3])
# Plot
plot(comp, pch=16, col=rgb(0,0,0,0.5))
wss <- (nrow(comp)-1)*sum(apply(comp,2,var))
for (i in 2:15) wss[i] <- sum(kmeans(comp,
centers=i)$withinss)
plot(1:15, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares")
# From scree plot elbow occurs at k = 4 (or 6?)
# Apply k-means with k=4 (then try 6)
k <- kmeans(comp, 4, nstart=25, iter.max=1000)
library(RColorBrewer)
library(scales)
palette(alpha(brewer.pal(9,'Set1'), 0.5))
plot(comp, col=k$clust, pch=16)
sort(table(k$clust))
clust <- names(sort(table(k$clust)))
# First cluster
row.names(data[k$clust==clust[1],])
# Second Cluster
row.names(data[k$clust==clust[2],])
# Third Cluster
row.names(data[k$clust==clust[3],])
# Fourth Cluster
row.names(data[k$clust==clust[4],])
boxplot(data$ARTR2 ~ k$cluster,
xlab='Cluster', ylab='KRLA',
main='KRLA by Cluster')
boxplot(data$KRLA2 ~ k$cluster,
xlab='Cluster', ylab='KRLA',
main='KRLA by Cluster')
# Compare accommodation by cluster in boxplot
boxplot(data$KRLA2.D ~ k$cluster,
xlab='Cluster', ylab='KRLA,D',
main='KRLA.D by Cluster')
# Compare accommodation by cluster in boxplot
boxplot(data$ARTR2.D ~ k$cluster,
xlab='Cluster', ylab='ARTR2.D',
main='ARTR2.D by Cluster')
boxplot(data$ARTR2.D ~ k$cluster,
xlab='Cluster', ylab='ARTR2.D',
main='ARTR2.D by Cluster')
boxplot(data$KRLA2 ~ k$cluster,
xlab='Cluster', ylab='KRLA2',
main='KRLA2 by Cluster')
boxplot(data$ARTR2 ~ k$cluster,
xlab='Cluster', ylab='ARTR2',
main='ARTR2 by Cluster')
boxplot(data$ARTR2.D ~ k$cluster,
xlab='Cluster', ylab='ARTR2.D',
main='ARTR2.D by Cluster')
boxplot(data$KRLA2 ~ k$cluster,
xlab='Cluster', ylab='KRLA2',
main='KRLA2 by Cluster')
boxplot(data$KRLA2.D ~ k$cluster,
xlab='Cluster', ylab='KRLA2.D',
main='KRLA2.D by Cluster')
boxplot(data$ATCA2 ~ k$cluster,
xlab='Cluster', ylab='ATCA2',
main='ATCA2 by Cluster')
boxplot(data$ATCA2.D ~ k$cluster,
xlab='Cluster', ylab='ATCA2.D',
main='ATCA2.D by Cluster')
data.env <- read.csv("F:/Soils/SoilEnvironmentaldataUSGSApril.csv",header=TRUE, row.names=1)
data.env[is.na(data.env)] <- 0 # replace NA with 0
#function "envfit" fits environmental vectors or factors onto an ordination.
#requires ordination plot first before plot(fit)
fit.env <- envfit(e.data.mds,data.env,perm=1000)
fit.env <- envfit(plot,data.env,perm=1000)
fit.env <- envfit(k,data.env,perm=1000)
require(vegan)
require(vegan)
data <- read.csv("F:/LPI/Output/USGSLPIPercentCover.csv",header=TRUE, row.names=1)
dij <- vegdist(data) ## bray curtis dissimilarity
dij
clu <- hclust(dij, method = "average")
grp <- cutree(clu, 3)
grp
set.seed(2) ## setting a seed to make this reproducible
ord <- metaMDS(data)
col <- c("red2", "green4", "mediumblue")
col[grp]
plot(ord, type = "n", display = "sites")
points(ord, col = col[grp], bg = col[grp], pch = 21)
legend("topright", legend = paste("Cluster", 1:3),
col = col, pt.bg = col, bty = "n", pch = 21)
ordihull(ord, groups = grp, display = "sites")
k <- kmeans(comp, 6, nstart=25, iter.max=1000)
wss <- (nrow(data)-1)*sum(apply(data,2,var))
for (i in 2:15) wss[i] <- sum(kmeans(data,
centers=i)$withinss)
plot(1:15, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares")
# From scree plot elbow occurs at k = 4 (or 6?)
# Apply k-means with k=4 (then try 6)
k <- kmeans(data, 6, nstart=25, iter.max=1000)
k <- kmeans(data, 4, nstart=25, iter.max=1000)
library(RColorBrewer)
library(scales)
palette(alpha(brewer.pal(9,'Set1'), 0.5))
plot(data, col=k$clust, pch=16)
plot(data, col=k$clust, pch=16)
set.seed(2) ## setting a seed to make this reproducible
ord <- metaMDS(data)
col <- c("red2", "green4", "mediumblue", "blue2")
col[grp]
plot(ord, type = "n", display = "sites")
points(ord, col = col[grp], bg = col[grp], pch = 21)
legend("topright", legend = paste("Cluster", 1:3),
plot(ord, type = "n", display = "sites")
points(ord, col = col[grp], bg = col[grp], pch = 21)
legend("topright", legend = paste("Cluster", 1:4),
col = col, pt.bg = col, bty = "n", pch = 21)
col <- c("red2", "green4", "mediumblue", "purple2")
col[grp]
plot(ord, type = "n", display = "sites")
points(ord, col = col[grp], bg = col[grp], pch = 21)
legend("topright", legend = paste("Cluster", 1:4),
col = col, pt.bg = col, bty = "n", pch = 21)
col <- c("red2", "green4", "mediumblue", "sienna")
col[grp]
plot(ord, type = "n", display = "sites")
points(ord, col = col[grp], bg = col[grp], pch = 21)
legend("topright", legend = paste("Cluster", 1:4),
col = col, pt.bg = col, bty = "n", pch = 21)
# http://stackoverflow.com/questions/12436902/overlaying-clustering-results-on-an-ordination
require(vegan)
data <- read.csv("F:/LPI/Output/USGSLPIPercentCover.csv",header=TRUE, row.names=1)
dij <- vegdist(data) ## bray curtis dissimilarity
### K-Means ###
# Determine number of clusters
wss <- (nrow(data)-1)*sum(apply(data,2,var))
for (i in 2:15) wss[i] <- sum(kmeans(data,
centers=i)$withinss)
plot(1:15, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares")
# From scree plot elbow occurs at k = 4 (or 6?)
# Apply k-means with k=4 (then try 6)
k <- kmeans(data, 4, nstart=25, iter.max=1000)
library(RColorBrewer)
library(scales)
palette(alpha(brewer.pal(9,'Set1'), 0.5))
plot(data, col=k$clust, pch=16)
set.seed(2) ## setting a seed to make this reproducible
ord <- metaMDS(data)
col <- c("red2", "green4", "mediumblue", "sienna")
col[k]
col[k$cluster]
plot(ord, type = "n", display = "sites")
points(ord, col = col[k$cluster], bg = col[k$cluster], pch = 21)
legend("topright", legend = paste("Cluster", 1:4),
col = col, pt.bg = col, bty = "n", pch = 21)
ordihull(ord, groups = grp, display = "sites")
ordihull(ord, groups = k$cluster, display = "sites")
# read in Soil environmental data
#data.env <- read.csv("F:/Soils/SoilEnvironmentalDataModWithColbyAWS.csv",header=TRUE, row.names=1)
data.env <- read.csv("F:/Soils/SoilEnvironmentaldataUSGSApril.csv",header=TRUE, row.names=1)
data.env[is.na(data.env)] <- 0 # replace NA with 0
#function "envfit" fits environmental vectors or factors onto an ordination.
#requires ordination plot first before plot(fit)
fit.env <- envfit(k,data.env,perm=1000)
fit.env <- envfit(ord,data.env,perm=1000)
fit.env
sig.data.env<-data.env[,c(4,11,14,15,24,41)]
sig.fit.env<-envfit(e.data.mds,sig.data.env,perm=1000)
sig.fit.env<-envfit(ord,sig.data.env,perm=1000)
sig.fit.env # Check that you pulled up the right factors.
#plotMDS
orditkplot(e.data.mds, display="species", col="black", cex=0.7, pcol="gray",pch="+",xlim=c(-0.4,0.25),ylim=c(-0.2,0.25))
orditkplot(ord, display="species", col="black", cex=0.7, pcol="gray",pch="+",xlim=c(-0.4,0.25),ylim=c(-0.2,0.25))
orditkplot(ord, display="species", col="black", cex=0.7, pcol="gray",pch="+",xlim=c(-2,2),ylim=c(-2,2))
saveRDS(Plot, file="F:/SageNMDSvariables/Plot.Rdata")
orditkplot(ord, display="species", col="black", cex=0.7, pcol="gray",pch="+",xlim=c(-2,2),ylim=c(-2,2))
saveRDS(Plot, file="F:/SageNMDSvariables/Plot.Rdata")
Plot <- readRDS("F:/SageNMDSvariables/Plot.Rdata")
plot(Plot)
title(main = "NMDS and Soils")
plot(sig.fit.env,col="blue", cex=0.7,font=2)
k <- kmeans(data, 4, nstart=25, iter.max=1000)
library(RColorBrewer)
library(scales)
palette(alpha(brewer.pal(9,'Set1'), 0.5))
plot(data, col=k$clust, pch=16)
set.seed(2) ## setting a seed to make this reproducible
ord <- metaMDS(data)
col <- c("red2", "green4", "mediumblue", "sienna")
col[k$cluster]
plot(ord, type = "n", display = "sites")
points(ord, col = col[k$cluster], bg = col[k$cluster], pch = 21)
legend("topright", legend = paste("Cluster", 1:4),
col = col, pt.bg = col, bty = "n", pch = 21)
ordihull(ord, groups = k$cluster, display = "sites")
plot(ord, type = "n", display = "species")
points(ord, col = col[k$cluster], bg = col[k$cluster], pch = 21)
legend("topright", legend = paste("Cluster", 1:4),
col = col, pt.bg = col, bty = "n", pch = 21)
ordihull(ord, groups = k$cluster, display = "sites")
# read in Soil environmental data
#data.env <- read.csv("F:/Soils/SoilEnvironmentalDataModWithColbyAWS.csv",header=TRUE, row.names=1)
data.env <- read.csv("F:/Soils/SoilEnvironmentaldataUSGSApril.csv",header=TRUE, row.names=1)
data.env[is.na(data.env)] <- 0 # replace NA with 0
#function "envfit" fits environmental vectors or factors onto an ordination.
#requires ordination plot first before plot(fit)
fit.env <- envfit(ord,data.env,perm=1000)
fit.env
### Choose only the significant environmental data
sig.data.env<-data.env[,c(4,11,14,15,24,41)]
sig.fit.env<-envfit(ord,sig.data.env,perm=1000)
sig.fit.env # Check that you pulled up the right factors.
#plotMDS
points(ord, sig.fit.env,col="blue", cex=0.7,font=2,col = col[k$cluster], bg = col[k$cluster], pch = 21)
plot(ord, type = "n", display = "sites")
points(ord, col = col[k$cluster], bg = col[k$cluster], pch = 21)
legend("topright", legend = paste("Cluster", 1:4),
col = col, pt.bg = col, bty = "n", pch = 21)
plot(sig.fit.env,col="blue", cex=0.7,font=2)
ordihull(ord, groups = k$cluster, display = "sites")
