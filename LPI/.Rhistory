#rankindex compares euclidean, bray-curtis, etc... for my data
rankindex(dis.matrix,data)
data<-read.csv("F:/LPI/LPIRelativeCoverCommonInExcel.csv",header=TRUE)
data<-data[data$X!='IL2_9',] #Remove IL2_9 from LPI data because it does not exist in Shrub data
write.csv(data,file="F:/LPI/data1.csv")
data<-read.csv("F:/LPI/data1.csv",header=TRUE,row.names=2)
data<-data[,2:46]
#calculate dissimilarities, use function "vegdist"in VEGAN package
data.dis<-vegdist(data,method="bray")
#data.dis
dis.matrix<-as.matrix(data.dis)
#dis.matrix
#write.csv(dis.matrix,file="F:/LPI/LPIDistanceMatrix.csv")
#rankindex compares euclidean, bray-curtis, etc... for my data
rankindex(dis.matrix,data)
data.mds<-metaMDS(comm=data,distance="euc",trace=FALSE)
data.mds
#Stress <0.10 indicates that the ordination is good "with no real
#risk of drawing false inferences" (Clarke 1993, p. 26).
# linear fit is the fit between ordination values and distances
stressplot(data.mds)
data.env<-read.csv("F:/Soils/SoilEnvironmentalData.csv",header=TRUE)
data.env<-data.env[data.env$id!='IL2_9',] #Remove IL2_9 from Soils data because it does not exist in Shrub data
write.csv(data.env,file="F:/LPI/data2.csv")
data.env<-read.csv("F:/LPI/data2.csv",header=TRUE,row.names=2)
data.env<-data.env[,2:19]
fit.env<-envfit(data.mds,data.env,perm=1000)
fit.env
sig.data.env<-data.env[,c(5:8,11,14:18)]
sig.fit.env<-envfit(data.mds,sig.data.env,perm=1000)
sig.fit.env
plot(data.mds,type="t",main="NMDS using Euclidean Distance")
ordiplot(data.mds)
ordiplot(data.mds, display ="species", type ="n")
text(data.mds, display="sites", col="blue", cex=0.7)
text(data.mds, display="species", col="red", cex=0.7)
plot(fit.env,col="black", cex=0.7)
plot(fit.a,col="orange", cex=0.7)
data.A.env<-read.csv("F:/ShrubDensity/HeightClass/AdensityM2.csv",row.names=1)
fit.a<-envfit(data.mds,data.A.env,perm=1000)
fit.a
sig.data.A.env<-data.A.env[,c()]
plot(fit.a,col="orange", cex=0.7)
warnings()
View(data.A.env)
data.B.env<-read.csv("F:/ShrubDensity/HeightClass/BdensityM2.csv")
data.C.env<-read.csv("F:/ShrubDensity/HeightClass/CdensityM2.csv")
data.D.env<-read.csv("F:/ShrubDensity/HeightClass/DdensityM2.csv")
data.E.env<-read.csv("F:/ShrubDensity/HeightClass/EdensityM2.csv")
fit.b<-envfit(data.mds,data.B.env,perm=1000)
fit.c<-envfit(data.mds,data.C.env,perm=1000)
warnings()
View(data.A.env)
View(data.B.env)
library(plyr)
shrub <- read.csv('F:/ShrubDensity/PresenceAbsence/ShrubSummary.csv')
shrub <- shrub[1:7406,c(2,3,5,6)]
shrub
#Summed shrub totals across transects 2,3, and 4
#Put into Plot by Species matrix
plotXspp<-xtabs(Total~Plot+Species, shrub)
plotXspp
write.csv(plotXspp,file="F:/ShrubDensity/PresenceAbsence/plotXspp.csv")
densityM2 <- plotXspp/180
densityM2
write.csv(densityM2,file="F:/ShrubDensity/PresenceAbsence/densityM2.csv")
densityHa <- densityM2/10000
densityHa
write.csv(densityHa,file="F:/ShrubDensity/PresenceAbsence/densityHa.csv")
pa <- (plotXspp>0)     # logical, or
pa <- (plotXspp>0)*1L  # integer 01
pa
write.csv(pa,file="F:/ShrubDensity/PresenceAbsence/ShrubPresenceAbsence.csv")
#Select only ARTR and ARTR/D presence/absence (1/0)
Sage <- pa[,3:4]
write.csv(Sage,file="F:/ShrubDensity/PresenceAbsence/SagePresenceAbsence.csv")
#Select only ARTR presence/absence (1/0)
SageLive <- pa[,3]
write.csv(SageLive,file="F:/ShrubDensity/PresenceAbsence/SageLivePresenceAbsence.csv")
#Select only ARTR/D presence/absence (1/0)
SageDead <-pa[,4]
write.csv(SageDead,file="F:/ShrubDensity/PresenceAbsence/SageDeadPresenceAbsence.csv")
View(Sage)
View(Sage)
SageClass<-read.csv("F:/ShrubDensity/PresenceAbsence/SageClasses.csv", header=T)
View(SageClass)
View(Sage)
sum1<-soilsSum[soilsSum$id!='IL2_9',] #### There is no IL2_9 in Shrub Density, missing data. So we remove it from soils data as well.
soilsSum<-read.csv("F:/Soils/SoilEnvironmentalData.csv", header=T)
Sage<-read.csv("F:/ShrubDensity/PresenceAbsence/SagePresenceAbsence.csv", header=T)
SageClass<-read.csv("F:/ShrubDensity/PresenceAbsence/SageClasses.csv", header=T)
sum1<-soilsSum[soilsSum$id!='IL2_9',] #### There is no IL2_9 in Shrub Density, missing data. So we remove it from soils data as well.
sumSage<- cbind(sum1,SageClass)
boxplot(maxDepth~Class,data = sumSage, main= 'maxDepth')
boxplot(minSand~Class,data = sumSage, main= 'minSand')
boxplot(maxSand~Class,data = sumSage, main= 'maxSand')
boxplot(minClay~Class,data = sumSage, main= 'minClay')
boxplot(maxClay~Class,data = sumSage, main= 'maxClay')
boxplot(BioticCrustClass~Class,data = sumSage, main= 'BioticCrustClass')
boxplot(CarbonateStage~Class,data = sumSage, main= 'CarbonateStage')
boxplot(maxpH~Class,data = sumSage, main= 'maxpH')
boxplot(minpH~Class,data = sumSage, main= 'minpH')
boxplot(maxDepth~ARTR2,data = sumSage, main= 'maxDepth')
View(sumSage)
write.csv(relcover,file="F:/ShrubDensity/PresenceAbsence/SageClassSoils.csv")
write.csv(sumSage,file="F:/ShrubDensity/PresenceAbsence/SageClassSoils.csv")
?regression
??regression
View(sumSage)
View(SageClass)
View(SageClass)
View(sum1)
View(soilsSum)
Density<-read.csv("F/ShrubDensity/HeightClass/PlantDenDetail.csv",header=T)
Density<-read.csv("F:/ShrubDensity/HeightClass/PlantDenDetail.csv",header=T)
View(Density)
Density<-read.csv("F:/ShrubDensity/PresenceAbsence/densityM2.csv",header=T)
View(Density)
sumDensity<- cbind(sum1,Density)
View(sumDensity)
View(sumDensity)
> with(sumDensity, plot(Elevation, ARTR2))
> title(main="Elevation (ft) vs. ARTR2")
with(sumDensity, plot(Elevation, ARTR2))
title(main="Elevation (ft) vs. ARTR2")
with(sumDensity, plot(MaxClay, ARTR2))
title(main="MaxClay (ft) vs. ARTR2")
View(sumDensity)
with(sumDensity, plot(maxClay, ARTR2))
title(main="MaxClay (ft) vs. ARTR2")
with(sumDensity, plot(ARTR2, maxClay))
soilsSum<-read.csv("F:/Soils/SoilEnvironmentalData.csv", header=T)
Sage<-read.csv("F:/ShrubDensity/PresenceAbsence/SagePresenceAbsence.csv", header=T)
SageClass<-read.csv("F:/ShrubDensity/PresenceAbsence/SageClasses.csv", header=T)
sum1<-soilsSum[soilsSum$id!='IL2_9',] #### There is no IL2_9 in Shrub Density, missing data. So we remove it from soils data as well.
sumSage<- cbind(sum1,SageClass)
write.csv(sumSage,file="F:/ShrubDensity/PresenceAbsence/SageClassSoils.csv")
soilsSum<-read.csv("F:/Soils/SoilEnvironmentalData.csv", header=T)
Sage<-read.csv("F:/ShrubDensity/PresenceAbsence/SagePresenceAbsence.csv", header=T)
SageClass<-read.csv("F:/ShrubDensity/PresenceAbsence/SageClasses.csv", header=T)
sum1<-soilsSum[soilsSum$id!='IL2_9',] #### There is no IL2_9 in Shrub Density, missing data. So we remove it from soils data as well.
sumSage<- cbind(sum1,SageClass)
write.csv(sumSage,file="F:/ShrubDensity/PresenceAbsence/SageClassSoils.csv")
boxplot(maxDepth~Class,data = sumSage, main= 'maxDepth')
boxplot(minSand~Class,data = sumSage, main= 'minSand')
boxplot(maxSand~Class,data = sumSage, main= 'maxSand')
boxplot(minClay~Class,data = sumSage, main= 'minClay')
boxplot(maxClay~Class,data = sumSage, main= 'maxClay')
boxplot(BioticCrustClass~Class,data = sumSage, main= 'BioticCrustClass')
boxplot(CarbonateStage~Class,data = sumSage, main= 'CarbonateStage')
boxplot(maxpH~Class,data = sumSage, main= 'maxpH')
boxplot(minpH~Class,data = sumSage, main= 'minpH')
library(vegan)
mydata <- read.csv("F:/LPI/LPIRelativeCoverCommonInExcel.csv",header=TRUE,row.names=1)
mydata.mds <- metaMDS(mydata)
names(mydata.mds)
mydata.mds
variableScores <- mydata.mds$species
sampleScores <- mydata.mds$points
plot(mydata.mds, type="t", display=c("species"))
plot(mydata.mds, type="n")
points(mydata.mds, display=c("sites"), choices=c(1,2), pch=3, col="red")
text(mydata.mds, display=c("species"), choices=c(1,2), col="blue", cex=0.7)
stressplot(mydata.mds)
ordiplot(mydata.mds,type="t")
library(vegan)
library(MASS)
data<-read.csv("F:/LPI/LPIRelativeCoverCommonInExcel.csv",header=TRUE)
data<-data[data$X!='IL2_9',] #Remove IL2_9 from LPI data because it does not exist in Shrub data
write.csv(data,file="F:/LPI/data1.csv")
data<-read.csv("F:/LPI/data1.csv",header=TRUE,row.names=2)
data<-data[,2:46]
#calculate dissimilarities, use function "vegdist"in VEGAN package
data.dis<-vegdist(data,method="bray")
#data.dis
dis.matrix<-as.matrix(data.dis)
#dis.matrix
#write.csv(dis.matrix,file="F:/LPI/LPIDistanceMatrix.csv")
#rankindex compares euclidean, bray-curtis, etc... for my data
rankindex(dis.matrix,data)
data.mds<-metaMDS(comm=data,distance="euc",trace=FALSE)
data.mds
#Stress <0.10 indicates that the ordination is good "with no real
#risk of drawing false inferences" (Clarke 1993, p. 26).
# linear fit is the fit between ordination values and distances
stressplot(data.mds)
data.env<-read.csv("F:/Soils/SoilEnvironmentalData.csv",header=TRUE)
data.env<-data.env[data.env$id!='IL2_9',] #Remove IL2_9 from Soils data because it does not exist in Shrub data
write.csv(data.env,file="F:/LPI/data2.csv")
data.env<-read.csv("F:/LPI/data2.csv",header=TRUE,row.names=2)
data.env<-data.env[,2:19]
#add shrub height class densities to environmental data
data.A.env<-read.csv("F:/ShrubDensity/HeightClass/AdensityM2.csv",row.names=1)
fit.env<-envfit(data.mds,data.env,perm=1000)
fit.a<-envfit(data.mds,data.A.env,perm=1000)
fit.env
fit.a
sig.data.env<-data.env[,c(5:8,11,14:18)]
sig.fit.env<-envfit(data.mds,sig.data.env,perm=1000)
sig.fit.env
sig.data.A.env<-data.A.env[,c()]
#plotMDS
plot(data.mds,type="t",main="NMDS using Euclidean Distance")
ordiplot(data.mds)
ordiplot(data.mds, display ="species", type ="n")
text(data.mds, display="sites", col="blue", cex=0.7)
text(data.mds, display="species", col="red", cex=0.7)
#plot environmental loadings
plot(fit.env,col="black", cex=0.7)
plot(fit.a,col="orange", cex=0.7)
Warnings()
warnings()
3*30
library(plyr)
library(dplyr)
library(plyr)
library(dplyr)
# LPI file too big for DIMA, broke it up into soil types to download
# Use the line totals tab from .xlsx file
begay<-read.csv('F:/LPI/Reports/LPIindicatorsBEGAY.csv')
library(plyr)
library(dplyr)
# LPI file too big for DIMA, broke it up into soil types to download
# Use the line totals tab from .xlsx file
begay<-read.csv('F:/LPI/Reports/LPIindicatorsBEGAY.csv')
library(plyr)
library(dplyr)
# LPI file too big for DIMA, broke it up into soil types to download
# Use the line totals tab from .xlsx file
begay<-read.csv('F:/LPI/Reports/LPIindicatorsBEGAY.csv')
library(plyr)
library(dplyr)
# LPI file too big for DIMA, broke it up into soil types to download
# Use the line totals tab from .xlsx file
begay<-read.csv('F:/LPI/Reports/LPIindicatorsBEGAY.csv')
library(plyr)
library(dplyr)
# LPI file too big for DIMA, broke it up into soil types to download
# Use the line totals tab from .xlsx file
begay<-read.csv('F:/LPI/Reports/LPIindicatorsBEGAY.csv')
library(plyr)
library(dplyr)
# LPI file too big for DIMA, broke it up into soil types to download
# Use the line totals tab from .xlsx file
begay<-read.csv('F:/LPI/Reports/LPIindicatorsBEGAY.csv')
library(plyr)
library(dplyr)
# LPI file too big for DIMA, broke it up into soil types to download
# Use the line totals tab from .xlsx file
begay<-read.csv('F:/LPI/Reports/LPIindicatorsBEGAY.csv')
ignacio<-read.csv('F:/LPI/Reports/LPIindicatorsIGNACIOLEANTO.csv')
mido<-read.csv('F:/LPI/Reports/LPIindicatorsMIDO.csv')
#Combined back into one LPI file
lpi3<-rbind(begay, ignacio, mido)
lpi3
write.csv(lpi3,file="F:/LPI/Output/AprilLPIofAll3Soils.csv")
View(lpi3)
View(lpi3)
View(lpi3)
View(lpi3)
lpi3$Any.Hit.N[is.na(lpi3$Any.Hit.N)] <- lpi3$X1st.Hit.N[is.na(lpi3$Any.Hit.N)]; lpi3
View(lpi3)
library(plyr)
library(dplyr)
# LPI file too big for DIMA, broke it up into soil types to download
# Use the line totals tab from .xlsx file
begay<-read.csv('F:/LPI/Reports/LPIindicatorsBEGAY.csv')
ignacio<-read.csv('F:/LPI/Reports/LPIindicatorsIGNACIOLEANTO.csv')
mido<-read.csv('F:/LPI/Reports/LPIindicatorsMIDO.csv')
#Combined back into one LPI file
lpi3<-rbind(begay, ignacio, mido)
write.csv(lpi3,file="F:/LPI/Output/AprilLPIofAll3Soils.csv")
lpi3$Any.Hit.N[is.na(lpi3$Any.Hit.N)] <- lpi3$X1st.Hit.N[is.na(lpi3$Any.Hit.N)]; lpi3
library(plyr)
library(dplyr)
# LPI file too big for DIMA, broke it up into soil types to download
# Use the line totals tab from .xlsx file
begay<-read.csv('F:/LPI/Reports/LPIindicatorsBEGAY.csv')
ignacio<-read.csv('F:/LPI/Reports/LPIindicatorsIGNACIOLEANTO.csv')
mido<-read.csv('F:/LPI/Reports/LPIindicatorsMIDO.csv')
#Combined back into one LPI file
lpi3<-rbind(begay, ignacio, mido)
write.csv(lpi3,file="F:/LPI/Output/AprilLPIofAll3Soils.csv")
View(lpi3)
lpi3$Any.Hit.N[is.na(lpi3$Any.Hit.N)] <- lpi3$X1st.Hit.N[is.na(lpi3$Any.Hit.N)]; lpi3
View(lpi3)
View(lpi3)
library(plyr)
library(dplyr)
# LPI file too big for DIMA, broke it up into soil types to download
# Use the line totals tab from .xlsx file
begay<-read.csv('F:/LPI/Reports/LPIindicatorsBEGAY.csv')
ignacio<-read.csv('F:/LPI/Reports/LPIindicatorsIGNACIOLEANTO.csv')
mido<-read.csv('F:/LPI/Reports/LPIindicatorsMIDO.csv')
#Combined back into one LPI file
lpi3<-rbind(begay, ignacio, mido)
write.csv(lpi3,file="F:/LPI/Output/AprilLPIofAll3Soils.csv")
lpi3$Any.Hit.N[is.na(lpi3$Any.Hit.N)] <- lpi3$X1st.Hit.N[is.na(lpi3$Any.Hit.N)]; lpi3
View(lpi3)
library(plyr)
library(dplyr)
# LPI file too big for DIMA, broke it up into soil types to download
# Use the line totals tab from .xlsx file
begay<-read.csv('F:/LPI/Reports/LPIindicatorsBEGAY.csv')
ignacio<-read.csv('F:/LPI/Reports/LPIindicatorsIGNACIOLEANTO.csv')
mido<-read.csv('F:/LPI/Reports/LPIindicatorsMIDO.csv')
#Combined back into one LPI file
lpi3<-rbind(begay, ignacio, mido)
write.csv(lpi3,file="F:/LPI/Output/AprilLPIofAll3Soils.csv")
View(lpi3)
lpi3$Any.Hit.N[is.na(lpi3$Any.Hit.N)] <- lpi3$X1st.Hit.N[is.na(lpi3$Any.Hit.N)]; lpi3
View(lpi3)
#Put into plot by species matrix
lpiApril<-xtabs(Any.Hit.N~Plot+Indicator, lpi3)
lpiApril
write.csv(lpiApril,file="F:/LPI/Output/AprilLPIplotXspp.csv",row.names=TRUE)
lpiApril<-read.csv('F:/LPI/Output/AprilLPIplotXspp.csv',row.names=1)
View(lpiApril)
8+8+8+6+2
8+8+6+2+3
42+45+48+45+42
40+45+48+45+42
23+20+29+21+23
library(plyr)
library(dplyr)
# LPI file too big for DIMA, broke it up into soil types to download
# Use the line totals tab from .xlsx file
begay<-read.csv('F:/LPI/Reports/LPIindicatorsBEGAY.csv')
ignacio<-read.csv('F:/LPI/Reports/LPIindicatorsIGNACIOLEANTO.csv')
mido<-read.csv('F:/LPI/Reports/LPIindicatorsMIDO.csv')
#Combined back into one LPI file
lpi3<-rbind(begay, ignacio, mido)
write.csv(lpi3,file="F:/LPI/Output/AprilLPIofAll3Soils.csv")
lpi3$Any.Hit.N[is.na(lpi3$Any.Hit.N)] <- lpi3$X1st.Hit.N[is.na(lpi3$Any.Hit.N)]; lpi3
#Put into plot by species matrix
lpiApril<-xtabs(Any.Hit.N~Plot+Indicator, lpi3)
write.csv(lpiApril,file="F:/LPI/Output/AprilLPIplotXspp.csv",row.names=TRUE)
lpiApril<-read.csv('F:/LPI/Output/AprilLPIplotXspp.csv',row.names=1)
View(lpiApril)
a <-select(lpiApril,contains(".DP"))
ls(a)
ls(lpiApril)
ls(a)
lpiApril$ARTR2=lpiApril$ARTR2+lpiApril$ARTR2.DP
lpiApril$ATCA2=lpiApril$ATCA2+lpiApril$ATCA2.DP
lpiApril$CHVI8=lpiApril$CHVI8+lpiApril$CHVI8.DP
lpiApril$HECO26=lpiApril$HECO26+lpiApril$HECO26.DP
lpiApril$KRLA2=lpiApril$KRLA2+lpiApril$KRLA2.DP
lpiApril$MAFR3=lpiApril$MAFR3+lpiApril$MAFR3.DP
lpiApril$OPPO=lpiApril$OPPO+lpiApril$OPPO.DP
lpiApril$SHRO=lpiApril$SHRO+lpiApril$SHRO.DP
lpiApril <- subset(lpiApril, select=-c(ARTR2.DP,ATCA2.DP,CHVI8.DP,HECO26.DP,KRLA2.DP,MAFR3.DP,OPPO.DP,SHRO.DP))
library(plyr)
library(dplyr)
# LPI file too big for DIMA, broke it up into soil types to download
# Use the line totals tab from .xlsx file
begay<-read.csv('F:/LPI/Reports/LPIindicatorsBEGAY.csv')
ignacio<-read.csv('F:/LPI/Reports/LPIindicatorsIGNACIOLEANTO.csv')
mido<-read.csv('F:/LPI/Reports/LPIindicatorsMIDO.csv')
#Combined back into one LPI file
lpi3<-rbind(begay, ignacio, mido)
write.csv(lpi3,file="F:/LPI/Output/AprilLPIofAll3Soils.csv")
lpi3$Any.Hit.N[is.na(lpi3$Any.Hit.N)] <- lpi3$X1st.Hit.N[is.na(lpi3$Any.Hit.N)]; lpi3
#Put into plot by species matrix
lpiApril<-xtabs(Any.Hit.N~Plot+Indicator, lpi3)
write.csv(lpiApril,file="F:/LPI/Output/AprilLPIplotXspp.csv",row.names=TRUE)
lpiApril<-read.csv('F:/LPI/Output/AprilLPIplotXspp.csv',row.names=1)
# Combine DP and live of spp,
a <-select(lpiApril,contains(".DP"))
ls(a)
lpiApril$ARTR2=lpiApril$ARTR2+lpiApril$ARTR2.DP
lpiApril$ATCA2=lpiApril$ATCA2+lpiApril$ATCA2.DP
lpiApril$CHVI8=lpiApril$CHVI8+lpiApril$CHVI8.DP
lpiApril$HECO26=lpiApril$HECO26+lpiApril$HECO26.DP
lpiApril$KRLA2=lpiApril$KRLA2+lpiApril$KRLA2.DP
lpiApril$MAFR3=lpiApril$MAFR3+lpiApril$MAFR3.DP
lpiApril$OPPO=lpiApril$OPPO+lpiApril$OPPO.DP
lpiApril$SHRO=lpiApril$SHRO+lpiApril$SHRO.DP
lpiApril <- subset(lpiApril, select=-c(ARTR2.DP,ATCA2.DP,CHVI8.DP,HECO26.DP,KRLA2.DP,MAFR3.DP,OPPO.DP,SHRO.DP))
# Calculate density per m2
library(plyr)
library(dplyr)
# LPI file too big for DIMA, broke it up into soil types to download
# Use the line totals tab from .xlsx file
begay<-read.csv('F:/LPI/Reports/LPIindicatorsBEGAY.csv')
ignacio<-read.csv('F:/LPI/Reports/LPIindicatorsIGNACIOLEANTO.csv')
mido<-read.csv('F:/LPI/Reports/LPIindicatorsMIDO.csv')
#Combined back into one LPI file
lpi3<-rbind(begay, ignacio, mido)
write.csv(lpi3,file="F:/LPI/Output/AprilLPIofAll3Soils.csv")
lpi3$Any.Hit.N[is.na(lpi3$Any.Hit.N)] <- lpi3$X1st.Hit.N[is.na(lpi3$Any.Hit.N)]; lpi3
#Put into plot by species matrix
lpiApril<-xtabs(Any.Hit.N~Plot+Indicator, lpi3)
write.csv(lpiApril,file="F:/LPI/Output/AprilLPIplotXspp.csv",row.names=TRUE)
lpiApril<-read.csv('F:/LPI/Output/AprilLPIplotXspp.csv',row.names=1)
# Combine DP and live of spp,
a <-select(lpiApril,contains(".DP"))
ls(a)
lpiApril$ARTR2=lpiApril$ARTR2+lpiApril$ARTR2.DP
lpiApril$ATCA2=lpiApril$ATCA2+lpiApril$ATCA2.DP
lpiApril$CHVI8=lpiApril$CHVI8+lpiApril$CHVI8.DP
lpiApril$HECO26=lpiApril$HECO26+lpiApril$HECO26.DP
lpiApril$KRLA2=lpiApril$KRLA2+lpiApril$KRLA2.DP
lpiApril$MAFR3=lpiApril$MAFR3+lpiApril$MAFR3.DP
lpiApril$OPPO=lpiApril$OPPO+lpiApril$OPPO.DP
lpiApril$SHRO=lpiApril$SHRO+lpiApril$SHRO.DP
lpiApril <- subset(lpiApril, select=-c(ARTR2.DP,ATCA2.DP,CHVI8.DP,HECO26.DP,KRLA2.DP,MAFR3.DP,OPPO.DP,SHRO.DP))
# Calculate density per m2
den<-read.csv('F:/LPI/Output/AprilLPIplotXspp.csv',row.names=1)
View(lpiApril)
den<-lpiApril
den <- den/150 # (5 plots)*(30 meters)=150
View(den)
View(den)
den <- subset(den, select=-c(Bare.Soil,Total.Foliar,Total.Litter))
lpiApril <- subset(lpiApril, select=-c(Bare.Soil,Total.Foliar,Total.Litter))
relcoverApril<-lpiApril/rowSums(lpiApril)
relcoverApril
write.csv(relcoverApril,file="F:/LPI/AprilLPIRelativeCover.csv")
relsum <- colSums(relcoverApril != 0)
relsum
relcoverApril[65,] <- colSums(relcoverApril != 0)
relcoverApril[65,]
View(relcoverApril)
library(plyr)
library(dplyr)
# LPI file too big for DIMA, broke it up into soil types to download
# Use the line totals tab from .xlsx file
begay<-read.csv('F:/LPI/Reports/LPIindicatorsBEGAY.csv')
ignacio<-read.csv('F:/LPI/Reports/LPIindicatorsIGNACIOLEANTO.csv')
mido<-read.csv('F:/LPI/Reports/LPIindicatorsMIDO.csv')
#Combined back into one LPI file
lpi3<-rbind(begay, ignacio, mido)
write.csv(lpi3,file="F:/LPI/Output/AprilLPIofAll3Soils.csv")
lpi3$Any.Hit.N[is.na(lpi3$Any.Hit.N)] <- lpi3$X1st.Hit.N[is.na(lpi3$Any.Hit.N)]; lpi3
#Put into plot by species matrix
lpiApril<-xtabs(Any.Hit.N~Plot+Indicator, lpi3)
write.csv(lpiApril,file="F:/LPI/Output/AprilLPIplotXspp.csv",row.names=TRUE)
lpiApril<-read.csv('F:/LPI/Output/AprilLPIplotXspp.csv',row.names=1)
# Combine DP and live of spp,
a <-select(lpiApril,contains(".DP"))
ls(a)
lpiApril$ARTR2=lpiApril$ARTR2+lpiApril$ARTR2.DP
lpiApril$ATCA2=lpiApril$ATCA2+lpiApril$ATCA2.DP
lpiApril$CHVI8=lpiApril$CHVI8+lpiApril$CHVI8.DP
lpiApril$HECO26=lpiApril$HECO26+lpiApril$HECO26.DP
lpiApril$KRLA2=lpiApril$KRLA2+lpiApril$KRLA2.DP
lpiApril$MAFR3=lpiApril$MAFR3+lpiApril$MAFR3.DP
lpiApril$OPPO=lpiApril$OPPO+lpiApril$OPPO.DP
lpiApril$SHRO=lpiApril$SHRO+lpiApril$SHRO.DP
lpiApril <- subset(lpiApril, select=-c(ARTR2.DP,ATCA2.DP,CHVI8.DP,HECO26.DP,KRLA2.DP,MAFR3.DP,OPPO.DP,SHRO.DP))
# Calculate density per m2
den<-lpiApril
den <- den/150 # (5 plots)*(30 meters)=150
den <- subset(den, select=-c(Bare.Soil,Total.Foliar,Total.Litter))
#add all hits on a plot basis, then divide each cell by the sum of a row
# to get how many times a spp was hit relative to how many in plot.
lpiApril <- subset(lpiApril, select=-c(Bare.Soil,Total.Foliar,Total.Litter))
relcoverApril<-lpiApril/rowSums(lpiApril)
relcoverApril
write.csv(relcoverApril,file="F:/LPI/AprilLPIRelativeCover.csv")
relcoverApril[100,] <- colSums(relcoverApril != 0)
View(relcoverApril)
View(relcoverApril)
relcoverApril[101,] <- colSums(relcoverApril)
View(relcoverApril)
library(plyr)
library(dplyr)
# LPI file too big for DIMA, broke it up into soil types to download
# Use the line totals tab from .xlsx file
begay<-read.csv('F:/LPI/Reports/LPIindicatorsBEGAY.csv')
ignacio<-read.csv('F:/LPI/Reports/LPIindicatorsIGNACIOLEANTO.csv')
mido<-read.csv('F:/LPI/Reports/LPIindicatorsMIDO.csv')
#Combined back into one LPI file
lpi3<-rbind(begay, ignacio, mido)
write.csv(lpi3,file="F:/LPI/Output/AprilLPIofAll3Soils.csv")
lpi3$Any.Hit.N[is.na(lpi3$Any.Hit.N)] <- lpi3$X1st.Hit.N[is.na(lpi3$Any.Hit.N)]; lpi3
#Put into plot by species matrix
lpiApril<-xtabs(Any.Hit.N~Plot+Indicator, lpi3)
write.csv(lpiApril,file="F:/LPI/Output/AprilLPIplotXspp.csv",row.names=TRUE)
lpiApril<-read.csv('F:/LPI/Output/AprilLPIplotXspp.csv',row.names=1)
# Combine DP and live of spp,
a <-select(lpiApril,contains(".DP"))
ls(a)
lpiApril$ARTR2=lpiApril$ARTR2+lpiApril$ARTR2.DP
lpiApril$ATCA2=lpiApril$ATCA2+lpiApril$ATCA2.DP
lpiApril$CHVI8=lpiApril$CHVI8+lpiApril$CHVI8.DP
lpiApril$HECO26=lpiApril$HECO26+lpiApril$HECO26.DP
lpiApril$KRLA2=lpiApril$KRLA2+lpiApril$KRLA2.DP
lpiApril$MAFR3=lpiApril$MAFR3+lpiApril$MAFR3.DP
lpiApril$OPPO=lpiApril$OPPO+lpiApril$OPPO.DP
lpiApril$SHRO=lpiApril$SHRO+lpiApril$SHRO.DP
lpiApril <- subset(lpiApril, select=-c(ARTR2.DP,ATCA2.DP,CHVI8.DP,HECO26.DP,KRLA2.DP,MAFR3.DP,OPPO.DP,SHRO.DP))
# Calculate density per m2
den<-lpiApril
View(den)
den <- den/150 # (5 plots)*(30 meters)=150
View(den)
den <- subset(den, select=-c(Bare.Soil,Total.Foliar,Total.Litter))
#add all hits on a plot basis, then divide each cell by the sum of a row
# to get how many times a spp was hit relative to how many in plot.
lpiApril <- subset(lpiApril, select=-c(Bare.Soil,Total.Foliar,Total.Litter))
relcoverApril<-lpiApril/rowSums(lpiApril)
View(relcoverApril)
relcoverApril
write.csv(relcoverApril,file="F:/LPI/Output/AprilLPIRelativeCover.csv")
relcoverApril[100,] <- colSums(relcoverApril != 0)
relcoverApril[101,] <- colSums(relcoverApril)
View(relcoverApril)
View(relcoverApril)
?colSums
write.csv(lpiApril,file="F:/LPI/Output/AprilLPIplotXspp.csv",row.names=TRUE)
