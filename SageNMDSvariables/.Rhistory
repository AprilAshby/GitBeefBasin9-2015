data.mds
# calculate dissimilarities, use function "vegdist"in VEGAN package
data.dis<-vegdist(data,method="bray")
dis.matrix<-as.matrix(data.dis)
# rankindex compares euclidean, bray-curtis, etc... for my data
rankindex(dis.matrix,data)
data.mds<-metaMDS(comm=data,distance="bray",trace=FALSE)
data.mds
# calculate dissimilarities, use function "vegdist"in VEGAN package
data.dis<-vegdist(data,method="bray")
dis.matrix<-as.matrix(data.dis)
# rankindex compares euclidean, bray-curtis, etc... for my data
rankindex(dis.matrix,data)
data.mds<-metaMDS(comm=data,distance="bray",trace=FALSE)
data.mds
stressplot(data.mds)
biplot(data.mds)
biplot(data.mds, scaling =-1)
pca.v <- rda(data)
pca.v
plot(pca.v)
sum(apply(data,2,var))
biplot(pca.v, scaling=-1)
biplot(pca.v, scale=TRUE)
dim(pca.v)
mod<-decorana(data)
plot(mod)
plot(mod, dis="sp")
plot(data, dis="sp")
plot(data, dis="sp")
plot(data, dis="sp")
plot(data, dis="species")
data.mds<-metaMDS(comm=data,distance="euc",trace=FALSE)
data.mds
stressplot(data.mds)
data<-read.csv("F:/LPI/AprilLPIRelativeCoverCommonInExcel.csv",header=TRUE, row.names=1)
###data<-data[,2:ncol(data)]
# calculate dissimilarities, use function "vegdist"in VEGAN package
data.dis<-vegdist(data,method="bray")
dis.matrix<-as.matrix(data.dis)
# rankindex compares euclidean, bray-curtis, etc... for my data
rankindex(dis.matrix,data)
data.mds<-metaMDS(comm=data,distance="bray",trace=FALSE)
data.mds
e.data.mds<-metaMDS(comm=data,distance="euc",trace=FALSE)
m.data.mds<-metaMDS(comm=data,distance="man",trace=FALSE)
g.data.mds<-metaMDS(comm=data,distance="gow",trace=FALSE)
b.data.mds<-metaMDS(comm=data,distance="bray",trace=FALSE)
k.data.mds<-metaMDS(comm=data,distance="kul",trace=FALSE)
e.data.mds
rankindex(dis.matrix,data)
e.data.mds<-metaMDS(comm=data,distance="euc",trace=FALSE)
e.data.mds
m.data.mds
m.data.mds<-metaMDS(comm=data,distance="man",trace=FALSE)
m.data.mds
m.data.mds<-metaMDS(comm=data,distance="man",trace=FALSE)
m.data.mds
g.data.mds
g.data.mds<-metaMDS(comm=data,distance="gow",trace=FALSE)
g.data.mds
b.data.mds<-metaMDS(comm=data,distance="bray",trace=FALSE)
b.data.mds #
b.data.mds<-metaMDS(comm=data,distance="bray",trace=FALSE)
b.data.mds #
k.data.mds<-metaMDS(comm=data,distance="kul",trace=FALSE)
k.data.mds #
k.data.mds<-metaMDS(comm=data,distance="kul",trace=FALSE)
k.data.mds #
k.data.mds<-metaMDS(comm=data,distance="kul",trace=FALSE)
k.data.mds #
data.dis<-vegdist(data,method="bray")
dis.matrix<-as.matrix(data.dis)
# rankindex compares euclidean, bray-curtis, etc... for my data
rankindex(dis.matrix,data)
data.dis<-vegdist(data,method="euc")
dis.matrix<-as.matrix(data.dis)
# rankindex compares euclidean, bray-curtis, etc... for my data
rankindex(dis.matrix,data)
data.dis<-vegdist(data,method="man")
dis.matrix<-as.matrix(data.dis)
# rankindex compares euclidean, bray-curtis, etc... for my data
rankindex(dis.matrix,data)
# calculate dissimilarities, use function "vegdist"in VEGAN package
data.dis<-vegdist(data,method="gow")
dis.matrix<-as.matrix(data.dis)
# rankindex compares euclidean, bray-curtis, etc... for my data
rankindex(dis.matrix,data)
# calculate dissimilarities, use function "vegdist"in VEGAN package
data.dis<-vegdist(data,method="kul")
dis.matrix<-as.matrix(data.dis)
# rankindex compares euclidean, bray-curtis, etc... for my data
rankindex(dis.matrix,data)
# calculate dissimilarities, use function "vegdist"in VEGAN package
data.dis<-vegdist(data,method="euc")
dis.matrix<-as.matrix(data.dis)
# rankindex compares euclidean, bray-curtis, etc... for my data
rankindex(dis.matrix,data)
e.data.mds<-metaMDS(comm=data,distance="euc",trace=FALSE)
m.data.mds<-metaMDS(comm=data,distance="man",trace=FALSE)
g.data.mds<-metaMDS(comm=data,distance="gow",trace=FALSE)
b.data.mds<-metaMDS(comm=data,distance="bray",trace=FALSE)
k.data.mds<-metaMDS(comm=data,distance="kul",trace=FALSE)
e.data.mds #.09
m.data.mds #.13
g.data.mds #.20
b.data.mds #.13
k.data.mds #.14
e.data.mds #.09
m.data.mds #.13
g.data.mds #.20
b.data.mds #.13
k.data.mds #.14
e.data.mds<-metaMDS(comm=data,distance="euc",trace=FALSE)
m.data.mds<-metaMDS(comm=data,distance="man",trace=FALSE)
g.data.mds<-metaMDS(comm=data,distance="gow",trace=FALSE)
b.data.mds<-metaMDS(comm=data,distance="bray",trace=FALSE)
k.data.mds<-metaMDS(comm=data,distance="kul",trace=FALSE)
e.data.mds #.09
m.data.mds #.13
g.data.mds #.20
b.data.mds #.13
k.data.mds #.14
stressplot(e.data.mds)
mod<-decorana(data)
plot(mod, dis="sp")
data.env <- read.csv("F:/Soils/SoilEnvironmentalDataModWithColbyAWS.csv",header=TRUE, row.names=1)
# read in Artr live and dead as environmental data
data.l <- read.csv("F:/ShrubDensity/HeightClass/LivePlotbySizeClass.csv", header=TRUE, row.names=1)
data.d <- read.csv("F:/ShrubDensity/HeightClass/DeadPlotbySizeClass.csv", header=TRUE, row.names=1)
View(data.d)
rel.l.sage <- read.csv("F:/ShrubDensity/HeightClass/LiveSizeClassSagePctCover.csv", header=TRUE, row.names=1)
rel.d.sage <- read.csv("F:/ShrubDensity/HeightClass/DeadSizeClassSagePctCover.csv", header=TRUE, row.names=1)
rel.l.total <- read.csv("F:/ShrubDensity/HeightClass/LiveSizeClassTotalPctCover.csv", header=TRUE, row.names=1)
rel.d.total <- read.csv("F:/ShrubDensity/HeightClass/DeadSizeClassTotalPctCover.csv", header=TRUE, row.names=1)
View(rel.l.sage)
View(rel.l.total)
View(rel.l.sage)
View(rel.l.total)
rel.l.sage[is.na(rel.l.sage)] <- 0 # replace NA with 0
rel.d.sage[is.na(rel.d.sage)] <- 0 # replace NA with 0
rel.l.total[is.na(rel.l.total)] <- 0 # replace NA with 0
rel.d.total[is.na(rel.d.total)] <- 0 # replace NA with 0
data.sage <- read.csv("F:/SageNMDSvariables/Sage.Env.April")
data.sage <- read.csv("F:/SageNMDSvariables/Sage.Env.April.csv",header=TRUE,row.names=1)
View(data.sage)
#install.packages("vegan")
library(vegan)
library(MASS)
library(colorspace)
# pal <- choose_palette()
#---NMDS Script for Beef Basin Data --------
# this code has been modified from Plant Community Ecology at USU and various online sources
#### Took the file F:/LPI/LPIRelativeCover.csv and used
#### SUM and COUNTIF in Excel to find the column sums and
#### number of sites each veg was found at then I manually
#### removed those with COUNTIF below 5 AND SUMS below .05 (had to both be below to be removed)
#### Also cleaned up the data (combined SALS0 and SALSO, etc...)
data<-read.csv("F:/LPI/AprilLPIRelativeCoverCommonInExcel.csv",header=TRUE, row.names=1)
###data<-data[,2:ncol(data)]
# calculate dissimilarities, use function "vegdist"in VEGAN package
data.dis<-vegdist(data,method="euc")
dis.matrix<-as.matrix(data.dis)
# rankindex compares euclidean, bray-curtis, etc... for my data
rankindex(dis.matrix,data)
e.data.mds<-metaMDS(comm=data,distance="euc",trace=FALSE)
m.data.mds<-metaMDS(comm=data,distance="man",trace=FALSE)
g.data.mds<-metaMDS(comm=data,distance="gow",trace=FALSE)
b.data.mds<-metaMDS(comm=data,distance="bray",trace=FALSE)
k.data.mds<-metaMDS(comm=data,distance="kul",trace=FALSE)
e.data.mds #.09
m.data.mds #.13
g.data.mds #.20
b.data.mds #.13
k.data.mds #.14
# Stress <0.10 indicates that the ordination is good "with no real
# risk of drawing false inferences" (Clarke 1993, p. 26).
# My stress is ~0.13
# linear fit is the fit between ordination values and distances
stressplot(e.data.mds)
###########################  ENVIRONMENTAL DATA  ###########################################
# read in Soil environmental data
data.env <- read.csv("F:/Soils/SoilEnvironmentalDataModWithColbyAWS.csv",header=TRUE, row.names=1)
# read in SageEnvironmentalNMDS data
data.sage <- read.csv("F:/SageNMDSvariables/Sage.Env.April.csv",header=TRUE,row.names=1)
# read in Artr live and dead as environmental data
data.l <- read.csv("F:/ShrubDensity/HeightClass/LivePlotbySizeClass.csv", header=TRUE, row.names=1)
data.d <- read.csv("F:/ShrubDensity/HeightClass/DeadPlotbySizeClass.csv", header=TRUE, row.names=1)
rel.l.sage <- read.csv("F:/ShrubDensity/HeightClass/LiveSizeClassSagePctCover.csv", header=TRUE, row.names=1)
rel.d.sage <- read.csv("F:/ShrubDensity/HeightClass/DeadSizeClassSagePctCover.csv", header=TRUE, row.names=1)
rel.l.total <- read.csv("F:/ShrubDensity/HeightClass/LiveSizeClassTotalPctCover.csv", header=TRUE, row.names=1)
rel.d.total <- read.csv("F:/ShrubDensity/HeightClass/DeadSizeClassTotalPctCover.csv", header=TRUE, row.names=1)
rel.l.sage[is.na(rel.l.sage)] <- 0 # replace NA with 0
rel.d.sage[is.na(rel.d.sage)] <- 0 # replace NA with 0
rel.l.total[is.na(rel.l.total)] <- 0 # replace NA with 0
rel.d.total[is.na(rel.d.total)] <- 0 # replace NA with 0
View(data.sage)
class <- read.csv('F:/ShrubDensity/HeightClass/PlantDenDetail 8-21.csv')
View(class)
class$total <- rowSums(class[,4:8]) #Sum all size classes for total density
total <- class[, c(1,2,3,9)] # Just total, size class removed
class <- class[,c (1:8)] # Just size class, total removed, for use in A-E below
#Plot by Size Class based on Speceis Code
class.order <- class[order(class$SpeciesCode),]  #sort a dataframe by the order of the elements in SpeciesCode
Sage.l <- class.order[c(573:1071),]
Sage.d <- class.order[c(1072:1543),]
View(Sage.d)
sage.l <- ddply(Sage.l, "Plot", numcolwise(sum)) # Sum all columns based on plot
sage.l <- sage.l[,-2] # remove transect total column
sage.l <- sage.l[-c(1:59),] # remove usgs data
write.csv(sage.l,file="F:/ShrubDensity/HeightClass/LivePlotbySizeClass.csv", row.names=FALSE)
sage.d <- ddply(Sage.d, "Plot", numcolwise(sum)) # Sum all columns based on plot
sage.d <- sage.d[,-2]# remove transect total column
sage.d <- sage.d[-c(1:59),] # remove usgs data
write.csv(sage.d,file="F:/ShrubDensity/HeightClass/DeadPlotbySizeClass.csv", row.names=FALSE)
View(total)
library(plyr)
class <- read.csv('F:/ShrubDensity/HeightClass/PlantDenDetail 8-21.csv')
class$total <- rowSums(class[,4:8]) #Sum all size classes for total density
total <- class[, c(1,2,3,9)] # Just total, size class removed
TotalplotXspp<-xtabs(total~Plot+SpeciesCode, total) # put in plot by spp matrix
TotaldensityM2 <- TotalplotXspp/180 # density per M2
write.csv(TotaldensityM2,file="F:/ShrubDensity/HeightClass/USGSTotalDensityM2.csv")
Total <- read.csv("F:/ShrubDensity/HeightClass/USGSTotalDensityM2.csv",row.names=1)
Total <- Total[,c(8:9)]
Total$L.D.DenM2 <- (Total$ARTR2 + Total$ARTR2.D)
# 2
# Sage density (live)
Total$L.DenM2 <- Total$ARTR2
Sage.Env.USGS <- Total[,c(3:4)]
# 3
# Proportion Sage individuals alive (talk to Susan about how to deal with sage absences)
# 4
# Proportion Sage cover alive
# 5
# Sage relative cover (live+dead)
TotalplotXspp<-xtabs(total~Plot+SpeciesCode, total) # put in plot by spp matrix
write.csv(TotalplotXspp,file="F:/ShrubDensity/HeightClass/USGSTotalplotXspp.csv")
Total <- read.csv("F:/ShrubDensity/HeightClass/USGSTotalplotXspp.csv",row.names=1)
View(Total)
rowSums(Total)
data.sage[is.na(data.sage)] <- 0 # replace NA with 0
library(vegan)
library(MASS)
library(colorspace)
data<-read.csv("F:/LPI/AprilLPIRelativeCoverCommonInExcel.csv",header=TRUE, row.names=1)
###data<-data[,2:ncol(data)]
# calculate dissimilarities, use function "vegdist"in VEGAN package
data.dis<-vegdist(data,method="euc")
dis.matrix<-as.matrix(data.dis)
# rankindex compares euclidean, bray-curtis, etc... for my data
rankindex(dis.matrix,data)
e.data.mds<-metaMDS(comm=data,distance="euc",trace=FALSE)
m.data.mds<-metaMDS(comm=data,distance="man",trace=FALSE)
g.data.mds<-metaMDS(comm=data,distance="gow",trace=FALSE)
b.data.mds<-metaMDS(comm=data,distance="bray",trace=FALSE)
k.data.mds<-metaMDS(comm=data,distance="kul",trace=FALSE)
e.data.mds #.09
m.data.mds #.13
g.data.mds #.20
b.data.mds #.13
k.data.mds #.14
# Stress <0.10 indicates that the ordination is good "with no real
# risk of drawing false inferences" (Clarke 1993, p. 26).
# My stress is ~0.13
# linear fit is the fit between ordination values and distances
stressplot(e.data.mds)
# read in Soil environmental data
data.env <- read.csv("F:/Soils/SoilEnvironmentalDataModWithColbyAWS.csv",header=TRUE, row.names=1)
# read in SageEnvironmentalNMDS data
data.sage <- read.csv("F:/SageNMDSvariables/Sage.Env.April.csv",header=TRUE,row.names=1)
data.sage[is.na(data.sage)] <- 0 # replace NA with 0
# read in Artr live and dead as environmental data
data.l <- read.csv("F:/ShrubDensity/HeightClass/LivePlotbySizeClass.csv", header=TRUE, row.names=1)
data.d <- read.csv("F:/ShrubDensity/HeightClass/DeadPlotbySizeClass.csv", header=TRUE, row.names=1)
rel.l.sage <- read.csv("F:/ShrubDensity/HeightClass/LiveSizeClassSagePctCover.csv", header=TRUE, row.names=1)
rel.d.sage <- read.csv("F:/ShrubDensity/HeightClass/DeadSizeClassSagePctCover.csv", header=TRUE, row.names=1)
rel.l.total <- read.csv("F:/ShrubDensity/HeightClass/LiveSizeClassTotalPctCover.csv", header=TRUE, row.names=1)
rel.d.total <- read.csv("F:/ShrubDensity/HeightClass/DeadSizeClassTotalPctCover.csv", header=TRUE, row.names=1)
rel.l.sage[is.na(rel.l.sage)] <- 0 # replace NA with 0
rel.d.sage[is.na(rel.d.sage)] <- 0 # replace NA with 0
rel.l.total[is.na(rel.l.total)] <- 0 # replace NA with 0
rel.d.total[is.na(rel.d.total)] <- 0 # replace NA with 0
View(data.sage)
data.l <- read.csv("F:/ShrubDensity/HeightClass/LivePlotbySizeClass.csv", header=TRUE, row.names=1)
data.d <- read.csv("F:/ShrubDensity/HeightClass/DeadPlotbySizeClass.csv", header=TRUE, row.names=1)
rel.l.sage <- read.csv("F:/ShrubDensity/HeightClass/LiveSizeClassSagePctCover.csv", header=TRUE, row.names=1)
rel.d.sage <- read.csv("F:/ShrubDensity/HeightClass/DeadSizeClassSagePctCover.csv", header=TRUE, row.names=1)
rel.l.total <- read.csv("F:/ShrubDensity/HeightClass/LiveSizeClassTotalPctCover.csv", header=TRUE, row.names=1)
rel.d.total <- read.csv("F:/ShrubDensity/HeightClass/DeadSizeClassTotalPctCover.csv", header=TRUE, row.names=1)
View(rel.l.total)
View(rel.d.total)
rel.l.sage[is.na(rel.l.sage)] <- 0 # replace NA with 0
rel.d.sage[is.na(rel.d.sage)] <- 0 # replace NA with 0
rel.l.total[is.na(rel.l.total)] <- 0 # replace NA with 0
rel.d.total[is.na(rel.d.total)] <- 0 # replace NA with 0
fit.env <- envfit(e.data.mds,data.env,perm=1000)
fit.sage <- envfit(e.data.mds, data.sage,perm=1000)
fit.l <- envfit(e.data.mds,data.l,perm=1000)
fit.d <- envfit(e.data.mds,data.d,perm=1000)
fit.rls <- envfit(e.data.mds,rel.l.sage,perm=1000)
fit.rds <- envfit(e.data.mds,rel.d.sage,perm=1000)
fit.rlt <- envfit(e.data.mds,rel.l.total,perm=1000)
fit.rdt <- envfit(e.data.mds,rel.d.total,perm=1000)
fit.env
View(data.env)
sig.data.env<-data.env[,c(8:9,12,16,17,24)]
View(sig.data.env)
sig.fit.env<-envfit(data.mds,sig.data.env,perm=1000)
sig.fit.env<-envfit(e.data.mds,sig.data.env,perm=1000)
sig.fit.env # Check that you pulled up the right factors.
fit.sage
fit.l
fit.d
fit.rls
fit.rds
fit.rlt
fit.rdt
ordiplot(data.mds, display ="species", type ="n")
ordiplot(e.data.mds, display ="species", type ="n")
text(e.data.mds, display="sites", col="black", cex=0.7)
text(e.data.mds, display="species", col="red", cex=0.7)
plot(e.data.mds,type="t",main="NMDS Soil Data")
plot(sig.fit.env,col="blue", cex=0.7)
plot(e.data.mds,type="t",main="NMDS Sage Data")
plot(sig.fit.env,col="paleblue", cex=0.7)
plot(e.data.mds,type="t",main="NMDS Sage Data")
plot(sig.fit.env,col="chartreuse", cex=0.7)
plot(e.data.mds,type="t",main="NMDS Soil Data")
plot(sig.fit.env,col="blue", cex=0.7)
plot(e.data.mds,type="t",main="NMDS Sage Data")
plot(fit.sage,col="chartreuse", cex=0.7)
plot(e.data.mds,type="t",main="NMDS Soil Data")
plot(sig.fit.env,col="blue", cex=0.7)
plot(e.data.mds,type="t",main="NMDS Sage Data")
plot(fit.sage,col="chartreuse4", cex=0.7)
plot(e.data.mds,type="t",main="NMDS ARTR.L Data")
plot(fit.l,col="green", cex=0.7)
plot(e.data.mds,type="t",main="NMDS ARTR.L Data")
plot(fit.l,col="green3", cex=0.7)
plot(e.data.mds,type="t",main="NMDS ARTR.L Data")
plot(fit.l,col="green4", cex=0.7)
plot(e.data.mds,type="t",main="NMDS ARTR.L Data")
plot(fit.l,col="green3", cex=0.7)
View(rel.d.total)
plot(e.data.mds,type="t",main="NMDS ARTR.D Data")
plot(fit.d,col="purple", cex=0.7)
plot(e.data.mds,type="t",main="NMDS % ARTR.L/All ARTR Data")
plot(fit.rls,col="yellow", cex=0.7)
plot(e.data.mds,type="t",main="NMDS % ARTR.L/All ARTR Data")
plot(fit.rls,col="dodgerblue", cex=0.7)
plot(e.data.mds,type="t",main="NMDS % ARTR.D/All ARTR Data")
plot(fit.rds,col="orange", cex=0.7)
plot(e.data.mds,type="t",main="NMDS % ARTR.D/All ARTR Data")
plot(fit.rds,col="darkorange2", cex=0.7)
plot(e.data.mds,type="t",main="NMDS ARTR.D Data")
plot(fit.d,col="purple", cex=0.7)
plot(e.data.mds,type="t",main="NMDS % ARTR.L/All Shrubs Data")
plot(fit.rlt,col="darkmagenta", cex=0.7)
plot(e.data.mds,type="t",main="NMDS % ARTR.D/All Shrubs Data")
plot(fit.rdt,col="blueviolet", cex=0.7)
plot(e.data.mds,type="t",main="NMDS Soil Data")
plot(sig.fit.env,col="blue", cex=0.7)
plot(e.data.mds,type="t",main="NMDS Sage Data")
plot(fit.sage,col="chartreuse4", cex=0.7)
stems <- colSums(data)
stems
plot(data)
plot(data)
plot(e.data.mds)
plot(e.data.mds, disp="sp",type="n")
sel <- orditorp(e.data.mds, dis="sp", priority=stems,pcol="gray",pch="+")
is.data.frame(data)
length(which(data != "NA"))
pl <- plot(e.data.mds,dis="sp")
identify(pl,"sp")
plot(e.data.mds,type="t",main="NMDS % ARTR.D/All Shrubs Data")
ordiplot(e.data.mds, display ="species", type ="n")
text(e.data.mds, display="species", col="red", cex=0.7)
pl <- plot(e.data.mds,dis="sp")
identify(pl,"sp")
pl <- plot(e.data.mds,dis="sp")
identify(pl,"sp")
ordiplot(e.data.mds, display ="species", type ="n")
text(e.data.mds, display="sites", col="black", cex=0.7)
text(e.data.mds, display="species", col="red", cex=0.7)
ordiplot(b.data.mds, display ="species", type ="n")
text(b.data.mds, display="sites", col="black", cex=0.7)
text(b.data.mds, display="species", col="red", cex=0.7)
plot(e.data.mds,type="t",main="NMDS Soil Data")
plot(sig.fit.env,col="blue", cex=0.7)
fit.env <- envfit(b.data.mds,data.env,perm=1000)
fit.env
View(data.env)
sig.data.env<-data.env[,c(5,7,9,12,15:17,19:25,28:29,)]
sig.data.env<-data.env[,c(5,7,9,12,15:17,19:25,28:29,)]
sig.data.env<-data.env[,c(5,7,9,12,15:17,19:25,28:29)]
sig.fit.env<-envfit(e.data.mds,sig.data.env,perm=1000)
sig.fit.env # Check that you pulled up the right factors.
fit.env <- envfit(b.data.mds,data.env,perm=1000)
fit.env
sig.data.env<-data.env[,c(5,7,9,12,15:17,19:25,28:29)]
sig.fit.env<-envfit(e.data.mds,sig.data.env,perm=1000)
sig.fit.env # Check that you pulled up the right factors.
plot(b.data.mds,type="t",main="NMDS Soil Data")
plot(sig.fit.env,col="blue", cex=0.7)
ordiplot(b.data.mds, display ="species", type ="n")
text(b.data.mds, display="sites",type="p", col="black", cex=0.7)
text(b.data.mds, display="species", col="red", cex=0.7)
ordiplot(b.data.mds, display ="species", type ="n")
text(b.data.mds, display="species", col="red", cex=0.7)
fit.env <- envfit(b.data.mds,data.env,perm=1000)
fit.env
sig.data.env<-data.env[,c(5,7,9,12,15:17,19:25,28:29)]
sig.fit.env<-envfit(e.data.mds,sig.data.env,perm=1000)
sig.fit.env # Check that you pulled up the right factors.
plot(b.data.mds,type="t",main="NMDS Soil Data")
plot(sig.fit.env,col="blue", cex=0.7)
ordiplot(b.data.mds, display ="species", type ="n")
text(b.data.mds, display="sites",type="p", col="black", cex=0.7)
text(b.data.mds, display="species", col="purple", cex=0.7)
fit.env <- envfit(b.data.mds,data.env,perm=1000)
fit.env
sig.data.env<-data.env[,c(5,7,9,12,15:17,19:25,28:29)]
sig.fit.env<-envfit(e.data.mds,sig.data.env,perm=1000)
sig.fit.env # Check that you pulled up the right factors.
plot(b.data.mds,type="t",main="NMDS Soil Data")
plot(sig.fit.env,col="blue", cex=0.7)
ordiplot(b.data.mds, display ="species", type ="n")
text(b.data.mds, display="sites",type="p", col="black", cex=0.7)
text(b.data.mds, display="species", col="red", cex=0.7)
ordiplot(b.data.mds, display ="species", type ="n")
text(b.data.mds, display="species", col="red", cex=0.7)
p<-ordiplot(b.data.mds, display ="species", type ="n")
p<-text(b.data.mds, display="species", col="red", cex=0.7)
plot(p,type="t",main="NMDS Soil Data")
plot(sig.fit.env,col="blue", cex=0.7)
p<-ordiplot(b.data.mds, display ="species", type ="n")
text(b.data.mds, display="species", col="red", cex=0.7)
plot(p,type="t",main="NMDS Soil Data")
plot(sig.fit.env,col="blue", cex=0.7)
plot(e.data.mds, type="n")
points(e.data.mds,display="sites",cex=0.8,pch=21,col="red", bg="yellow")
text(e.data.mds,display="species", cex=0.7, col="blue")
plot(e.data.mds, type="n")
points(e.data.mds,display="sites",cex=0.8,pch=21,col="red", bg="black")
text(e.data.mds,display="species", cex=0.7, col="blue")
fit.env <- envfit(e.data.mds,data.env,perm=1000)
sig.data.env<-data.env[,c(8:9,12,16,17,24)]
sig.fit.env<-envfit(e.data.mds,sig.data.env,perm=1000)
sig.fit.env # Check that you pulled up the right factors.
plot(e.data.mds, type="n")
points(e.data.mds,display="sites",cex=0.8,pch=21,col="red", bg="black")
text(e.data.mds,display="species", cex=0.7, col="blue")
plot(e.data.mds,type="t",main="NMDS Soil Data")
plot(sig.fit.env,col="blue", cex=0.7)
plot(e.data.mds, type="n")
points(e.data.mds,display="sites",cex=0.8,pch=21,col="red", bg="black")
text(e.data.mds,display="species", cex=0.7, col="blue")
plot(sig.fit.env,col="blue", cex=0.7)
plot(e.data.mds, type="n",main="NMDS Soil Data")
points(e.data.mds,display="sites",cex=0.8,pch=21,col="red", bg="black")
text(e.data.mds,display="species", cex=0.7, col="blue")
plot(sig.fit.env,col="green4", cex=0.7)
plot(e.data.mds, type="n",main="NMDS Soil Data")
points(e.data.mds,display="sites",cex=0.8,pch=21,col="red", bg="black")
text(e.data.mds,display="species", cex=0.7, col="blue")
plot(sig.fit.env,col="green4", cex=0.7)
plot(e.data.mds, type="n",xlim=-1.5,ylim=1.5,main="NMDS Soil Data")
plot(e.data.mds, type="n",xlim=-1,ylim=1,main="NMDS Soil Data")
stems <- colSums(data)
plot(e.data.mds, disp="sp",type="n")
sel <- orditorp(e.data.mds, dis="sp", priority=stems,pcol="gray",pch="+")
plot(e.data.mds, type="n",xlim=c(-1.5,1.5),ylim=c(-1,0.3),main="NMDS Soil Data")
points(e.data.mds,display="sites",cex=0.8,pch=21,col="red", bg="black")
text(e.data.mds,display="species", cex=0.7, col="blue")
plot(sig.fit.env,col="green4", cex=0.7)
plot(e.data.mds, type="n",xlim=c(0,10),ylim=c(0,10),main="NMDS Soil Data")
points(e.data.mds,display="sites",cex=0.8,pch=21,col="red", bg="black")
text(e.data.mds,display="species", cex=0.7, col="blue")
plot(e.data.mds, type="n",xlim=c(-2,2),ylim=c(-1,0.5),main="NMDS Soil Data")
points(e.data.mds,display="sites",cex=0.8,pch=21,col="red", bg="black")
text(e.data.mds,display="species", cex=0.7, col="blue")
plot(sig.fit.env,col="green4", cex=0.7)
plot(e.data.mds, type="n",xlim=c(-1.5,2),ylim=c(-1,0.5),main="NMDS Soil Data")
points(e.data.mds,display="sites",cex=0.8,pch=21,col="red", bg="black")
text(e.data.mds,display="species", cex=0.7, col="blue")
plot(sig.fit.env,col="green4", cex=0.7)
plot(e.data.mds, type="n",xlim=c(-1.5,2),ylim=c(-1,0.5),main="NMDS Soil Data")
points(e.data.mds,display="sites",cex=0.8,pch=21,col="red", bg="white")
text(e.data.mds,display="species", cex=0.7, col="blue")
plot(sig.fit.env,col="green4", cex=0.7)
plot(e.data.mds, type="n",xlim=c(-1.5,2),ylim=c(-1,0.5),main="NMDS Soil Data")
points(e.data.mds,display="sites",cex=0.8,pch=21,col="red", bg="red")
text(e.data.mds,display="species", cex=0.7, col="blue")
plot(sig.fit.env,col="green4", cex=0.7)
plot(e.data.mds, type="n",xlim=c(-1.5,2),ylim=c(-1,0.5),main="NMDS Soil Data")
points(e.data.mds,display="sites",cex=0.5,pch=21,col="red", bg="red")
text(e.data.mds,display="species", cex=0.7, col="blue")
plot(sig.fit.env,col="green4", cex=0.7)
plot(e.data.mds, type="n",xlim=c(-1.5,2),ylim=c(-1,0.5),main="NMDS Soil Data",bg="gray")
points(e.data.mds,display="sites",cex=0.5,pch=21,col="red", bg="red")
text(e.data.mds,display="species", cex=0.7, col="blue")
plot(sig.fit.env,col="green4", cex=0.7)
plot(e.data.mds, type="n",xlim=c(-1.5,2),ylim=c(-1,0.5),main="NMDS Soil Data")
points(e.data.mds,display="sites",cex=0.5,pch=21,col="red", bg="red")
text(e.data.mds,display="species", cex=0.7, col="blue")
plot(sig.fit.env,col="green4", cex=0.7)
plot(e.data.mds, type="n",xlim=c(-1.5,2),ylim=c(-1,0.5),main="NMDS Soil Data")
points(e.data.mds,display="sites",cex=0.5,pch=21,col="red", bg="red")
text(e.data.mds,display="species", cex=0.7, col="blue")
plot(sig.fit.env,col="green4", cex=0.7,font=2)
