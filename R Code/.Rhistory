par(mfrow=c(1,1))
plot(ord$points, col=k$clust, pch=16,
xlim=c(-0.25,0.3),ylim=c(-0.2,0.35))
legend("topright",c("Cluster 1", "Cluster 2","Cluster 3")
,pch=16, col=unique(k$cluster),x.intersp=0.6
, y.intersp=0.6,bty="n")
ordihull(ord, groups = k$clust, display = "sites"
,draw="polygon")
plot(sig.fit.env,col="blue", cex=0.7,font=2)
# From scree plot elbow occurs at k = 3 (or 8?)
# Apply k-means with k=3 (then try 8)
k <- kmeans(ord$points, 3, nstart=25, iter.max=1000)
library(RColorBrewer)
library(scales)
palette(alpha(brewer.pal(9,'Set1'), 0.5))
plot(ord$points, col=k$clust, pch=16)
legend("topright",c("Cluster 1", "Cluster 2","Cluster 3")
,pch=16, col=unique(k$cluster))
# Cluster sizes
sort(table(k$clust))
clust <- names(sort(table(k$clust)))
# First cluster
row.names(data[k$clust==clust[1],])
# Second Cluster
row.names(data[k$clust==clust[2],])
# Third Cluster
row.names(data[k$clust==clust[3],])
# Fourth Cluster
row.names(data[k$clust==clust[4],])
# Compare accommodation by cluster in boxplot
boxplot(data$KRLA2 ~ k$cluster,
xlab='Cluster', ylab='KRLA2',
main='KRLA2 by Cluster')
boxplot(data$JUOS ~ k$cluster,
xlab='Cluster', ylab='JUOS',
main='JUOS by Cluster')
par(mfrow=c(1,2))
boxplot(data$ARTR2 ~ k$cluster,
xlab='Cluster', ylab='ARTR2',
main='ARTR2 by Cluster')
boxplot(data$ARTR2.D ~ k$cluster,
xlab='Cluster', ylab='ARTR2.D',
main='ARTR2.D by Cluster')
boxplot(data$ATCA2 ~ k$cluster,
xlab='Cluster', ylab='ATCA2',
main='ATCA2 by Cluster')
boxplot(data$ATCA2.D ~ k$cluster,
xlab='Cluster', ylab='ATCA2.D',
main='ATCA2.D by Cluster')
boxplot(data$BOGR2 ~ k$cluster,
xlab='Cluster', ylab='BOGR2',
main='BOGR2 by Cluster')
boxplot(data$BOGR2.D ~ k$cluster,
xlab='Cluster', ylab='BOGR2.D',
main='BOGR2.D by Cluster')
boxplot(data$SPCR ~ k$cluster,
xlab='Cluster', ylab='SPCR',
main='SPCR by Cluster')
boxplot(data$SPCR.D ~ k$cluster,
xlab='Cluster', ylab='SPCR.D',
main='SPCR.D by Cluster')
boxplot(data$HECO26 ~ k$cluster,
xlab='Cluster', ylab='HECO26',
main='HECO26 by Cluster')
boxplot(data$HECO26.D ~ k$cluster,
xlab='Cluster', ylab='HECO26.D',
main='HECO26.D by Cluster')
boxplot(data$OPPO ~ k$cluster,
xlab='Cluster', ylab='OPPO',
main='OPPO by Cluster')
boxplot(data$OPPO.D ~ k$cluster,
xlab='Cluster', ylab='OPPO.D',
main='OPPO.D by Cluster')
boxplot(data$PIED ~ k$cluster,
xlab='Cluster', ylab='PIED',
main='PIED by Cluster')
boxplot(data$PIED.D ~ k$cluster,
xlab='Cluster', ylab='PIED.D',
main='PIED.D by Cluster')
### Add in Soils Varibles ###
data.env <- read.csv("F:/Soils/SoilEnvironmentaldataApril.csv",header=TRUE, row.names=1)
data.env[is.na(data.env)] <- 0 # replace NA with 0
fit.env <- envfit(ord,data.env,perm=1000)
fit.env
sig.fit.env <- data.env[ which(fit.env$vectors$pvals<.05), ]
sig.fit.env <- data.env[fit.env$vectors$pvals<.05]
sig.fit.env <- envfit(ord,sig.fit.env,perm=1000)
sig.fit.env # Check that you pulled up the right factors.
# ### Choose only the significant environmental data
# sig.data.env<-data.env[,c(4,11,14,24,27)]
# sig.fit.env<-envfit(ord,sig.data.env,perm=1000)
# sig.fit.env # Check that you pulled up the right factors.
### Plot Soils and Ordihull ###
par(mfrow=c(1,1))
plot(ord$points, col=k$clust, pch=16,
xlim=c(-0.25,0.3),ylim=c(-0.2,0.35))
legend("topright",c("Cluster 1", "Cluster 2","Cluster 3")
,pch=16, col=unique(k$cluster),x.intersp=0.6
, y.intersp=0.6,bty="n")
ordihull(ord, groups = k$clust, display = "sites"
,draw="polygon")
plot(sig.fit.env,col="blue", cex=0.7,font=2)
ordiplot(ord)
ordiplot(ord, display ="sites", type ="n"
,xlim=c(-0.25,0.3),ylim=c(-0.2,0.4))
text(ord, display="sites", col="black", cex=0.5)
text(ord, display="species", col="red", cex=0.5)
# From scree plot elbow occurs at k = 3 (or 8?)
# Apply k-means with k=3 (then try 8)
k <- kmeans(ord$points, 3, nstart=25, iter.max=1000)
library(RColorBrewer)
library(scales)
palette(alpha(brewer.pal(9,'Set1'), 0.5))
plot(ord$points, col=k$clust, pch=16)
legend("topright",c("Cluster 1", "Cluster 2","Cluster 3")
,pch=16, col=unique(k$cluster))
# Cluster sizes
sort(table(k$clust))
clust <- names(sort(table(k$clust)))
# First cluster
row.names(data[k$clust==clust[1],])
# Second Cluster
row.names(data[k$clust==clust[2],])
# Third Cluster
row.names(data[k$clust==clust[3],])
# Fourth Cluster
row.names(data[k$clust==clust[4],])
### Plot Soils and Ordihull ###
par(mfrow=c(1,1))
plot(ord$points, col=k$clust, pch=16,
xlim=c(-0.25,0.3),ylim=c(-0.2,0.35))
legend("topright",c("Cluster 1", "Cluster 2","Cluster 3")
,pch=16, col=unique(k$cluster),x.intersp=0.6
, y.intersp=0.6,bty="n")
ordihull(ord, groups = k$clust, display = "sites"
,draw="polygon")
plot(sig.fit.env,col="blue", cex=0.7,font=2)
# From scree plot elbow occurs at k = 3 (or 8?)
# Apply k-means with k=3 (then try 8)
k <- kmeans(ord$points, 4, nstart=25, iter.max=1000)
library(RColorBrewer)
library(scales)
palette(alpha(brewer.pal(9,'Set1'), 0.5))
plot(ord$points, col=k$clust, pch=16)
legend("topright",c("Cluster 1", "Cluster 2","Cluster 3")
,pch=16, col=unique(k$cluster))
# Cluster sizes
sort(table(k$clust))
clust <- names(sort(table(k$clust)))
# First cluster
row.names(data[k$clust==clust[1],])
# Second Cluster
row.names(data[k$clust==clust[2],])
# Third Cluster
row.names(data[k$clust==clust[3],])
# Fourth Cluster
row.names(data[k$clust==clust[4],])
### Plot Soils and Ordihull ###
par(mfrow=c(1,1))
plot(ord$points, col=k$clust, pch=16,
xlim=c(-0.25,0.3),ylim=c(-0.2,0.35))
legend("topright",c("Cluster 1", "Cluster 2","Cluster 3")
,pch=16, col=unique(k$cluster),x.intersp=0.6
, y.intersp=0.6,bty="n")
ordihull(ord, groups = k$clust, display = "sites"
,draw="polygon")
plot(sig.fit.env,col="blue", cex=0.7,font=2)
# From scree plot elbow occurs at k = 3 (or 8?)
# Apply k-means with k=3 (then try 8)
k <- kmeans(ord$points, 4, nstart=25, iter.max=1000)
library(RColorBrewer)
library(scales)
palette(alpha(brewer.pal(9,'Set1'), 0.5))
plot(ord$points, col=k$clust, pch=16)
legend("topright",c("Cluster 1", "Cluster 2","Cluster 3")
,pch=16, col=unique(k$cluster))
# Cluster sizes
sort(table(k$clust))
clust <- names(sort(table(k$clust)))
### Plot Soils and Ordihull ###
par(mfrow=c(1,1))
plot(ord$points, col=k$clust, pch=16,
xlim=c(-0.25,0.3),ylim=c(-0.2,0.35))
legend("topright",c("Cluster 1", "Cluster 2","Cluster 3")
,pch=16, col=unique(k$cluster),x.intersp=0.6
, y.intersp=0.6,bty="n")
ordihull(ord, groups = k$clust, display = "sites"
,draw="polygon")
# From scree plot elbow occurs at k = 3 (or 8?)
# Apply k-means with k=3 (then try 8)
k <- kmeans(ord$points, 3, nstart=25, iter.max=1000)
library(RColorBrewer)
library(scales)
palette(alpha(brewer.pal(9,'Set1'), 0.5))
plot(ord$points, col=k$clust, pch=16)
legend("topright",c("Cluster 1", "Cluster 2","Cluster 3")
,pch=16, col=unique(k$cluster))
# Cluster sizes
sort(table(k$clust))
clust <- names(sort(table(k$clust)))
### Plot Soils and Ordihull ###
par(mfrow=c(1,1))
plot(ord$points, col=k$clust, pch=16,
xlim=c(-0.25,0.3),ylim=c(-0.2,0.35))
legend("topright",c("Cluster 1", "Cluster 2","Cluster 3")
,pch=16, col=unique(k$cluster),x.intersp=0.6
, y.intersp=0.6,bty="n")
ordihull(ord, groups = k$clust, display = "sites"
,draw="polygon")
# From scree plot elbow occurs at k = 3 (or 8?)
# Apply k-means with k=3 (then try 8)
k <- kmeans(ord$points, 5, nstart=25, iter.max=1000)
library(RColorBrewer)
library(scales)
palette(alpha(brewer.pal(9,'Set1'), 0.5))
plot(ord$points, col=k$clust, pch=16)
legend("topright",c("Cluster 1", "Cluster 2","Cluster 3")
,pch=16, col=unique(k$cluster))
# Cluster sizes
sort(table(k$clust))
clust <- names(sort(table(k$clust)))
### Plot Soils and Ordihull ###
par(mfrow=c(1,1))
plot(ord$points, col=k$clust, pch=16,
xlim=c(-0.25,0.3),ylim=c(-0.2,0.35))
legend("topright",c("Cluster 1", "Cluster 2","Cluster 3")
,pch=16, col=unique(k$cluster),x.intersp=0.6
, y.intersp=0.6,bty="n")
ordihull(ord, groups = k$clust, display = "sites"
,draw="polygon")
row.names(data[k$clust==clust[1],])
# Second Cluster
row.names(data[k$clust==clust[2],])
# Third Cluster
row.names(data[k$clust==clust[3],])
# Fourth Cluster
row.names(data[k$clust==clust[4],])
# Fifth Cluster
row.names(data[k$clust==clust[5],])
# MDS before K-Means 05/11/2016
# LPI Data
data <- read.csv("F:/LPI/Output/AprilLPIPercentCover.csv",header=TRUE, row.names=1)
# plot variance of columns
mar <- par()$mar
par(mar=mar+c(0,5,0,0))
# par(mfrow=c(1,2))
barplot(sapply(data, var), horiz=T, las=1, cex.names=0.5)
barplot(sapply(data, var), horiz=T, las=1, cex.names=0.5, log='x')
par(mar=mar)
library(vegan)
library(MASS)
library(colorspace)
ord<-metaMDS(comm=data,distance="euc",trace=FALSE)
ord #.17
plot.sc = scores(ord)
stressplot(ord)
gof <- goodness(ord)
plot.sc
gof <- goodness(ord)
ord<-metaMDS(comm=data,distance="bray",trace=FALSE)
ord #.17
plot.sc = scores(ord)
# Stress <0.10 indicates that the ordination is good "with no real
# risk of drawing false inferences" (Clarke 1993, p. 26).
# linear fit is the fit between ordination values and distances
stressplot(ord)
ord<-metaMDS(comm=data,distance="euc",trace=FALSE)
ord #.17
plot.sc = scores(ord)
# Stress <0.10 indicates that the ordination is good "with no real
# risk of drawing false inferences" (Clarke 1993, p. 26).
# linear fit is the fit between ordination values and distances
stressplot(ord)
gof <- goodness(ord)
wss <- (nrow(ord$points)-1)*sum(apply(ord$points,2,var))
for (i in 2:15) wss[i] <- sum(kmeans(ord$points,
centers=i)$withinss)
plot(1:15, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares")
# From scree plot elbow occurs at k = 3 (or 8?)
# Apply k-means with k=3 (then try 8)
k <- kmeans(ord$points, 3, nstart=25, iter.max=1000)
library(RColorBrewer)
library(scales)
palette(alpha(brewer.pal(9,'Set1'), 0.5))
plot(ord$points, col=k$clust, pch=16)
legend("topright",c("Cluster 1", "Cluster 2","Cluster 3")
,pch=16, col=unique(k$cluster))
# Cluster sizes
sort(table(k$clust))
clust <- names(sort(table(k$clust)))
# First cluster
row.names(data[k$clust==clust[1],])
# Second Cluster
row.names(data[k$clust==clust[2],])
# Third Cluster
row.names(data[k$clust==clust[3],])
# From scree plot elbow occurs at k = 3 (or 8?)
# Apply k-means with k=3 (then try 8)
k <- kmeans(ord$points, 4, nstart=25, iter.max=1000)
library(RColorBrewer)
library(scales)
palette(alpha(brewer.pal(9,'Set1'), 0.5))
plot(ord$points, col=k$clust, pch=16)
legend("topright",c("Cluster 1", "Cluster 2","Cluster 3")
,pch=16, col=unique(k$cluster))
# Cluster sizes
sort(table(k$clust))
clust <- names(sort(table(k$clust)))
# First cluster
row.names(data[k$clust==clust[1],])
# Second Cluster
row.names(data[k$clust==clust[2],])
# Third Cluster
row.names(data[k$clust==clust[3],])
# Fourth Cluster
row.names(data[k$clust==clust[4],])
# From scree plot elbow occurs at k = 3 (or 8?)
# Apply k-means with k=3 (then try 8)
k <- kmeans(ord$points, 5, nstart=25, iter.max=1000)
library(RColorBrewer)
library(scales)
palette(alpha(brewer.pal(9,'Set1'), 0.5))
plot(ord$points, col=k$clust, pch=16)
legend("topright",c("Cluster 1", "Cluster 2","Cluster 3")
,pch=16, col=unique(k$cluster))
# Cluster sizes
sort(table(k$clust))
clust <- names(sort(table(k$clust)))
# First cluster
row.names(data[k$clust==clust[1],])
# Second Cluster
row.names(data[k$clust==clust[2],])
# Third Cluster
row.names(data[k$clust==clust[3],])
# Fourth Cluster
row.names(data[k$clust==clust[4],])
# Fifth Cluster
row.names(data[k$clust==clust[5],])
# MDS before K-Means 05/11/2016
# LPI Data
data <- read.csv("F:/LPI/Output/USGSLPIPercentCover.csv",header=TRUE, row.names=1)
# plot variance of columns
mar <- par()$mar
par(mar=mar+c(0,5,0,0))
# par(mfrow=c(1,2))
barplot(sapply(data, var), horiz=T, las=1, cex.names=0.5)
barplot(sapply(data, var), horiz=T, las=1, cex.names=0.5, log='x')
par(mar=mar)
######## NMDS #########
library(vegan)
library(MASS)
library(colorspace)
ord<-metaMDS(comm=data,distance="euc",trace=FALSE)
ord #.17
plot.sc = scores(ord)
# Stress <0.10 indicates that the ordination is good "with no real
# risk of drawing false inferences" (Clarke 1993, p. 26).
# linear fit is the fit between ordination values and distances
stressplot(ord)
gof <- goodness(ord)
# Determine number of clusters
wss <- (nrow(ord$points)-1)*sum(apply(ord$points,2,var))
for (i in 2:15) wss[i] <- sum(kmeans(ord$points,
centers=i)$withinss)
plot(1:15, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares")
# From scree plot elbow occurs at k = 3 (or 8?)
# Apply k-means with k=3 (then try 8)
k <- kmeans(ord$points, 3, nstart=25, iter.max=1000)
library(RColorBrewer)
library(scales)
palette(alpha(brewer.pal(9,'Set1'), 0.5))
plot(ord$points, col=k$clust, pch=16)
legend("topright",c("Cluster 1", "Cluster 2","Cluster 3")
,pch=16, col=unique(k$cluster))
# Cluster sizes
sort(table(k$clust))
clust <- names(sort(table(k$clust)))
# First cluster
row.names(data[k$clust==clust[1],])
# Second Cluster
row.names(data[k$clust==clust[2],])
# Third Cluster
row.names(data[k$clust==clust[3],])
# From scree plot elbow occurs at k = 3 (or 8?)
# Apply k-means with k=3 (then try 8)
k <- kmeans(ord$points, 4, nstart=25, iter.max=1000)
library(RColorBrewer)
library(scales)
palette(alpha(brewer.pal(9,'Set1'), 0.5))
plot(ord$points, col=k$clust, pch=16)
legend("topright",c("Cluster 1", "Cluster 2","Cluster 3")
,pch=16, col=unique(k$cluster))
# Cluster sizes
sort(table(k$clust))
clust <- names(sort(table(k$clust)))
# First cluster
row.names(data[k$clust==clust[1],])
# Second Cluster
row.names(data[k$clust==clust[2],])
# Third Cluster
row.names(data[k$clust==clust[3],])
# Fourth Cluster
row.names(data[k$clust==clust[4],])
# From scree plot elbow occurs at k = 3 (or 8?)
# Apply k-means with k=3 (then try 8)
k <- kmeans(ord$points, 5, nstart=25, iter.max=1000)
library(RColorBrewer)
library(scales)
palette(alpha(brewer.pal(9,'Set1'), 0.5))
plot(ord$points, col=k$clust, pch=16)
legend("topright",c("Cluster 1", "Cluster 2","Cluster 3")
,pch=16, col=unique(k$cluster))
# Cluster sizes
sort(table(k$clust))
clust <- names(sort(table(k$clust)))
# First cluster
row.names(data[k$clust==clust[1],])
# Second Cluster
row.names(data[k$clust==clust[2],])
# Third Cluster
row.names(data[k$clust==clust[3],])
# Fourth Cluster
row.names(data[k$clust==clust[4],])
# Fifth Cluster
row.names(data[k$clust==clust[5],])
# From scree plot elbow occurs at k = 3 (or 8?)
# Apply k-means with k=3 (then try 8)
k <- kmeans(ord$points, 6, nstart=25, iter.max=1000)
library(RColorBrewer)
library(scales)
palette(alpha(brewer.pal(9,'Set1'), 0.5))
plot(ord$points, col=k$clust, pch=16)
legend("topright",c("Cluster 1", "Cluster 2","Cluster 3")
,pch=16, col=unique(k$cluster))
# Cluster sizes
sort(table(k$clust))
clust <- names(sort(table(k$clust)))
# First cluster
row.names(data[k$clust==clust[1],])
# Second Cluster
row.names(data[k$clust==clust[2],])
# Third Cluster
row.names(data[k$clust==clust[3],])
# Fourth Cluster
row.names(data[k$clust==clust[4],])
# Fifth Cluster
row.names(data[k$clust==clust[5],])
# Sixth Cluster
row.names(data[k$clust==clust[6],])
library(plyr)
LA<-read.csv("F:/Health/LeafAreaEpidermalConductance.csv",header=TRUE)
LA <- LA[ which(!LA$Wet.Dry<0.000000), ] # Remove negative weights.
LA <- LA[,c(1,14:15)]
NP<-read.csv("F:/Health/April Sagebrush N and Protein.csv",header=TRUE)
NP <- NP[,c(2,5:6)]
# find means from LA
pdw <- ddply( LA, 'Plot', summarize, pdw = mean(PctDryWeight, na.rm = T))
sla <- ddply( LA, 'Plot', summarize, sla = mean(SLAcm, na.rm = T))
LA <- join(pdw, sla, by = 'Plot', type = 'inner')
# What plots do LA and NP have in common?
LA.NP <- merge(NP, LA, by=c("Plot"))
Height1 <- read.csv("F:/ShrubDensity/HeightClass/Output/AprilLiveDeadPlotbySizeClass.csv",header=TRUE)
View(Height1)
Height1 <- rename(Height1, c("X"="Plot"))
View(Height1)
Height2 <- read.csv("F:/ShrubDensity/HeightClass/Output/AprilSizeClassLiveDeadDensityM2.csv",header=TRUE,row.names=1)
View(Height2)
View(Height1)
Hla <- merge(LA, Height1, by=c("Plot"))
Hnp <- merge(NP, Height1, by=c("Plot"))
plot(Hla$pdw, Hla$sla, main="Scatterplot Example",
xlab="N ", ylab="P", pch=19)
plot(Hla$pdw, Hla$sla, main="Scatterplot Example",
xlab="pdw ", ylab="sla", pch=19)
plot(Hla$pdw, Hla$sla, main="Scatterplot Example",
xlab="pdw ", ylab="sla", pch=19)
plot(Hla$pdw, Hla$sla, main="Scatterplot Example",
xlab="pdw ", ylab="sla", pch=19)
counts <- table(Hla$sla)
barplot(counts, main=">100cm Sagebrush",
xlab="Number of Sagebrush")
table(Hla$sla)
barplot(Hla$sla, main=">100cm Sagebrush",
xlab="Number of Sagebrush")
View(Height1)
barplot(Height1$E, main=">100cm Sagebrush",
xlab="Number of Sagebrush")
View(Height1)
Height3<-data.matrix(Height1)
View(Height3)
View(Hla)
rownames(Hla)<-Hla$Plot;Hla<-Hla[,-1]
View(Hla)
View(Hla)
# Stacked Bar Plot with Colors and Legend
sums <- colSums (Hla, na.rm = FALSE, dims = 1)
counts <- table(Hla[,1],Hla[,2],Hla[,3],Hla[,4],Hla[,5])
barplot(counts, main="Hla",xlab="?", col=c("darkblue","red"))
as.data.frame(counts)
counts2 <- as.data.frame(counts)
View(counts2)
counts3 <- as.data.frame.matrix(counts)
View(counts2)
counts
View(Hla)
View(Hla)
View(Hla)
# Simple Bar Plot
barplot(Height1$A, main="young Sagebrush",
xlab="Number of Sagebrush")
