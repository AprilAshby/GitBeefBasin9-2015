xlab='Cluster', ylab='HECO26.D',
main='HECO26.D by Cluster')
boxplot(data$OPPO ~ k$cluster,
xlab='Cluster', ylab='OPPO',
main='OPPO by Cluster')
boxplot(data$OPPO.D ~ k$cluster,
xlab='Cluster', ylab='OPPO.D',
main='OPPO.D by Cluster')
boxplot(data$PIED ~ k$cluster,
xlab='Cluster', ylab='PIED',
main='PIED by Cluster')
boxplot(data$JUOS ~ k$cluster,
xlab='Cluster', ylab='JUOS',
main='JUOS by Cluster')
c <-rbind(c(C1,C2,C3,C4))
View(c)
c <-cbind(c(C1,C2,C3,C4))
View(c)
data$Clusters <- NA
View(data)
data$Clusters<- if data$row.names=C1 then "C1", else = NA
data$Clusters<- if data$row.names=C1$chr then "C1", else = NA
data$Clusters<- if row.names(data[k$clust==clust[4],]) then data$Clusters="C1", else = NA
if row.names(data[k$clust==clust[4],]) then data$Clusters="C1", else = NA
if row.names(data[k$clust==clust[4],]), then data$Clusters="C1", else = NA
# PCA before K-Means 07/14/2016
# April without USGS
# LPI Data
data <- read.csv("F:/LPI/Output/AprilLPIPercentCover.csv",header=TRUE, row.names=1)
# plot variance of columns
mar <- par()$mar
par(mar=mar+c(0,5,0,0))
par(mfrow=c(1,2))
barplot(sapply(data, var), horiz=T, las=1, cex.names=0.5)
barplot(sapply(data, var), horiz=T, las=1, cex.names=0.5, log='x')
par(mar=mar)
# Scale
data2 <- data.frame(scale(data))
# Verify variance is uniform
plot(sapply(data2, var))
# Proceed with principal components
par(mfrow=c(1,1))
pc <- princomp(data2)
plot(pc)
plot(pc, type='l')
summary(pc) # 2 components is 'elbow' but does not explain >85% variance(would need 21 components)(only explains about 22%)
# First few principal components
comp <- data.frame(pc$scores[,1:2])
# Plot
plot(comp, pch=16, col=rgb(0,0,0,0.5))
library(rgl)
# # Multi 3D plot
# plot3d(comp$Comp.1, comp$Comp.2, comp$Comp.3)
### K-Means ###
# Determine number of clusters
wss <- (nrow(comp)-1)*sum(apply(comp,2,var))
for (i in 2:15) wss[i] <- sum(kmeans(comp,
centers=i)$withinss)
plot(1:15, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares")
# From scree plot elbow occurs at k = 4
# Apply k-means with k=4
k <- kmeans(comp, 4, nstart=25, iter.max=1000)
library(RColorBrewer)
library(scales)
palette(alpha(brewer.pal(9,'Set1'), 0.5))
plot(comp, col=k$clust, pch=16)
# 3D plot
# plot3d(comp$Comp.1, comp$Comp.2, comp$Comp.3, col=k$clust)
# Cluster sizes
sort(table(k$clust))
clust <- names(sort(table(k$clust)))
# First cluster
C1<-row.names(data[k$clust==clust[1],]);C1
# Second Cluster
C2<-row.names(data[k$clust==clust[2],]);C2
# Third Cluster
C3<-row.names(data[k$clust==clust[3],]);C3
# Fourth Cluster
C4<-row.names(data[k$clust==clust[4],]);C4
# # Fifth Cluster
# C5<-row.names(data[k$clust==clust[5],]);C5
# # Sixth Cluster
# C6<-row.names(data[k$clust==clust[6],]);C6
# Compare accommodation by cluster in boxplot
boxplot(data$KRLA2 ~ k$cluster,
xlab='Cluster', ylab='KRLA2',
main='KRLA2 by Cluster')
par(mfrow=c(1,2))
boxplot(data$ARTR2 ~ k$cluster,
xlab='Cluster', ylab='ARTR2',
main='ARTR2 by Cluster')
boxplot(data$ARTR2.D ~ k$cluster,
xlab='Cluster', ylab='ARTR2.D',
main='ARTR2.D by Cluster')
boxplot(data$ATCA2 ~ k$cluster,
xlab='Cluster', ylab='ATCA2',
main='ATCA2 by Cluster')
boxplot(data$ATCA2.D ~ k$cluster,
xlab='Cluster', ylab='ATCA2.D',
main='ATCA2.D by Cluster')
boxplot(data$BOGR2 ~ k$cluster,
xlab='Cluster', ylab='BOGR2',
main='BOGR2 by Cluster')
boxplot(data$BOGR2.D ~ k$cluster,
xlab='Cluster', ylab='BOGR2.D',
main='BOGR2.D by Cluster')
boxplot(data$SPCR ~ k$cluster,
xlab='Cluster', ylab='SPCR',
main='SPCR by Cluster')
boxplot(data$SPCR.D ~ k$cluster,
xlab='Cluster', ylab='SPCR.D',
main='SPCR.D by Cluster')
boxplot(data$HECO26 ~ k$cluster,
xlab='Cluster', ylab='HECO26',
main='HECO26 by Cluster')
boxplot(data$HECO26.D ~ k$cluster,
xlab='Cluster', ylab='HECO26.D',
main='HECO26.D by Cluster')
boxplot(data$OPPO ~ k$cluster,
xlab='Cluster', ylab='OPPO',
main='OPPO by Cluster')
boxplot(data$OPPO.D ~ k$cluster,
xlab='Cluster', ylab='OPPO.D',
main='OPPO.D by Cluster')
boxplot(data$PIED ~ k$cluster,
xlab='Cluster', ylab='PIED',
main='PIED by Cluster')
boxplot(data$JUOS ~ k$cluster,
xlab='Cluster', ylab='JUOS',
main='JUOS by Cluster')
library(vegan)
library(MASS)
library(colorspace)
data <- read.csv("F:/LPI/Output/USGSLPIPercentCover.csv",header=TRUE, row.names=1)
e.data.mds<-metaMDS(comm=data,distance="euc",trace=FALSE)
e.data.mds #.09
plot.sc = scores(e.data.mds)
# Stress <0.10 indicates that the ordination is good "with no real
# risk of drawing false inferences" (Clarke 1993, p. 26).
# linear fit is the fit between ordination values and distances
stressplot(e.data.mds)
data.env <- read.csv("F:/Soils/SoilEnvironmentaldataUSGSApril.csv",header=TRUE, row.names=1)
data.env[is.na(data.env)] <- 0 # replace NA with 0
fit.env <- envfit(e.data.mds,data.env,perm=1000)
fit.env
### Choose only the significant environmental data
sig.data.env<-data.env[,c(4,11,14,15,41)]
sig.fit.env<-envfit(e.data.mds,sig.data.env,perm=1000)
sig.fit.env # Check that you pulled up the right factors.
#plotMDS
orditkplot(e.data.mds, display="species", col="black", cex=0.7, pcol="gray",pch="+",xlim=c(-0.4,0.25),ylim=c(-0.2,0.25))
saveRDS(Plot, file="F:/SageNMDSvariables/Plot.Rdata")
Plot <- readRDS("F:/SageNMDSvariables/Plot.Rdata")
plot(Plot)
plot(Plot)
title(main = "NMDS and Soils")
plot(sig.fit.env,col="blue", cex=0.7,font=2)
plot(e.data.mds,type="t",main="NMDS Soil Data")
plot(sig.fit.env,col="blue", cex=0.7)
?rep
tlabs <- c("C1","C2","C3","C4")
fred <- list(happy = 1:10, name = "squash")
rep(C1)
## replicate a list
fred <- list(happy = 1:10, name = "squash")
rep(fred, 5)
# date-time objects
x <- .leap.seconds[1:3]
rep(x, 2)
rep(as.POSIXlt(x), rep(2, 3))
## named factor
x <- factor(LETTERS[1:4]); names(x) <- letters[1:4]
x
rep(x, 2)
rep(x, each = 2)
rep.int(x, 2)  # no names
rep_len(x, 10)
C1
View(data)
tlabs <- c("C1","C2","C3","C4")
treat <- factor(c(C1,C2,C3,C4), levels = tlabs)
treat
rownames(C1) <- C1
row.names(C1) <- C1
dim(C1)
View(data)
data$Clusters <- NA
View(data)
# PCA before K-Means 07/14/2016
# April without USGS
# LPI Data
data <- read.csv("F:/LPI/Output/AprilLPIPercentCover.csv",header=TRUE, row.names=1)
# plot variance of columns
mar <- par()$mar
par(mar=mar+c(0,5,0,0))
par(mfrow=c(1,2))
barplot(sapply(data, var), horiz=T, las=1, cex.names=0.5)
barplot(sapply(data, var), horiz=T, las=1, cex.names=0.5, log='x')
par(mar=mar)
# Scale
data2 <- data.frame(scale(data))
# Verify variance is uniform
plot(sapply(data2, var))
# Proceed with principal components
par(mfrow=c(1,1))
pc <- princomp(data2)
plot(pc)
plot(pc, type='l')
summary(pc) # 2 components is 'elbow' but does not explain >85% variance(would need 21 components)(only explains about 22%)
# First few principal components
comp <- data.frame(pc$scores[,1:2])
# Plot
plot(comp, pch=16, col=rgb(0,0,0,0.5))
library(rgl)
# # Multi 3D plot
# plot3d(comp$Comp.1, comp$Comp.2, comp$Comp.3)
### K-Means ###
# Determine number of clusters
wss <- (nrow(comp)-1)*sum(apply(comp,2,var))
for (i in 2:15) wss[i] <- sum(kmeans(comp,
centers=i)$withinss)
plot(1:15, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares")
# From scree plot elbow occurs at k = 4
# Apply k-means with k=4
k <- kmeans(comp, 4, nstart=25, iter.max=1000)
library(RColorBrewer)
library(scales)
palette(alpha(brewer.pal(9,'Set1'), 0.5))
plot(comp, col=k$clust, pch=16)
# 3D plot
# plot3d(comp$Comp.1, comp$Comp.2, comp$Comp.3, col=k$clust)
# Cluster sizes
sort(table(k$clust))
clust <- names(sort(table(k$clust)))
# First cluster
C1<-row.names(data[k$clust==clust[1],]);C1
# Second Cluster
C2<-row.names(data[k$clust==clust[2],]);C2
# Third Cluster
C3<-row.names(data[k$clust==clust[3],]);C3
# Fourth Cluster
C4<-row.names(data[k$clust==clust[4],]);C4
# # Fifth Cluster
# C5<-row.names(data[k$clust==clust[5],]);C5
# # Sixth Cluster
# C6<-row.names(data[k$clust==clust[6],]);C6
dat<-data
dat$Clusters <- NA
dat$Clusters<-row.names(data[k$clust==clust[1],])="C1"
dat$Clusters<-(row.names(data[k$clust==clust[1],]))="C1"
dat$Clusters<-(row.names(data[k$clust==clust[1],])="C1")
dat$Clusters<-((row.names(data[k$clust==clust[1],]))="C1")
dat$Clusters<-dat$row.names=row.names(data[k$clust==clust[1],])="C1"
dat$Clusters <- sub(row.names(data[k$clust==clust[1],]), "C1", dat$Clusters, ignore.case = FALSE)
View(dat)
?sub
dat$Clusters <- gsub(row.names(data[k$clust==clust[1],]), "C1", dat$Clusters, ignore.case = FALSE)
dat$Clusters <- gsub(row.names(dat[k$clust==clust[1],]), "C1", dat$Clusters, ignore.case = FALSE)
library(plyr)
LA<-read.csv("F:/Health/LeafAreaEpidermalConductance.csv",header=TRUE)
LA <- LA[ which(!LA$Wet.Dry<0.000000), ] # Remove negative weights.
LA <- LA[,c(1,14:15)]
NP<-read.csv("F:/Health/April Sagebrush N and Protein.csv",header=TRUE)
NP <- NP[,c(2,5:6)]
# find means from LA
pdw <- ddply( LA, 'Plot', summarize, pdw = mean(PctDryWeight, na.rm = T))
sla <- ddply( LA, 'Plot', summarize, sla = mean(SLAcm, na.rm = T))
LA <- join(pdw, sla, by = 'Plot', type = 'inner')
# What plots do LA and NP have in common?
LA.NP <- merge(NP, LA, by=c("Plot"))
Height1 <- read.csv("F:/ShrubDensity/HeightClass/Output/AprilLliveDeadPlotbySizeClass.csv",header=TRUE)
Height1 <- read.csv("F:/ShrubDensity/HeightClass/Output/AprilLiveDeadPlotbySizeClass.csv",header=TRUE)
Height2 <- read.csv("F:/ShrubDensity/HeightClass/Output/AprilLSizeClassLiveDeadDensityM2.csv",header=TRUE)
Height2 <- read.csv("F:/ShrubDensity/HeightClass/Output/AprilSizeClassLiveDeadDensityM2.csv",header=TRUE)
View(Height1)
View(Height2)
View(Height1)
counts <- table(Height1$A)
barplot(counts, main="Juvenile Sagebrush",
xlab="Number of Gears")
counts
counts <- table(Height1$A, Height1$B,Height1$C,Height1$D,Height1$E)
barplot(counts, main="Car Distribution by Gears and VS",
xlab="Number of Gears", col=c("darkblue","red"),
legend = rownames(counts))
as.matrix(Height1)
Height3<-as.matrix(Height1)
View(Height3)
View(Height2)
Height1 <- read.csv("F:/ShrubDensity/HeightClass/Output/AprilLiveDeadPlotbySizeClass.csv",header=TRUE,row.names=1)
View(Height1)
Height2 <- read.csv("F:/ShrubDensity/HeightClass/Output/AprilSizeClassLiveDeadDensityM2.csv",header=TRUE,row.names=1)
# Simple Bar Plot
counts <- table(Height1$A)
barplot(counts, main="Juvenile Sagebrush",
xlab="Number of Gears")
Height3<-as.matrix(Height1)
# Stacked Bar Plot with Colors and Legend
counts <- table(Height1$A, Height1$B,Height1$C,Height1$D,Height1$E)
barplot(counts, main="Car Distribution by Gears and VS",
xlab="Number of Gears", col=c("darkblue","red"),
legend = rownames(counts))
counts <- table(Height3$A, Height3$B,Height3$C,Height3$D,Height3$E)
barplot(counts, main="Car Distribution by Gears and VS",
xlab="Number of Gears", col=c("darkblue","red"),
legend = rownames(counts))
counts <- table(Height3$A, Height3$B,Height3$C,Height3$D,Height3$E)
barplot(counts, main="Car Distribution by Gears and VS",
xlab="Number of Gears", col=c("darkblue","red"),
legend = rownames(counts))
counts <- table(Height3$A, Height3$B,Height3$C,Height3$D,Height3$E)
Height3<-as.vector(Height1)
# Stacked Bar Plot with Colors and Legend
counts <- table(Height3$A, Height3$B,Height3$C,Height3$D,Height3$E)
barplot(counts, main="Car Distribution by Gears and VS",
xlab="Number of Gears", col=c("darkblue","red"),
legend = rownames(counts))
is.vector(Height3)
is.matrix(Height3)
str(Height3)
Height3<-data.matrix(Height1)
str(Height3)
counts <- table(Height3$A, Height3$B,Height3$C,Height3$D,Height3$E)
Height3<-data.matrix(Height1)
is.matrix(Height3)
Height3
Height$A
Height3$A
Height3[A,]
counts <- table(Height3[1,] Height3$B,Height3$C,Height3$D,Height3$E)
Height3[1,]
Height3[,5]
counts <- table(Height3[,1] Height3[,2],Height3[,3],Height3[,4],Height3[,5])
counts <- table(Height3[,1],Height3[,2],Height3[,3],Height3[,4],Height3[,5])
barplot(counts, main="Car Distribution by Gears and VS",
xlab="Number of Gears", col=c("darkblue","red"),
legend = rownames(counts))
counts
Height3[,1]
counts <- table(Height3[,1],Height3[,2],Height3[,3],Height3[,4],Height3[,5])
barplot(counts, main="Car Distribution by Gears and VS",
xlab="Number of Gears", col=c("darkblue","red"),
legend = rownames(counts), beside=TRUE)
?table
View(Height1)
counts <- table(Height1$B)
barplot(counts, main="Small Sagebrush",
xlab="Number of Gears")
counts <- table(Height1$C)
barplot(counts, main="Medium Sagebrush",
xlab="Number of Gears")
counts <- table(Height1$D)
barplot(counts, main="Large Sagebrush",
xlab="Number of Gears")
barplot(counts, main="Extra Large Sagebrush",
xlab="Number of Gears")
counts <- table(Height1$E)
barplot(counts, main="Extra Large Sagebrush",
xlab="Number of Gears")
View(Height1)
?table
sums <- colSums (Height1, na.rm = FALSE, dims = 1)
sums
barplot(sums, main="Car Distribution by Gears and VS",
xlab="Number of Gears", col=c("darkblue","red"),
legend = rownames(counts))
colours <- c("red", "orange", "blue", "yellow", "green")
barplot(as.matrix(Height1), main="My Barchart", ylab = "Numbers", cex.lab = 1.5, cex.main = 1.4, beside=TRUE, col=colours)
sums <- colSums (Height1, na.rm = FALSE, dims = 1)
counts <- table(Height3[,1],Height3[,2],Height3[,3],Height3[,4],Height3[,5])
barplot(sums, main="Car Distribution by Gears and VS",
xlab="Number of Gears", col=c("darkblue","red"),
legend = rownames(counts))
sums <- colSums (Height1, na.rm = FALSE, dims = 1)
barplot(as.matrix(sums), main="My Barchart", ylab = "Numbers", cex.lab = 1.5, cex.main = 1.4, beside=TRUE, col=colours)
sums
barplot(as.matrix(sums), main="My Barchart",xlab="Height Class", ylab = "Numbers", cex.lab = 1.5, cex.main = 1.4, beside=TRUE, col=colours)
barplot(as.matrix(sums), main="My Barchart",xlab="Height Class", ylab = "Counts", cex.lab = 1.5, cex.main = 1.4, beside=TRUE, col=colours)
barplot(as.matrix(sums), main="My Barchart",xlab="Height Class", ylab = "Counts", cex.lab = 1.5, cex.main = 1.4, beside=F, col=colours)
TRUE
barplot(as.matrix(sums), main="My Barchart",xlab="Height Class", ylab = "Counts", cex.lab = 1.5, cex.main = 1.4, beside=TRUE, col=colours)
sums
barplot(as.matrix(sums), main="My Barchart",xlab="Height Class", ylab = "Counts", cex.lab = 1.5, cex.main = 1.4, beside=TRUE, col=colours,names.arg = c("A", "B", "C","D","E"))
text(x= counts+0.3, y= bplt, labels=as.character(counts))
bplt <- barplot(as.matrix(sums), main="My Barchart",xlab="Height Class", ylab = "Counts", cex.lab = 1.5, cex.main = 1.4, beside=TRUE, col=colours,names.arg = c("A", "B", "C","D","E"))
text(x= counts+0.3, y= bplt, labels=as.character(counts))
colours <- c("red", "orange", "blue", "yellow", "green")
bplt <- barplot(as.matrix(sums), main="Sagebrush Counts by Height Class",xlab="Height Class", ylab = "Counts", cex.lab = 1.5, cex.main = 1.4, beside=TRUE, col=colours,names.arg = c("A", "B", "C","D","E"))
text(x= counts+0.3, y= bplt, labels=as.character(counts))
text(x= counts+0.3, y= bplt, labels=as.character(counts))
text(x= counts+0.3, y= bplt, labels=as.character(counts), xpd=TRUE)
# Health
library(plyr)
### % Dry Weight ### (PDW)
# Dry/Fresh
# if plant is better hydrated the # will be low
# if plant is dessicated # will be higher
### Specific Leaf Area ### (SLA)
# m2/g(dry)
# thicker leaves less efficient but tougher (lower SLA)
# look at other peoples SLA
# typical (Bruce Bugbee) is 100 to 600
LA<-read.csv("F:/Health/LeafAreaEpidermalConductance.csv",header=TRUE)
LA <- LA[ which(!LA$Wet.Dry<0.000000), ] # Remove negative weights.
LA <- LA[,c(1,14:15)]
NP<-read.csv("F:/Health/April Sagebrush N and Protein.csv",header=TRUE)
NP <- NP[,c(2,5:6)]
# find means from LA
pdw <- ddply( LA, 'Plot', summarize, pdw = mean(PctDryWeight, na.rm = T))
sla <- ddply( LA, 'Plot', summarize, sla = mean(SLAcm, na.rm = T))
LA <- join(pdw, sla, by = 'Plot', type = 'inner')
# What plots do LA and NP have in common?
LA.NP <- merge(NP, LA, by=c("Plot"))
Height1 <- read.csv("F:/ShrubDensity/HeightClass/Output/AprilLiveDeadPlotbySizeClass.csv",header=TRUE,row.names=1)
Height2 <- read.csv("F:/ShrubDensity/HeightClass/Output/AprilSizeClassLiveDeadDensityM2.csv",header=TRUE,row.names=1)
counts <- table(Height1$E)
barplot(counts, main=">100cm Sagebrush",
xlab="Number of Sagebrush")
# Health
library(plyr)
### % Dry Weight ### (PDW)
# Dry/Fresh
# if plant is better hydrated the # will be low
# if plant is dessicated # will be higher
### Specific Leaf Area ### (SLA)
# m2/g(dry)
# thicker leaves less efficient but tougher (lower SLA)
# look at other peoples SLA
# typical (Bruce Bugbee) is 100 to 600
LA<-read.csv("F:/Health/LeafAreaEpidermalConductance.csv",header=TRUE)
LA <- LA[ which(!LA$Wet.Dry<0.000000), ] # Remove negative weights.
LA <- LA[,c(1,14:15)]
NP<-read.csv("F:/Health/April Sagebrush N and Protein.csv",header=TRUE)
NP <- NP[,c(2,5:6)]
# find means from LA
pdw <- ddply( LA, 'Plot', summarize, pdw = mean(PctDryWeight, na.rm = T))
sla <- ddply( LA, 'Plot', summarize, sla = mean(SLAcm, na.rm = T))
LA <- join(pdw, sla, by = 'Plot', type = 'inner')
# What plots do LA and NP have in common?
LA.NP <- merge(NP, LA, by=c("Plot"))
Height1 <- read.csv("F:/ShrubDensity/HeightClass/Output/AprilLiveDeadPlotbySizeClass.csv",header=TRUE,row.names=1)
Height2 <- read.csv("F:/ShrubDensity/HeightClass/Output/AprilSizeClassLiveDeadDensityM2.csv",header=TRUE,row.names=1)
View(Height1)
View(LA)
Hla <- merge(LA, Height1, by=c("Plot")
# Health
library(plyr)
### % Dry Weight ### (PDW)
# Dry/Fresh
# if plant is better hydrated the # will be low
# if plant is dessicated # will be higher
### Specific Leaf Area ### (SLA)
# m2/g(dry)
# thicker leaves less efficient but tougher (lower SLA)
# look at other peoples SLA
# typical (Bruce Bugbee) is 100 to 600
LA<-read.csv("F:/Health/LeafAreaEpidermalConductance.csv",header=TRUE)
LA <- LA[ which(!LA$Wet.Dry<0.000000), ] # Remove negative weights.
LA <- LA[,c(1,14:15)]
NP<-read.csv("F:/Health/April Sagebrush N and Protein.csv",header=TRUE)
NP <- NP[,c(2,5:6)]
# find means from LA
pdw <- ddply( LA, 'Plot', summarize, pdw = mean(PctDryWeight, na.rm = T))
sla <- ddply( LA, 'Plot', summarize, sla = mean(SLAcm, na.rm = T))
LA <- join(pdw, sla, by = 'Plot', type = 'inner')
# What plots do LA and NP have in common?
LA.NP <- merge(NP, LA, by=c("Plot"))
# Look for data normality. Not found in these 4 variables
hist(LA$pdw)
hist(LA$sla)
hist(NP$NitrogePct)
hist(NP$ProteinPct)
qqnorm(LA$pdw); qqline(LA$pdw)
qqnorm(LA$sla); qqline(LA$sla)
qqnorm(NP$NitrogePct); qqline(NP$NitrogePct)
qqnorm(NP$ProteinPct); qqline(NP$ProteinPct)
# Read in Density and Soils Data
Den <- read.csv("F:/LPI/Output/AprilLPIDensityM2.csv",header=TRUE)
Den <- rename(Den, c("X"="Plot"))
Soil <- read.csv("F:/Soils/SoilEnvironmentaldataApril.csv",header=TRUE)
Soil <- rename(Soil, c("id"="Plot"))
Height1 <- read.csv("F:/ShrubDensity/HeightClass/Output/AprilLiveDeadPlotbySizeClass.csv",header=TRUE,row.names=1)
Height2 <- read.csv("F:/ShrubDensity/HeightClass/Output/AprilSizeClassLiveDeadDensityM2.csv",header=TRUE,row.names=1)
# Simple Bar Plot
counts <- table(Height1$E)
barplot(counts, main=">100cm Sagebrush",
xlab="Number of Sagebrush")
Height3<-data.matrix(Height1)
# Stacked Bar Plot with Colors and Legend
sums <- colSums (Height1, na.rm = FALSE, dims = 1)
counts <- table(Height3[,1],Height3[,2],Height3[,3],Height3[,4],Height3[,5])
barplot(sums, main="Car Distribution by Gears and VS",
xlab="Number of Gears", col=c("darkblue","red"),
legend = rownames(counts))
# Grouped Bar Plot
colours <- c("red", "orange", "blue", "yellow", "green")
bplt <- barplot(as.matrix(sums), main="Sagebrush Counts by Height Class",xlab="Height Class", ylab = "Counts", cex.lab = 1.5, cex.main = 1.4, beside=TRUE, col=colours,names.arg = c("A", "B", "C","D","E"))
text(x= counts+0.3, y= bplt, labels=as.character(counts), xpd=TRUE)
counts <- table(Height3[,1],Height3[,2],Height3[,3],Height3[,4],Height3[,5])
barplot(counts, main="Car Distribution by Gears and VS",
xlab="Number of Gears", col=c("darkblue","red"),
legend = rownames(counts), beside=TRUE)
ARTR2 <- Den$ARTR2
text(x= counts, y= bplt, labels=as.character(counts), xpd=TRUE)
ARTR2 <- Den$ARTR2
artr <- cbind(Soil,ARTR2) ; artr <- artr[, !sapply(artr, is.factor)] # Combine ARTR with Soils, remove the factor variables
artr
artr <- cbind(Soil,ARTR2) ; artr <- artr[, !sapply(artr, is.factor)] # Combine ARTR with Soils, remove the factor variables
ALA <- merge(LA, Soil, by=c("Plot"))
ANP <- merge(NP, Soil, by=c("Plot"))
