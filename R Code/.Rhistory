varImpPlot(live.rf, sort=TRUE, main = 'Live Sagebrush')
# Combine ARTR Shrub Data and Soils Data
soil$ARTR2 <- belt$ARTR2
# # Which rows have NA present somewhere
# rownames(soil)[rowSums(is.na(soil)) > 0]
#
# # Replace NA with 0 (necesary for Boruta but not Random Forest)
# soil[is.na(soil)] <- 0 # replace NA with 0
# Run Random Forest
live.rf = randomForest(as.numeric(ARTR2) ~ .
, data = soil,proximity=TRUE,
importance=TRUE,keep.forest=TRUE,
na.action = na.omit,mtry=2,
ntree = 501)
varImpPlot(live.rf, sort=TRUE, main = 'Live Sagebrush')
# Combine ARTR Shrub Data and Soils Data
soil$ARTR2 <- belt$ARTR2
# # Which rows have NA present somewhere
# rownames(soil)[rowSums(is.na(soil)) > 0]
#
# # Replace NA with 0 (necesary for Boruta but not Random Forest)
# soil[is.na(soil)] <- 0 # replace NA with 0
# Run Random Forest
live.rf = randomForest(as.numeric(ARTR2) ~ .
, data = soil,proximity=TRUE,
importance=TRUE,keep.forest=TRUE,
na.action = na.omit,mtry=2,
ntree = 501)
varImpPlot(live.rf, sort=TRUE, main = 'Live Sagebrush')
# Combine ARTR Shrub Data and Soils Data
soil$ARTR2 <- belt$ARTR2
# # Which rows have NA present somewhere
# rownames(soil)[rowSums(is.na(soil)) > 0]
#
# # Replace NA with 0 (necesary for Boruta but not Random Forest)
# soil[is.na(soil)] <- 0 # replace NA with 0
# Run Random Forest
live.rf = randomForest(as.numeric(ARTR2) ~ .
, data = soil,proximity=TRUE,
importance=TRUE,keep.forest=TRUE,
na.action = na.omit,mtry=2,
ntree = 501)
varImpPlot(live.rf, sort=TRUE, main = 'Live Sagebrush')
# Combine ARTR Shrub Data and Soils Data
soil$ARTR2 <- belt$ARTR2
# # Which rows have NA present somewhere
# rownames(soil)[rowSums(is.na(soil)) > 0]
#
# # Replace NA with 0 (necesary for Boruta but not Random Forest)
# soil[is.na(soil)] <- 0 # replace NA with 0
# Run Random Forest
live.rf = randomForest(as.numeric(ARTR2) ~ .
, data = soil,proximity=TRUE,
importance=TRUE,keep.forest=TRUE,
na.action = na.omit,mtry=2,
ntree = 501)
varImpPlot(live.rf, sort=TRUE, main = 'Live Sagebrush')
# Combine ARTR Shrub Data and Soils Data
soil$ARTR2 <- belt$ARTR2
# # Which rows have NA present somewhere
# rownames(soil)[rowSums(is.na(soil)) > 0]
#
# # Replace NA with 0 (necesary for Boruta but not Random Forest)
# soil[is.na(soil)] <- 0 # replace NA with 0
# Run Random Forest
live.rf = randomForest(as.numeric(ARTR2) ~ .
, data = soil,proximity=TRUE,
importance=TRUE,keep.forest=TRUE,
na.action = na.omit,mtry=2,
ntree = 501)
varImpPlot(live.rf, sort=TRUE, main = 'Live Sagebrush')
# Combine ARTR Shrub Data and Soils Data
soil$ARTR2 <- belt$ARTR2
# # Which rows have NA present somewhere
# rownames(soil)[rowSums(is.na(soil)) > 0]
#
# # Replace NA with 0 (necesary for Boruta but not Random Forest)
# soil[is.na(soil)] <- 0 # replace NA with 0
# Run Random Forest
live.rf = randomForest(as.numeric(ARTR2) ~ .
, data = soil,proximity=TRUE,
importance=TRUE,keep.forest=TRUE,
na.action = na.omit,mtry=2,
ntree = 501)
varImpPlot(live.rf, sort=TRUE, main = 'Live Sagebrush')
# Combine ARTR Shrub Data and Soils Data
soil$ARTR2 <- belt$ARTR2
# # Which rows have NA present somewhere
# rownames(soil)[rowSums(is.na(soil)) > 0]
#
# # Replace NA with 0 (necesary for Boruta but not Random Forest)
# soil[is.na(soil)] <- 0 # replace NA with 0
# Run Random Forest
live.rf = randomForest(as.numeric(ARTR2) ~ .
, data = soil,proximity=TRUE,
importance=TRUE,keep.forest=TRUE,
na.action = na.omit,mtry=2,
ntree = 501)
varImpPlot(live.rf, sort=TRUE, main = 'Live Sagebrush')
# Combine ARTR Shrub Data and Soils Data
soil$ARTR2 <- belt$ARTR2
# # Which rows have NA present somewhere
# rownames(soil)[rowSums(is.na(soil)) > 0]
#
# # Replace NA with 0 (necesary for Boruta but not Random Forest)
# soil[is.na(soil)] <- 0 # replace NA with 0
# Run Random Forest
live.rf = randomForest(as.numeric(ARTR2) ~ .
, data = soil,proximity=TRUE,
importance=TRUE,keep.forest=TRUE,
na.action = na.omit,mtry=2,
ntree = 501)
varImpPlot(live.rf, sort=TRUE, main = 'Live Sagebrush')
# Combine ARTR Shrub Data and Soils Data
soil$ARTR2 <- belt$ARTR2
# # Which rows have NA present somewhere
# rownames(soil)[rowSums(is.na(soil)) > 0]
#
# # Replace NA with 0 (necesary for Boruta but not Random Forest)
# soil[is.na(soil)] <- 0 # replace NA with 0
# Run Random Forest
live.rf = randomForest(as.numeric(ARTR2) ~ .
, data = soil,proximity=TRUE,
importance=TRUE,keep.forest=TRUE,
na.action = na.omit,mtry=2,
ntree = 501)
varImpPlot(live.rf, sort=TRUE, main = 'Live Sagebrush')
# Combine ARTR Shrub Data and Soils Data
soil$ARTR2 <- belt$ARTR2
# # Which rows have NA present somewhere
# rownames(soil)[rowSums(is.na(soil)) > 0]
#
# # Replace NA with 0 (necesary for Boruta but not Random Forest)
# soil[is.na(soil)] <- 0 # replace NA with 0
# Run Random Forest
live.rf = randomForest(as.numeric(ARTR2) ~ .
, data = soil,proximity=TRUE,
importance=TRUE,keep.forest=TRUE,
na.action = na.omit,mtry=2,
ntree = 501)
varImpPlot(live.rf, sort=TRUE, main = 'Live Sagebrush')
# Combine ARTR Shrub Data and Soils Data
soil$ARTR2 <- belt$ARTR2
# # Which rows have NA present somewhere
# rownames(soil)[rowSums(is.na(soil)) > 0]
#
# # Replace NA with 0 (necesary for Boruta but not Random Forest)
# soil[is.na(soil)] <- 0 # replace NA with 0
# Run Random Forest
live.rf = randomForest(as.numeric(ARTR2) ~ .
, data = soil,proximity=TRUE,
importance=TRUE,keep.forest=TRUE,
na.action = na.omit,mtry=2,
ntree = 501)
varImpPlot(live.rf, sort=TRUE, main = 'Live Sagebrush')
library(randomForest)
# Read in Soil and LPI Data
soil <- read.csv("F:/Soils/SoilEnvironmentaldataUSGSApril.csv",header=TRUE, row.names=1)
lpi <- read.csv("F:/LPI/Output/USGSLPIplotXspp.csv",header=TRUE, row.names=1)
belt <- read.csv("F:/ShrubDensity/PresenceAbsence/Output/USGSplotXspp.csv",header=TRUE, row.names=1)
# Remove Predetermined Variables (Covariance and VIF)
soil <- subset(soil, select = -c(DepthClass,Aspect,Sand.50,Clay.50,pH.50,DryValue.50,EfferScale.50,AWHC.50,MaxClay,DWASand,DWA.AWHC,Tot.Texture,H1.Texture,SlopeShape,Tot.SandSize,H1.SandSize,H1.DryRed,H1.DryValue,H1.DryCClass,Tot.DryRed,Tot.DryValue,Tot.DryCClass,MaxSand,MaxpH,MaxDryValue,MaxAWHC))
# Combine ARTR Shrub Data and Soils Data
soil$ARTR2 <- lpi$ARTR2
# # Which rows have NA present somewhere
# rownames(soil)[rowSums(is.na(soil)) > 0]
#
# # Replace NA with 0 (necesary for Boruta but not Random Forest)
# soil[is.na(soil)] <- 0 # replace NA with 0
# Run Random Forest
live.rf = randomForest(as.numeric(ARTR2) ~ .
, data = soil,proximity=TRUE,
importance=TRUE,keep.forest=TRUE,
na.action = na.omit,mtry=2,
ntree = 501)
varImpPlot(live.rf, sort=TRUE, main = 'Live Sagebrush')
library(randomForest)
# Read in Soil and LPI Data
soil <- read.csv("F:/Soils/SoilEnvironmentaldataUSGSApril.csv",header=TRUE, row.names=1)
lpi <- read.csv("F:/LPI/Output/USGSLPIplotXspp.csv",header=TRUE, row.names=1)
belt <- read.csv("F:/ShrubDensity/PresenceAbsence/Output/USGSplotXspp.csv",header=TRUE, row.names=1)
# Remove Predetermined Variables (Covariance and VIF)
soil <- subset(soil, select = -c(DepthClass,Aspect,Sand.50,Clay.50,pH.50,DryValue.50,EfferScale.50,AWHC.50,MaxClay,DWASand,DWA.AWHC,Tot.Texture,H1.Texture,SlopeShape,Tot.SandSize,H1.SandSize,H1.DryRed,H1.DryValue,H1.DryCClass,Tot.DryRed,Tot.DryValue,Tot.DryCClass,MaxSand,MaxpH,MaxDryValue,MaxAWHC))
# Combine ARTR Shrub Data and Soils Data
soil$ARTR2 <- lpi$ARTR2
# # Which rows have NA present somewhere
# rownames(soil)[rowSums(is.na(soil)) > 0]
#
# # Replace NA with 0 (necesary for Boruta but not Random Forest)
# soil[is.na(soil)] <- 0 # replace NA with 0
# Run Random Forest
live.rf = randomForest(as.numeric(ARTR2) ~ .
, data = soil,proximity=TRUE,
importance=TRUE,keep.forest=TRUE,
na.action = na.omit,mtry=2,
ntree = 501)
varImpPlot(live.rf, sort=TRUE, main = 'Live Sagebrush')
library(randomForest)
# Read in Soil and LPI Data
soil <- read.csv("F:/Soils/SoilEnvironmentaldataUSGSApril.csv",header=TRUE, row.names=1)
lpi <- read.csv("F:/LPI/Output/USGSLPIplotXspp.csv",header=TRUE, row.names=1)
belt <- read.csv("F:/ShrubDensity/PresenceAbsence/Output/USGSplotXspp.csv",header=TRUE, row.names=1)
# Remove Predetermined Variables (Covariance and VIF)
soil <- subset(soil, select = -c(DepthClass,Aspect,Sand.50,Clay.50,pH.50,DryValue.50,EfferScale.50,AWHC.50,MaxClay,DWASand,DWA.AWHC,Tot.Texture,H1.Texture,SlopeShape,Tot.SandSize,H1.SandSize,H1.DryRed,H1.DryValue,H1.DryCClass,Tot.DryRed,Tot.DryValue,Tot.DryCClass,MaxSand,MaxpH,MaxDryValue,MaxAWHC))
# Combine ARTR Shrub Data and Soils Data
soil$ARTR2 <- lpi$ARTR2
# # Which rows have NA present somewhere
# rownames(soil)[rowSums(is.na(soil)) > 0]
#
# # Replace NA with 0 (necesary for Boruta but not Random Forest)
# soil[is.na(soil)] <- 0 # replace NA with 0
# Run Random Forest
live.rf = randomForest(as.numeric(ARTR2) ~ .
, data = soil,proximity=TRUE,
importance=TRUE,keep.forest=TRUE,
na.action = na.omit,mtry=2,
ntree = 501)
varImpPlot(live.rf, sort=TRUE, main = 'Live Sagebrush')
library(randomForest)
# Read in Soil and LPI Data
soil <- read.csv("F:/Soils/SoilEnvironmentaldataUSGSApril.csv",header=TRUE, row.names=1)
lpi <- read.csv("F:/LPI/Output/USGSLPIplotXspp.csv",header=TRUE, row.names=1)
belt <- read.csv("F:/ShrubDensity/PresenceAbsence/Output/USGSplotXspp.csv",header=TRUE, row.names=1)
# Remove Predetermined Variables (Covariance and VIF)
soil <- subset(soil, select = -c(DepthClass,Aspect,Sand.50,Clay.50,pH.50,DryValue.50,EfferScale.50,AWHC.50,MaxClay,DWASand,DWA.AWHC,Tot.Texture,H1.Texture,SlopeShape,Tot.SandSize,H1.SandSize,H1.DryRed,H1.DryValue,H1.DryCClass,Tot.DryRed,Tot.DryValue,Tot.DryCClass,MaxSand,MaxpH,MaxDryValue,MaxAWHC))
# Combine ARTR Shrub Data and Soils Data
soil$ARTR2 <- lpi$ARTR2
# # Which rows have NA present somewhere
# rownames(soil)[rowSums(is.na(soil)) > 0]
#
# # Replace NA with 0 (necesary for Boruta but not Random Forest)
# soil[is.na(soil)] <- 0 # replace NA with 0
# Run Random Forest
live.rf = randomForest(as.numeric(ARTR2) ~ .
, data = soil,proximity=TRUE,
importance=TRUE,keep.forest=TRUE,
na.action = na.omit,mtry=2,
ntree = 501)
varImpPlot(live.rf, sort=TRUE, main = 'Live Sagebrush')
library(randomForest)
# Read in Soil and LPI Data
soil <- read.csv("F:/Soils/SoilEnvironmentaldataUSGSApril.csv",header=TRUE, row.names=1)
lpi <- read.csv("F:/LPI/Output/USGSLPIplotXspp.csv",header=TRUE, row.names=1)
belt <- read.csv("F:/ShrubDensity/PresenceAbsence/Output/USGSplotXspp.csv",header=TRUE, row.names=1)
# Remove Predetermined Variables (Covariance and VIF)
soil <- subset(soil, select = -c(DepthClass,Aspect,Sand.50,Clay.50,pH.50,DryValue.50,EfferScale.50,AWHC.50,MaxClay,DWASand,DWA.AWHC,Tot.Texture,H1.Texture,SlopeShape,Tot.SandSize,H1.SandSize,H1.DryRed,H1.DryValue,H1.DryCClass,Tot.DryRed,Tot.DryValue,Tot.DryCClass,MaxSand,MaxpH,MaxDryValue,MaxAWHC))
# Combine ARTR Shrub Data and Soils Data
soil$ARTR2 <- lpi$ARTR2
# # Which rows have NA present somewhere
# rownames(soil)[rowSums(is.na(soil)) > 0]
#
# # Replace NA with 0 (necesary for Boruta but not Random Forest)
# soil[is.na(soil)] <- 0 # replace NA with 0
# Run Random Forest
live.rf = randomForest(as.numeric(ARTR2) ~ .
, data = soil,proximity=TRUE,
importance=TRUE,keep.forest=TRUE,
na.action = na.omit,mtry=2,
ntree = 501)
varImpPlot(live.rf, sort=TRUE, main = 'Live Sagebrush')
library(randomForest)
# Read in Soil and LPI Data
soil <- read.csv("F:/Soils/SoilEnvironmentaldataUSGSApril.csv",header=TRUE, row.names=1)
lpi <- read.csv("F:/LPI/Output/USGSLPIplotXspp.csv",header=TRUE, row.names=1)
belt <- read.csv("F:/ShrubDensity/PresenceAbsence/Output/USGSplotXspp.csv",header=TRUE, row.names=1)
# Remove Predetermined Variables (Covariance and VIF)
soil <- subset(soil, select = -c(DepthClass,Aspect,Sand.50,Clay.50,pH.50,DryValue.50,EfferScale.50,AWHC.50,MaxClay,DWASand,DWA.AWHC,Tot.Texture,H1.Texture,SlopeShape,Tot.SandSize,H1.SandSize,H1.DryRed,H1.DryValue,H1.DryCClass,Tot.DryRed,Tot.DryValue,Tot.DryCClass,MaxSand,MaxpH,MaxDryValue,MaxAWHC))
# Combine ARTR Shrub Data and Soils Data
soil$ARTR2 <- lpi$ARTR2
# # Which rows have NA present somewhere
# rownames(soil)[rowSums(is.na(soil)) > 0]
#
# # Replace NA with 0 (necesary for Boruta but not Random Forest)
# soil[is.na(soil)] <- 0 # replace NA with 0
# Run Random Forest
live.rf = randomForest(as.numeric(ARTR2) ~ .
, data = soil,proximity=TRUE,
importance=TRUE,keep.forest=TRUE,
na.action = na.omit,mtry=2,
ntree = 501)
varImpPlot(live.rf, sort=TRUE, main = 'Live Sagebrush')
plot(live.rf, type="l", main=deparse(substitute(live.rf)))
print(live.rf)
plot( predict(live.rf), y)
library(randomForest)
library(MASS)
data(Boston)
y <- Boston[,14]
x <- Boston[,1:13]
View(Boston)
rf <- randomForest(x,y)
print(rf)
plot( predict(rf), y)
abline(c(0,1),col=2)
plot( predict(rf,newdata=x), y)
abline(c(0,1),col=2)
(rf <- randomForest(x,y,mtry=2))
rf <- randomForest(x,y,importance=TRUE)
varImpPlot(rf)
MDSplot(rf,y)
rf
library(randomForest)
# Read in Soil and LPI Data
soil <- read.csv("F:/Soils/SoilEnvironmentaldataUSGSApril.csv",header=TRUE, row.names=1)
lpi <- read.csv("F:/LPI/Output/USGSLPIplotXspp.csv",header=TRUE, row.names=1)
belt <- read.csv("F:/ShrubDensity/PresenceAbsence/Output/USGSplotXspp.csv",header=TRUE, row.names=1)
View(soil)
# Remove Predetermined Variables (Covariance and VIF)
soil <- subset(soil, select = -c(DepthClass,Aspect,Sand.50,Clay.50,pH.50,DryValue.50,EfferScale.50,AWHC.50,MaxClay,DWASand,DWA.AWHC,Tot.Texture,H1.Texture,SlopeShape,Tot.SandSize,H1.SandSize,H1.DryRed,H1.DryValue,H1.DryCClass,Tot.DryRed,Tot.DryValue,Tot.DryCClass,MaxSand,MaxpH,MaxDryValue,MaxAWHC))
View(soil)
# Combine ARTR Shrub Data and Soils Data
soil$ARTR2 <- lpi$ARTR2
# # Which rows have NA present somewhere
# rownames(soil)[rowSums(is.na(soil)) > 0]
#
# # Replace NA with 0 (necesary for Boruta but not Random Forest)
# soil[is.na(soil)] <- 0 # replace NA with 0
# Run Random Forest
live.rf = randomForest(as.numeric(ARTR2) ~ .
, data = soil,proximity=TRUE,
importance=TRUE,keep.forest=TRUE,
na.action = na.omit,mtry=2,
ntree = 501)
plot(live.rf)
varImpPlot(live.rf, sort=TRUE, main = 'Live Sagebrush')
plot( predict(live.rf), y)
abline(c(0,1),col=2)
# Read in Soil and LPI Data
soil <- read.csv("F:/Soils/SoilEnvironmentaldataUSGSApril.csv",header=TRUE, row.names=1)
lpi <- read.csv("F:/LPI/Output/USGSLPIplotXspp.csv",header=TRUE, row.names=1)
belt <- read.csv("F:/ShrubDensity/PresenceAbsence/Output/USGSplotXspp.csv",header=TRUE, row.names=1)
# Remove Predetermined Variables (Covariance and VIF)
soil <- subset(soil, select = -c(DepthClass,Aspect,Sand.50,Clay.50,pH.50,DryValue.50,EfferScale.50,AWHC.50,MaxClay,DWASand,DWA.AWHC,Tot.Texture,H1.Texture,SlopeShape,Tot.SandSize,H1.SandSize,H1.DryRed,H1.DryValue,H1.DryCClass,Tot.DryRed,Tot.DryValue,Tot.DryCClass,MaxSand,MaxpH,MaxDryValue,MaxAWHC))
# Read in Soil and LPI Data
soil <- read.csv("F:/Soils/SoilEnvironmentaldataUSGSApril.csv",header=TRUE, row.names=1)
lpi <- read.csv("F:/LPI/Output/USGSLPIplotXspp.csv",header=TRUE, row.names=1)
belt <- read.csv("F:/ShrubDensity/PresenceAbsence/Output/USGSplotXspp.csv",header=TRUE, row.names=1)
# Remove Predetermined Variables (Covariance and VIF)
soil <- subset(soil, select = -c(DepthClass,Aspect,Sand.50,Clay.50,pH.50,DryValue.50,EfferScale.50,AWHC.50,MaxClay,DWASand,DWA.AWHC,Tot.Texture,H1.Texture,SlopeShape,Tot.SandSize,H1.SandSize,H1.DryRed,H1.DryValue,H1.DryCClass,Tot.DryRed,Tot.DryValue,Tot.DryCClass,MaxSand,MaxpH,MaxDryValue,MaxAWHC))
(rf <- randomForest(x=soil,y=lpi$ARTR2,mtry=2))
lpi$ARTR2
(rf <- randomForest(x=soil,y=lpi$ARTR2,proximity=TRUE,
importance=TRUE,keep.forest=TRUE,
na.action = na.omit,mtry=2,
ntree = 501))
# Which rows have NA present somewhere
rownames(soil)[rowSums(is.na(soil)) > 0]
# Replace NA with 0 (necesary for Boruta but not Random Forest)
soil[is.na(soil)] <- 0 # replace NA with 0
(rf <- randomForest(x=soil,y=lpi$ARTR2,proximity=TRUE,
importance=TRUE,keep.forest=TRUE,
na.action = na.omit,mtry=2,
ntree = 501))
# Run Random Forest
live.rf = randomForest(as.numeric(ARTR2) ~ .
, data = soil,proximity=TRUE,
importance=TRUE,keep.forest=TRUE,
na.action = na.omit,mtry=2,
ntree = 501)
# Combine ARTR Shrub Data and Soils Data
soil$ARTR2 <- lpi$ARTR2
# Run Random Forest
live.rf = randomForest(as.numeric(ARTR2) ~ .
, data = soil,proximity=TRUE,
importance=TRUE,keep.forest=TRUE,
na.action = na.omit,mtry=2,
ntree = 501)
live.rf
# Run Random Forest
live.rf = randomForest(as.numeric(ARTR2) ~ .
, data = soil,proximity=TRUE,
importance=TRUE,keep.forest=TRUE,
na.action = na.omit,mtry=6,
ntree = 501)
live.rf
# Run Random Forest
live.rf = randomForest(as.numeric(ARTR2) ~ .
, data = soil,proximity=TRUE,
importance=TRUE,keep.forest=TRUE,
na.action = na.omit,mtry=4,
ntree = 501)
live.rf = randomForest(as.numeric(ARTR2) ~ .
live.rf
live.rf = randomForest(as.numeric(ARTR2) ~ .
, data = soil,proximity=TRUE,
importance=TRUE,keep.forest=TRUE,
na.action = na.omit,mtry=4,
ntree = 501)
live.rf
live.rf = randomForest(as.numeric(ARTR2) ~ .
, data = soil,proximity=TRUE,
importance=TRUE,keep.forest=TRUE,
na.action = na.omit,mtry=8,
ntree = 501)
live.rf
live.rf = randomForest(as.numeric(ARTR2) ~ .
, data = soil,proximity=TRUE,
importance=TRUE,keep.forest=TRUE,
na.action = na.omit,mtry=10,
ntree = 501)
live.rf
live.rf = randomForest(as.numeric(ARTR2) ~ .
, data = soil,proximity=TRUE,
importance=TRUE,keep.forest=TRUE,
na.action = na.omit,mtry=20,
ntree = 501)
live.rf
live.rf = randomForest(as.numeric(ARTR2) ~ .
, data = soil,proximity=TRUE,
importance=TRUE,keep.forest=TRUE,
na.action = na.omit,mtry=50,
ntree = 501)
live.rf = randomForest(as.numeric(ARTR2) ~ .
, data = soil,proximity=TRUE,
importance=TRUE,keep.forest=TRUE,
na.action = na.omit,mtry=15,
ntree = 501)
live.rf
live.rf = randomForest(as.numeric(ARTR2) ~ .
, data = soil,proximity=TRUE,
importance=TRUE,keep.forest=TRUE,
na.action = na.omit,mtry=3,
ntree = 501)
live.rf
live.rf = randomForest(as.numeric(ARTR2) ~ .
, data = soil,proximity=TRUE,
importance=TRUE,keep.forest=TRUE,
na.action = na.omit,mtry=2,
ntree = 501)
live.rf
live.rf = randomForest(as.numeric(ARTR2) ~ .
, data = soil,proximity=TRUE,
importance=TRUE,keep.forest=TRUE,
na.action = na.omit,mtry=2,
ntree = 200)
live.rf = randomForest(as.numeric(ARTR2) ~ .
live.rf = randomForest(as.numeric(ARTR2) ~ .
, data = soil,proximity=TRUE,
importance=TRUE,keep.forest=TRUE,
na.action = na.omit,mtry=2,
ntree = 200)
live.rf = randomForest(as.numeric(ARTR2) ~ .
, data = soil,proximity=TRUE,
importance=TRUE,keep.forest=TRUE,
na.action = na.omit,mtry=2,
ntree = 200)
live.rf
live.rf = randomForest(as.numeric(ARTR2) ~ .
, data = soil,proximity=TRUE,
importance=TRUE,keep.forest=TRUE,
na.action = na.omit,mtry=2,
ntree = 100)
live.rf
live.rf = randomForest(as.numeric(ARTR2) ~ .
, data = soil,proximity=TRUE,
importance=TRUE,keep.forest=TRUE,
na.action = na.omit,mtry=2,
ntree = 50)
live.rf
live.rf = randomForest(as.numeric(ARTR2) ~ .
, data = soil,proximity=TRUE,
importance=TRUE,keep.forest=TRUE,
na.action = na.omit,mtry=2,
ntree = 20)
live.rf
live.rf = randomForest(as.numeric(ARTR2) ~ .
, data = soil,proximity=TRUE,
importance=TRUE,keep.forest=TRUE,
na.action = na.omit,mtry=2,
ntree = 5)
live.rf
live.rf = randomForest(as.numeric(ARTR2) ~ .
, data = soil,proximity=TRUE,
importance=TRUE,keep.forest=TRUE,
na.action = na.omit,mtry=2,
ntree = 1000)
live.rf
live.rf = randomForest(as.numeric(ARTR2) ~ .
, data = soil,proximity=TRUE,
importance=TRUE,keep.forest=TRUE,
na.action = na.omit,mtry=2,
ntree = 500)
live.rf
live.rf = randomForest(as.numeric(ARTR2) ~ .
, data = soil,proximity=TRUE,
importance=TRUE,keep.forest=TRUE,
na.action = na.omit,mtry=2,
ntree = 500)
live.rf
plot(live.rf)
varImpPlot(live.rf, sort=TRUE, main = 'Live Sagebrush')
a<-round(importance(live.rf,type=1), 2)
View(a)
a[order(a[,1],decreasing=TRUE),]
View(a)
library(randomForest)
# Read in Soil and LPI Data
soil <- read.csv("F:/Soils/SoilEnvironmentaldataUSGSApril.csv",header=TRUE, row.names=1)
lpi <- read.csv("F:/LPI/Output/USGSLPIplotXspp.csv",header=TRUE, row.names=1)
belt <- read.csv("F:/ShrubDensity/PresenceAbsence/Output/USGSplotXspp.csv",header=TRUE, row.names=1)
# Remove Predetermined Variables (Covariance and VIF)
soil <- subset(soil, select = -c(DepthClass,Aspect,Sand.50,Clay.50,pH.50,DryValue.50,EfferScale.50,AWHC.50,MaxClay,DWASand,DWA.AWHC,Tot.Texture,H1.Texture,SlopeShape,Tot.SandSize,H1.SandSize,H1.DryRed,H1.DryValue,H1.DryCClass,Tot.DryRed,Tot.DryValue,Tot.DryCClass,MaxSand,MaxpH,MaxDryValue,MaxAWHC))
soil$ATCA2 <- lpi$ATCA2
# Run Random Forest
live.rf = randomForest(as.numeric(ATCA2) ~ .
, data = soil,proximity=TRUE,
importance=TRUE,keep.forest=TRUE,
na.action = na.omit,mtry=2,
ntree = 500)
live.rf
plot(live.rf)
varImpPlot(live.rf, sort=TRUE, main = 'Live Sagebrush')
