fit.env <- envfit(e.data.mds,data.env,perm=1000)
fit.env
### Choose only the significant environmental data
sig.data.env<-data.env[,c(4,11,14,15,41)]
sig.fit.env<-envfit(e.data.mds,sig.data.env,perm=1000)
sig.fit.env # Check that you pulled up the right factors.
plot(e.data.mds,type="t",main="NMDS Soil Data")
plot(sig.fit.env,col="blue", cex=0.7)
col <- c("red2", "green4", "mediumblue")
col[grp]
plot(ord, type = "n", display = "sites")
require(vegan)
data <- read.csv("F:/LPI/Output/USGSLPIPercentCover.csv",header=TRUE, row.names=1)
dij <- vegdist(data) ## bray curtis dissimilarity
clu <- hclust(dij, method = "average")
clu
grp <- cutree(clu, 3)
grp
set.seed(2) ## setting a seed to make this reproducible
ord <- metaMDS(data)
col <- c("red2", "green4", "mediumblue")
col[grp]
plot(ord, type = "n", display = "sites")
points(ord, col = col[grp], bg = col[grp], pch = 21)
legend("topright", legend = paste("Cluster", 1:3),
col = col, pt.bg = col, bty = "n", pch = 21)
ordihull(ord, groups = grp, display = "sites")
?hclust
data <- read.csv("F:/LPI/Output/USGSLPIPercentCover.csv",header=TRUE, row.names=1)
# plot variance of columns
mar <- par()$mar
par(mar=mar+c(0,5,0,0))
# par(mfrow=c(1,2))
barplot(sapply(data, var), horiz=T, las=1, cex.names=0.5)
barplot(sapply(data, var), horiz=T, las=1, cex.names=0.5, log='x')
par(mar=mar)
######## NMDS #########
library(vegan)
library(MASS)
library(colorspace)
e.data.mds<-metaMDS(comm=data,distance="euc",trace=FALSE)
e.data.mds #.17
plot.sc = scores(e.data.mds)
# Stress <0.10 indicates that the ordination is good "with no real
# risk of drawing false inferences" (Clarke 1993, p. 26).
# linear fit is the fit between ordination values and distances
stressplot(e.data.mds)
### K-Means ###
# Determine number of clusters
wss <- (nrow(comp)-1)*sum(apply(comp,2,var))
for (i in 2:15) wss[i] <- sum(kmeans(comp,
centers=i)$withinss)
# PCA before K-Means 05/11/2016
# LPI Data
data <- read.csv("F:/LPI/Output/USGSLPIPercentCover.csv",header=TRUE, row.names=1)
# plot variance of columns
mar <- par()$mar
par(mar=mar+c(0,5,0,0))
# par(mfrow=c(1,2))
barplot(sapply(data, var), horiz=T, las=1, cex.names=0.5)
barplot(sapply(data, var), horiz=T, las=1, cex.names=0.5, log='x')
par(mar=mar)
######## NMDS #########
library(vegan)
library(MASS)
library(colorspace)
ord<-metaMDS(comm=data,distance="euc",trace=FALSE)
ord #.17
plot.sc = scores(ord)
# Stress <0.10 indicates that the ordination is good "with no real
# risk of drawing false inferences" (Clarke 1993, p. 26).
# linear fit is the fit between ordination values and distances
stressplot(ord)
### K-Means ###
# Determine number of clusters
# Determine number of clusters
wss <- (nrow(ord)-1)*sum(apply(ord,2,var))
for (i in 2:15) wss[i] <- sum(kmeans(ord,
centers=i)$withinss)
plot(1:15, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares")
wss <- (nrow(ord)-1)*sum(apply(ord,2,var))
ord<-metaMDS(comm=data,distance="bray",trace=FALSE)
ord #.17
plot.sc = scores(ord)
# Stress <0.10 indicates that the ordination is good "with no real
# risk of drawing false inferences" (Clarke 1993, p. 26).
# linear fit is the fit between ordination values and distances
stressplot(ord)
ord<-metaMDS(comm=data,distance="bray",trace=FALSE)
ord #.17
plot.sc = scores(ord)
ord<-metaMDS(comm=data,distance="euc",trace=FALSE)
ord #.17
plot.sc = scores(ord)
# PCA before K-Means 05/11/2016
# LPI Data
data <- read.csv("F:/LPI/Output/USGSLPIPercentCover.csv",header=TRUE, row.names=1)
# plot variance of columns
mar <- par()$mar
par(mar=mar+c(0,5,0,0))
# par(mfrow=c(1,2))
barplot(sapply(data, var), horiz=T, las=1, cex.names=0.5)
barplot(sapply(data, var), horiz=T, las=1, cex.names=0.5, log='x')
par(mar=mar)
######## NMDS #########
library(vegan)
library(MASS)
library(colorspace)
ord<-metaMDS(comm=data,distance="euc",trace=FALSE)
ord #.17
plot.sc = scores(ord)
# Stress <0.10 indicates that the ordination is good "with no real
# risk of drawing false inferences" (Clarke 1993, p. 26).
# linear fit is the fit between ordination values and distances
stressplot(ord)
# Determine number of clusters
wss <- (nrow(ord$points)-1)*sum(apply(ord$points,2,var))
for (i in 2:15) wss[i] <- sum(kmeans(ord$points,
centers=i)$withinss)
plot(1:15, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares")
# Determine number of clusters
wss <- (nrow(ord$species)-1)*sum(apply(ord$species,2,var))
for (i in 2:15) wss[i] <- sum(kmeans(ord$species,
centers=i)$withinss)
plot(1:15, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares")
wss <- (nrow(ord$diss)-1)*sum(apply(ord$diss,2,var))
for (i in 2:15) wss[i] <- sum(kmeans(ord$diss,
centers=i)$withinss)
plot(1:15, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares")
# Determine number of clusters
wss <- (nrow(ord$dist)-1)*sum(apply(ord$dist,2,var))
for (i in 2:15) wss[i] <- sum(kmeans(ord$dist,
centers=i)$withinss)
plot(1:15, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares")
# PCA before K-Means 05/11/2016
# LPI Data
data <- read.csv("F:/LPI/Output/USGSLPIPercentCover.csv",header=TRUE, row.names=1)
# plot variance of columns
mar <- par()$mar
par(mar=mar+c(0,5,0,0))
# par(mfrow=c(1,2))
barplot(sapply(data, var), horiz=T, las=1, cex.names=0.5)
barplot(sapply(data, var), horiz=T, las=1, cex.names=0.5, log='x')
par(mar=mar)
######## NMDS #########
library(vegan)
library(MASS)
library(colorspace)
ord<-metaMDS(comm=data,distance="euc",trace=FALSE)
ord #.17
plot.sc = scores(ord)
# Stress <0.10 indicates that the ordination is good "with no real
# risk of drawing false inferences" (Clarke 1993, p. 26).
# linear fit is the fit between ordination values and distances
stressplot(ord)
### K-Means ###
# Determine number of clusters
wss <- (nrow(ord$points)-1)*sum(apply(ord$points,2,var))
for (i in 2:15) wss[i] <- sum(kmeans(ord$points,
centers=i)$withinss)
plot(1:15, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares")
# From scree plot elbow occurs at k = 4 (or 6?)
# Apply k-means with k=4 (then try 6)
k <- kmeans(ord$points, 3, nstart=25, iter.max=1000)
library(RColorBrewer)
library(scales)
palette(alpha(brewer.pal(9,'Set1'), 0.5))
plot(ord$points, col=k$clust, pch=16)
# From scree plot elbow occurs at k = 3 (or 8?)
# Apply k-means with k=3 (then try 8)
k <- kmeans(ord$points, 8, nstart=25, iter.max=1000)
library(RColorBrewer)
library(scales)
palette(alpha(brewer.pal(9,'Set1'), 0.5))
plot(ord$points, col=k$clust, pch=16)
sort(table(k$clust))
clust <- names(sort(table(k$clust)))
k <- kmeans(ord$points, 3, nstart=25, iter.max=1000)
library(RColorBrewer)
library(scales)
palette(alpha(brewer.pal(9,'Set1'), 0.5))
plot(ord$points, col=k$clust, pch=16)
plot3d(ord$ord.1, ord$ord.2, ord$ord.3, col=k$clust)
library(rgl)
plot3d(ord$ord.1, ord$ord.2, ord$ord.3, col=k$clust)
plot3d(ord$points, ord$points, ord$points, col=k$clust)
sort(table(k$clust))
clust <- names(sort(table(k$clust)))
# First cluster
row.names(data[k$clust==clust[1],])
# Second Cluster
row.names(data[k$clust==clust[2],])
# Third Cluster
row.names(data[k$clust==clust[3],])
plot(ord$points, col=k$clust, pch=16,legend(2000,9.5,
c("Cluster 1", "Cluster 2","Cluster 3"), lty=c(2,2,2),
lwd=c(2.5,2.5,2.5),col=c("blue","red","green")))
plot(ord$points, col=k$clust, pch=16)
plot(ord$points, col=k$clust, pch=16)
plot(ord$points, col=k$clust, pch=16,
legend(2000,9.5, # places a legend at the appropriate place c(“Health”,”Defense”), # puts text in the legend
lty=c(1,1), # gives the legend appropriate symbols (lines)
lwd=c(2.5,2.5,2.5),col=c(“blue”,”red”)) # gives the legend lines the correct color and width
)
plot(ord$points, col=k$clust, pch=16,legend(2000,9.5,
c("Cluster 1", "Cluster 2"), lty=c(2,2),
lwd=c(2.5,2.5),col=c("blue","red"))
)
legend(2000,9.5,
c("Cluster 1", "Cluster 2","Cluster 3"), lty=c(2,2,2),
lwd=c(2.5,2.5,2.5),col=c("blue","red","green"))
legend("topright", names(k$cluster))
plot(ord$points, col=k$clust, pch=16)
legend("topright", names(k$cluster$chr))
legend("topright", names(k$centers$chr))
plot(ord$points, col=k$clust, pch=16)
legend("topright", names(k$centers$chr))
legend("topright", names(k$centers$))
legend("topright", names(k$centers$:chr))
legend("topright", names(clust))
plot(ord$points, col=k$clust, pch=16)
legend("topright", names(clust))
clust
# PCA before K-Means 05/11/2016
# LPI Data
data <- read.csv("F:/LPI/Output/USGSLPIPercentCover.csv",header=TRUE, row.names=1)
# plot variance of columns
mar <- par()$mar
par(mar=mar+c(0,5,0,0))
# par(mfrow=c(1,2))
barplot(sapply(data, var), horiz=T, las=1, cex.names=0.5)
barplot(sapply(data, var), horiz=T, las=1, cex.names=0.5, log='x')
par(mar=mar)
######## NMDS #########
library(vegan)
library(MASS)
library(colorspace)
ord<-metaMDS(comm=data,distance="euc",trace=FALSE)
ord #.17
plot.sc = scores(ord)
# Stress <0.10 indicates that the ordination is good "with no real
# risk of drawing false inferences" (Clarke 1993, p. 26).
# linear fit is the fit between ordination values and distances
stressplot(ord)
### K-Means ###
# Determine number of clusters
wss <- (nrow(ord$points)-1)*sum(apply(ord$points,2,var))
for (i in 2:15) wss[i] <- sum(kmeans(ord$points,
centers=i)$withinss)
plot(1:15, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares")
# From scree plot elbow occurs at k = 3 (or 8?)
# Apply k-means with k=3 (then try 8)
k <- kmeans(ord$points, 3, nstart=25, iter.max=1000)
library(RColorBrewer)
library(scales)
palette(alpha(brewer.pal(9,'Set1'), 0.5))
plot(ord$points, col=k$clust, pch=16)
legend("topright", names(k$clust))
plot(ord$points, col=k$clust, pch=16)
legend("topright", names(k$cluster))
plot(ord$points, col=k$clust, pch=16)
legend("topright", names(k$iter))
legend("topright", names(k$attr))
legend("topright", names(k$centers))
legend("topright", names(k$centers$attr))
legend("topright", names(k$centers$attr$chr))
legend("topright", names(k$centers$attr$chr[1:3]))
legend("topright", c("Cluster 1", "Cluster 2","Cluster 3")))
plot(ord$points, col=k$clust, pch=16)
legend("topright", c("Cluster 1", "Cluster 2","Cluster 3")))
plot(ord$points, col=k$clust, pch=16)
legend("topright", c("Cluster 1", "Cluster 2","Cluster 3"))
,lty=c(2,2,2))
plot(ord$points, col=k$clust, pch=16)
legend("topright", c("Cluster 1", "Cluster 2","Cluster 3")
,lty=c(2,2,2))
,lty=c(3,2,2))
plot(ord$points, col=k$clust, pch=16)
legend("topright", c("Cluster 1", "Cluster 2","Cluster 3")
,lty=c(3,2,2))
plot(ord$points, col=k$clust, pch=16)
legend("topright", c("Cluster 1", "Cluster 2","Cluster 3")
,lty=c(4,5,6))
plot(ord$points, col=k$clust, pch=16)
legend("topright", c("Cluster 1", "Cluster 2","Cluster 3")
,lty=c(7,8,9))
?pch
plot(ord$points, col=k$clust, pch=16)
legend("topright", c("Cluster 1", "Cluster 2","Cluster 3")
,pch=16)
plot(ord$points, col=k$clust, pch=16)
legend("topright", c("Cluster 1", "Cluster 2","Cluster 3")
,pch=16, col=k$clust)
plot(ord$points, col=k$clust, pch=16)
legend(2000,9.5,, c("Cluster 1", "Cluster 2","Cluster 3")
,pch=16, col=k$clust)
plot(ord$points, col=k$clust, pch=16)
legend("topright", c("Cluster 1", "Cluster 2","Cluster 3")
,pch=16, col=k$clust)
plot(ord$points, col=k$clust, pch=16)
legend("topright", k$clust
,pch=16, col=k$clust)
legend("topright",names(k)
plot(ord$points, col=k$clust, pch=16)
legend("topright",names(k)
,pch=16, col=k$clust)
plot(ord$points, col=k$clust, pch=16)
legend("topright",names(k$cluster)
,pch=16, col=k$clust)
plot(ord$points, col=k$clust, pch=16)
legend("topright",names(k$centers)
,pch=16, col=k$clust)
plot(ord$points, col=k$clust, pch=16)
legend("topright",names(k$totss)
,pch=16, col=k$clust)
plot(ord$points, col=k$clust, pch=16)
legend("topright",names(k$withinss)
,pch=16, col=k$clust)
legend("topright",names(k$centers:num-attr$chr)
plot(ord$points, col=k$clust, pch=16)
legend("topright",names(k$centers:num-attr$chr)
,pch=16, col=k$clust)
plot(ord$points, col=k$clust, pch=16)
legend("topright",names(k$centers$num-attr$chr)
,pch=16, col=k$clust)
plot(ord$points, col=k$clust, pch=16)
legend("topright",names(k$centers :num-attr$chr)
,pch=16, col=k$clust)
plot(ord$points, col=k$clust, pch=16)
text(x, labels=k$cluster, col=k$cluster)
legend("topright",names(k$centers :num-attr$chr)
,pch=16, col=k$clust)
plot(ord$points, col=k$clust, pch=16)
text(x, labels=k$cluster, col=k$cluster)
plot(ord$points, col=k$clust, pch=16)
text(ord$points, labels=k$cluster, col=k$cluster)
plot(ord$points, col=k$clust, pch=16)
legend("topright",names(k$cluster)
,pch=16, col=k$cluster)
plot(ord$points, col=k$clust, pch=16)
legend("topright",names(k$centers)
,pch=16, col=k$centers)
plot(ord$points, col=k$clust, pch=16)
legend("topright",names(k$cluster)
,pch=16, col=k$cluster)
View(data)
legend("topright",names(k$cluster:Named)
,pch=16, col=k$cluster)
legend("topright",names(k$clusterNamed)
,pch=16, col=k$cluster)
legend("topright",names(k$cluster Named)
,pch=16, col=k$cluster)
k$centers
plot(ord$points, col=k$clust, pch=16)
legend("topright",c("Cluster 1", "Cluster 2","Cluster 3")
,pch=16, col=k$cluster)
palette(alpha(brewer.pal(9,'Set1'), 0.5))
plot(ord$points, col=k$clust, pch=16)
# Cluster sizes
sort(table(k$clust))
clust <- names(sort(table(k$clust)))
# First cluster
row.names(data[k$clust==clust[1],])
# Second Cluster
row.names(data[k$clust==clust[2],])
# Third Cluster
row.names(data[k$clust==clust[3],])
data <- read.csv("F:/LPI/Output/USGSLPIPercentCover.csv",header=TRUE, row.names=1)
# plot variance of columns
mar <- par()$mar
par(mar=mar+c(0,5,0,0))
# par(mfrow=c(1,2))
barplot(sapply(data, var), horiz=T, las=1, cex.names=0.5)
barplot(sapply(data, var), horiz=T, las=1, cex.names=0.5, log='x')
par(mar=mar)
######## NMDS #########
library(vegan)
library(MASS)
library(colorspace)
ord<-metaMDS(comm=data,distance="euc",trace=FALSE)
ord #.17
plot.sc = scores(ord)
# Stress <0.10 indicates that the ordination is good "with no real
# risk of drawing false inferences" (Clarke 1993, p. 26).
# linear fit is the fit between ordination values and distances
stressplot(ord)
ord<-metaMDS(comm=data,distance="bray",trace=FALSE)
ord #.17
plot.sc = scores(ord)
# Stress <0.10 indicates that the ordination is good "with no real
# risk of drawing false inferences" (Clarke 1993, p. 26).
# linear fit is the fit between ordination values and distances
stressplot(ord)
# Determine number of clusters
wss <- (nrow(ord$points)-1)*sum(apply(ord$points,2,var))
for (i in 2:15) wss[i] <- sum(kmeans(ord$points,
centers=i)$withinss)
plot(1:15, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares")
# From scree plot elbow occurs at k = 3 (or 8?)
# Apply k-means with k=3 (then try 8)
k <- kmeans(ord$points, 3, nstart=25, iter.max=1000)
library(RColorBrewer)
library(scales)
palette(alpha(brewer.pal(9,'Set1'), 0.5))
plot(ord$points, col=k$clust, pch=16)
sort(table(k$clust))
clust <- names(sort(table(k$clust)))
# First cluster
row.names(data[k$clust==clust[1],])
# Second Cluster
row.names(data[k$clust==clust[2],])
# Third Cluster
row.names(data[k$clust==clust[3],])
# Compare accommodation by cluster in boxplot
boxplot(data$KRLA2 ~ k$cluster,
xlab='Cluster', ylab='KRLA2',
main='KRLA2 by Cluster')
par(mfrow=c(1,2))
boxplot(data$ARTR2 ~ k$cluster,
xlab='Cluster', ylab='ARTR2',
main='ARTR2 by Cluster')
boxplot(data$ARTR2.D ~ k$cluster,
xlab='Cluster', ylab='ARTR2.D',
main='ARTR2.D by Cluster')
boxplot(data$ATCA2 ~ k$cluster,
xlab='Cluster', ylab='ATCA2',
main='ATCA2 by Cluster')
boxplot(data$ATCA2.D ~ k$cluster,
xlab='Cluster', ylab='ATCA2.D',
main='ATCA2.D by Cluster')
boxplot(data$BOGR2 ~ k$cluster,
xlab='Cluster', ylab='BOGR2',
main='BOGR2 by Cluster')
boxplot(data$BOGR2.D ~ k$cluster,
xlab='Cluster', ylab='BOGR2.D',
main='BOGR2.D by Cluster')
boxplot(data$SPCR ~ k$cluster,
xlab='Cluster', ylab='SPCR',
main='SPCR by Cluster')
boxplot(data$SPCR.D ~ k$cluster,
xlab='Cluster', ylab='SPCR.D',
main='SPCR.D by Cluster')
boxplot(data$HECO26 ~ k$cluster,
xlab='Cluster', ylab='HECO26',
main='HECO26 by Cluster')
boxplot(data$HECO26.D ~ k$cluster,
xlab='Cluster', ylab='HECO26.D',
main='HECO26.D by Cluster')
boxplot(data$OPPO ~ k$cluster,
xlab='Cluster', ylab='OPPO',
main='OPPO by Cluster')
boxplot(data$OPPO.D ~ k$cluster,
xlab='Cluster', ylab='OPPO.D',
main='OPPO.D by Cluster')
boxplot(data$PIED ~ k$cluster,
xlab='Cluster', ylab='PIED',
main='PIED by Cluster')
boxplot(data$PIED.D ~ k$cluster,
xlab='Cluster', ylab='PIED.D',
main='PIED.D by Cluster')
boxplot(data$JUOS ~ k$cluster,
xlab='Cluster', ylab='JUOS',
main='JUOS by Cluster')
data.env <- read.csv("F:/Soils/SoilEnvironmentaldataUSGSApril.csv",header=TRUE, row.names=1)
data.env[is.na(data.env)] <- 0 # replace NA with 0
data.env <- read.csv("F:/Soils/SoilEnvironmentaldataUSGSApril.csv",header=TRUE, row.names=1)
data.env[is.na(data.env)] <- 0 # replace NA with 0
fit.env <- envfit(ord,data.env,perm=1000)
fit.env
### Choose only the significant environmental data
sig.data.env<-data.env[,c(4,11,14,15,41)]
sig.fit.env<-envfit(ord,sig.data.env,perm=1000)
sig.fit.env # Check that you pulled up the right factors.
sig.data.env<-data.env[,c(4,11,14,15,41)]
sig.fit.env<-envfit(ord,sig.data.env,perm=1000)
sig.fit.env # Check that you pulled up the right factors.
fit.env <- envfit(ord,data.env,perm=1000)
fit.env
sig.data.env<-data.env[,c(4,11,14,24,27)]
sig.fit.env<-envfit(ord,sig.data.env,perm=1000)
sig.fit.env # Check that you pulled up the right factors.
#plotMDS
orditkplot(ord, display="species", col="black", cex=0.7, pcol="gray",pch="+",xlim=c(-0.4,0.25),ylim=c(-0.2,0.25))
plot(ord$points, col=k$clust, pch=16)
legend("topright",c("Cluster 1", "Cluster 2","Cluster 3")
,pch=16, col=k$cluster)
plot(ord$points, col=k$clust, pch=16)
plot(sig.fit.env,col="blue", cex=0.7,font=2)
ordihull(ord, groups = k$clust, display = "sites")
# http://stackoverflow.com/questions/12436902/overlaying-clustering-results-on-an-ordination
require(vegan)
data <- read.csv("F:/LPI/Output/USGSLPIPercentCover.csv",header=TRUE, row.names=1)
dij <- vegdist(data) ## bray curtis dissimilarity
clu <- hclust(dij, method = "average")
grp <- cutree(clu, 3)
set.seed(2) ## setting a seed to make this reproducible
ord <- metaMDS(data)
col <- c("red2", "green4", "mediumblue")
col[grp]
plot(ord, type = "n", display = "sites")
points(ord, col = col[grp], bg = col[grp], pch = 21)
legend("topright", legend = paste("Cluster", 1:3),
col = col, pt.bg = col, bty = "n", pch = 21)
ordihull(ord, groups = grp, display = "sites")
