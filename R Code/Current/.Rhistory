boxplot(data$SPCR ~ k$cluster,
xlab='Cluster', ylab='SPCR',
main='SPCR by Cluster')
boxplot(data$SPCR.D ~ k$cluster,
xlab='Cluster', ylab='SPCR.D',
main='SPCR.D by Cluster')
boxplot(data$HECO26 ~ k$cluster,
xlab='Cluster', ylab='HECO26',
main='HECO26 by Cluster')
boxplot(data$HECO26.D ~ k$cluster,
xlab='Cluster', ylab='HECO26.D',
main='HECO26.D by Cluster')
boxplot(data$OPPO ~ k$cluster,
xlab='Cluster', ylab='OPPO',
main='OPPO by Cluster')
boxplot(data$OPPO.D ~ k$cluster,
xlab='Cluster', ylab='OPPO.D',
main='OPPO.D by Cluster')
library(plyr)
LA<-read.csv("F:/Health/LeafAreaEpidermalConductance.csv",header=TRUE)
LA <- LA[ which(!LA$Wet.Dry<0.000000), ] # Remove negative weights.
LA <- LA[,c(1,14:15)]
NP<-read.csv("F:/Health/April Sagebrush N and Protein.csv",header=TRUE)
NP <- NP[,c(2,5:6)]
# find means from LA
pdw <- ddply( LA, 'Plot', summarize, pdw = mean(PctDryWeight, na.rm = T))
sla <- ddply( LA, 'Plot', summarize, sla = mean(SLAcm, na.rm = T))
LA <- join(pdw, sla, by = 'Plot', type = 'inner')
# What plots do LA and NP have in common?
LA.NP <- merge(NP, LA, by=c("Plot"))
Height1 <- read.csv("F:/ShrubDensity/HeightClass/Output/AprilLiveDeadPlotbySizeClass.csv",header=TRUE)
Height1 <- rename(Height1, c("X"="Plot"))
Height2 <- read.csv("F:/ShrubDensity/HeightClass/Output/AprilSizeClassLiveDeadDensityM2.csv",header=TRUE,row.names=1)
Height <- read.csv("F:/ShrubDensity/HeightClass/Output/AprilLiveDeadPlotbySizeClass.csv",header=TRUE)
Height <- rename(Height1, c("X"="Plot"))
Height <- rename(Height, c("X"="Plot"))
HeightM2 <- read.csv("F:/ShrubDensity/HeightClass/Output/AprilSizeClassLiveDeadDensityM2.csv",header=TRUE,row.names=1)
View(Height)
View(HeightM2)
Hla <- merge(LA, Height, by=c("Plot"))
# Health
library(plyr)
### % Dry Weight ### (PDW)
# Dry/Fresh
# if plant is better hydrated the # will be low
# if plant is dessicated # will be higher
### Specific Leaf Area ### (SLA)
# m2/g(dry)
# thicker leaves less efficient but tougher (lower SLA)
# look at other peoples SLA
# typical (Bruce Bugbee) is 100 to 600
LA<-read.csv("F:/Health/LeafAreaEpidermalConductance.csv",header=TRUE)
LA <- LA[ which(!LA$Wet.Dry<0.000000), ] # Remove negative weights.
LA <- LA[,c(1,14:15)]
NP<-read.csv("F:/Health/April Sagebrush N and Protein.csv",header=TRUE)
NP <- NP[,c(2,5:6)]
# find means from LA
pdw <- ddply( LA, 'Plot', summarize, pdw = mean(PctDryWeight, na.rm = T))
sla <- ddply( LA, 'Plot', summarize, sla = mean(SLAcm, na.rm = T))
LA <- join(pdw, sla, by = 'Plot', type = 'inner')
# What plots do LA and NP have in common?
LA.NP <- merge(NP, LA, by=c("Plot"))
Height <- read.csv("F:/ShrubDensity/HeightClass/Output/AprilLiveDeadPlotbySizeClass.csv",header=TRUE)
Height <- rename(Height, c("X"="Plot"))
HeightM2 <- read.csv("F:/ShrubDensity/HeightClass/Output/AprilSizeClassLiveDeadDensityM2.csv",header=TRUE,row.names=1)
Hla <- merge(LA, Height, by=c("Plot"))
Hnp <- merge(NP, Height, by=c("Plot"))
plot(Hla$pdw, Hla$sla, main="Scatterplot Example",
xlab="pdw ", ylab="sla", pch=19)
View(Hnp)
View(Hnp)
plot(Hnp$NitrogenPct, Hnp$ProteinPct, main="Scatterplot Example",
xlab="NitrogenPct ", ylab="ProteinPct", pch=19)
Hnp$NitrogenPct
View(Hnp)
plot(Hnp$NitrogePct, Hnp$ProteinPct, main="Scatterplot Example",
xlab="NitrogenPct ", ylab="ProteinPct", pch=19)
# Simple Bar Plot
barplot(Height$A, main="young Sagebrush",
xlab="Number of Sagebrush")
View(Height)
barplot(Height$E, main=">100 Sagebrush",
xlab="Number of Sagebrush")
View(HeightM2)
# Simple Bar Plot
barplot(Height2$A, main="young Sagebrush",
xlab="Number of Sagebrush")
# Simple Bar Plot
barplot(HeightM2$A, main="young Sagebrush",
xlab="Number of Sagebrush")
barplot(HeightM2$E, main=">100 Sagebrush",
xlab="Number of Sagebrush")
count(Height$A)
barplot(count(HeightM2$E), main=">100 Sagebrush",
xlab="Number of Sagebrush")
count(Height)
is.vector(Height)
is.matrix(Height)
is.factor(Height)
is.table(Height)
Height
count(HeightM2)
count(Height$E)
E <- count(Height$E)
View(E)
barplot(E)
str(E)
E <- as.matrix(E)
str(E)
str(E)
View(E)
barplot(E)
View(E)
View(E)
E <- as.vector(E)
strE
str(E)
barplot(E)
# Health
library(plyr)
### % Dry Weight ### (PDW)
# Dry/Fresh
# if plant is better hydrated the # will be low
# if plant is dessicated # will be higher
### Specific Leaf Area ### (SLA)
# m2/g(dry)
# thicker leaves less efficient but tougher (lower SLA)
# look at other peoples SLA
# typical (Bruce Bugbee) is 100 to 600
LA<-read.csv("F:/Health/LeafAreaEpidermalConductance.csv",header=TRUE)
LA <- LA[ which(!LA$Wet.Dry<0.000000), ] # Remove negative weights.
LA <- LA[,c(1,14:15)]
NP<-read.csv("F:/Health/April Sagebrush N and Protein.csv",header=TRUE)
NP <- NP[,c(2,5:6)]
# find means from LA
pdw <- ddply( LA, 'Plot', summarize, pdw = mean(PctDryWeight, na.rm = T))
sla <- ddply( LA, 'Plot', summarize, sla = mean(SLAcm, na.rm = T))
LA <- join(pdw, sla, by = 'Plot', type = 'inner')
# What plots do LA and NP have in common?
LA.NP <- merge(NP, LA, by=c("Plot"))
Height <- read.csv("F:/ShrubDensity/HeightClass/Output/AprilLiveDeadPlotbySizeClass.csv",header=TRUE)
Height <- rename(Height, c("X"="Plot"))
HeightM2 <- read.csv("F:/ShrubDensity/HeightClass/Output/AprilSizeClassLiveDeadDensityM2.csv",header=TRUE,row.names=1)
Hla <- merge(LA, Height, by=c("Plot"))
Hnp <- merge(NP, Height, by=c("Plot"))
plot(Hla$pdw, Hla$sla, main="Scatterplot Example",
xlab="pdw ", ylab="sla", pch=19)
plot(Hnp$NitrogePct, Hnp$ProteinPct, main="Scatterplot Example",
xlab="NitrogenPct ", ylab="ProteinPct", pch=19)
# Simple Bar Plot
barplot(HeightM2$A, main="young Sagebrush",
xlab="Number of Sagebrush")
barplot(HeightM2$E, main=">100 Sagebrush",
xlab="Number of Sagebrush")
E <- count(Height$E)
View(E)
E <- as.vector(E)
E
barplot(E)
E <- as.vector(E)
barplot(E)
E <- as.matrix(E)
E <- as.vector(E)
E
E <- count(Height$E)
E
E
E <- as.vector(E)
E
E <- count(Height$E)
str(E)
E <- as.vector(E)
str(E)
E <- as.vector(E)
str(E)
E$A <- count(Height$A)
count(Height$A)
A <- count(Height$A)
A
A$E <- coutnt(Height$E)
A$E <- count(Height$E)
A$E <- E
A <- count(Height$A)
B <- count(Height$B)
C <- count(Height$C)
D <- count(Height$D)
E <- count(Height$E)
A
B
C
D
E
# MDS before K-Means 05/11/2016
# LPI Data
data <- read.csv("F:/LPI/Output/AprilLPIPercentCover.csv",header=TRUE, row.names=1)
library(vegan)
library(MASS)
library(colorspace)
ord<-metaMDS(comm=data,distance="euc",trace=FALSE)
ord #.195
plot.sc = scores(ord)
# Stress <0.10 indicates that the ordination is good "with no real
# risk of drawing false inferences" (Clarke 1993, p. 26).
# linear fit is the fit between ordination values and distances
stressplot(ord)
gof <- goodness(ord)
# Determine number of clusters
wss <- (nrow(ord$points)-1)*sum(apply(ord$points,2,var))
for (i in 2:15) wss[i] <- sum(kmeans(ord$points,
centers=i)$withinss)
plot(1:15, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares")
# From scree plot elbow occurs at k = 3 (or 8?)
# Apply k-means with k=3 (then try 8)
k <- kmeans(ord$points, 3, nstart=25, iter.max=1000)
library(RColorBrewer)
library(scales)
palette(alpha(brewer.pal(9,'Set1'), 0.5))
plot(ord$points, col=k$clust, pch=16)
legend("topright",c("Cluster 1", "Cluster 2","Cluster 3")
,pch=16, col=unique(k$cluster))
# Cluster sizes
sort(table(k$clust))
clust <- names(sort(table(k$clust)))
# Health
library(plyr)
### % Dry Weight ### (PDW)
# Dry/Fresh
# if plant is better hydrated the # will be low
# if plant is dessicated # will be higher
### Specific Leaf Area ### (SLA)
# m2/g(dry)
# thicker leaves less efficient but tougher (lower SLA)
# look at other peoples SLA
# typical (Bruce Bugbee) is 100 to 600
LA<-read.csv("F:/Health/LeafAreaEpidermalConductance.csv",header=TRUE)
LA <- LA[ which(!LA$Wet.Dry<0.000000), ] # Remove negative weights.
LA <- LA[,c(1,14:15)]
NP<-read.csv("F:/Health/April Sagebrush N and Protein.csv",header=TRUE)
NP <- NP[,c(2,5:6)]
# find means from LA
pdw <- ddply( LA, 'Plot', summarize, pdw = mean(PctDryWeight, na.rm = T))
sla <- ddply( LA, 'Plot', summarize, sla = mean(SLAcm, na.rm = T))
LA <- join(pdw, sla, by = 'Plot', type = 'inner')
# What plots do LA and NP have in common?
LA.NP <- merge(NP, LA, by=c("Plot"))
Height <- read.csv("F:/ShrubDensity/HeightClass/Output/AprilLiveDeadPlotbySizeClass.csv",header=TRUE)
Height <- rename(Height, c("X"="Plot"))
HeightM2 <- read.csv("F:/ShrubDensity/HeightClass/Output/AprilSizeClassLiveDeadDensityM2.csv",header=TRUE,row.names=1)
Hla <- merge(LA, Height, by=c("Plot"))
Hnp <- merge(NP, Height, by=c("Plot"))
plot(Hla$pdw, Hla$sla, main="Scatterplot Example",
xlab="pdw ", ylab="sla", pch=19)
plot(Hnp$NitrogePct, Hnp$ProteinPct, main="Scatterplot Example",
xlab="NitrogenPct ", ylab="ProteinPct", pch=19)
plot(Hla$pdw, Hla$sla, main="Scatterplot Example",
xlab="pdw ", ylab="sla", pch=19)
plot(Hnp$NitrogePct, Hnp$ProteinPct, main="Scatterplot Example",
xlab="NitrogenPct ", ylab="ProteinPct", pch=19)
# Simple Bar Plot
barplot(HeightM2$A, main="young Sagebrush",
xlab="Number of Sagebrush")
barplot(HeightM2$E, main=">100 Sagebrush",
xlab="Number of Sagebrush")
A <- count(Height$A)
B <- count(Height$B)
C <- count(Height$C)
D <- count(Height$D)
E <- count(Height$E)
E <- as.matrix(E)
E <- as.vector(E)
barplot(E)
E <- as.matrix(E)
barplot(E)
E
# Health
library(plyr)
### % Dry Weight ### (PDW)
# Dry/Fresh
# if plant is better hydrated the # will be low
# if plant is dessicated # will be higher
### Specific Leaf Area ### (SLA)
# m2/g(dry)
# thicker leaves less efficient but tougher (lower SLA)
# look at other peoples SLA
# typical (Bruce Bugbee) is 100 to 600
LA<-read.csv("F:/Health/LeafAreaEpidermalConductance.csv",header=TRUE)
LA <- LA[ which(!LA$Wet.Dry<0.000000), ] # Remove negative weights.
LA <- LA[,c(1,14:15)]
NP<-read.csv("F:/Health/April Sagebrush N and Protein.csv",header=TRUE)
NP <- NP[,c(2,5:6)]
# find means from LA
pdw <- ddply( LA, 'Plot', summarize, pdw = mean(PctDryWeight, na.rm = T))
sla <- ddply( LA, 'Plot', summarize, sla = mean(SLAcm, na.rm = T))
LA <- join(pdw, sla, by = 'Plot', type = 'inner')
# What plots do LA and NP have in common?
LA.NP <- merge(NP, LA, by=c("Plot"))
# Look for data normality. Not found in these 4 variables
hist(LA$pdw)
hist(LA$sla)
hist(NP$NitrogePct)
hist(NP$ProteinPct)
qqnorm(LA$pdw); qqline(LA$pdw)
qqnorm(LA$sla); qqline(LA$sla)
qqnorm(NP$NitrogePct); qqline(NP$NitrogePct)
qqnorm(NP$ProteinPct); qqline(NP$ProteinPct)
# Read in Density and Soils Data
Den <- read.csv("F:/LPI/Output/AprilLPIDensityM2.csv",header=TRUE)
Den <- rename(Den, c("X"="Plot"))
Soil <- read.csv("F:/Soils/SoilEnvironmentaldataApril.csv",header=TRUE)
Soil <- rename(Soil, c("id"="Plot"))
Height1 <- read.csv("F:/ShrubDensity/HeightClass/Output/AprilLiveDeadPlotbySizeClass.csv",header=TRUE,row.names=1)
Height2 <- read.csv("F:/ShrubDensity/HeightClass/Output/AprilSizeClassLiveDeadDensityM2.csv",header=TRUE,row.names=1)
# # Simple Bar Plot
# counts <- table(Height1$E)
# barplot(counts, main=">100cm Sagebrush",
#         xlab="Number of Sagebrush")
#
# Height3<-data.matrix(Height1)
# # Stacked Bar Plot with Colors and Legend
# sums <- colSums (Height1, na.rm = FALSE, dims = 1)
# counts <- table(Height3[,1],Height3[,2],Height3[,3],Height3[,4],Height3[,5])
# barplot(sums, main="Car Distribution by Gears and VS",
#         xlab="Number of Gears", col=c("darkblue","red"),
#         legend = rownames(counts))
#
# # Grouped Bar Plot
# colours <- c("red", "orange", "blue", "yellow", "green")
# bplt <- barplot(as.matrix(sums), main="Sagebrush Counts by Height Class",xlab="Height Class", ylab = "Counts", cex.lab = 1.5, cex.main = 1.4, beside=TRUE, col=colours,names.arg = c("A", "B", "C","D","E"))
# text(x= counts+0.3, y= bplt, labels=as.character(counts), xpd=TRUE)
#
# counts <- table(Height3[,1],Height3[,2],Height3[,3],Height3[,4],Height3[,5])
# barplot(counts, main="Car Distribution by Gears and VS",
#         xlab="Number of Gears", col=c("darkblue","red"),
#         legend = rownames(counts), beside=TRUE)
# Pull out ARTR2 and combine with soils, LA, NP
ARTR2 <- Den$ARTR2
artr <- cbind(Soil,ARTR2); rownames(artr) <- artr[,1]
artr <- artr[, !sapply(artr, is.factor)] # Combine ARTR with Soils, remove the factor variables
artr$Plot<-rownames(artr)
ALA <- merge(LA, Soil, by=c("Plot"))
ANP <- merge(NP, Soil, by=c("Plot"))
# Look at LA or NP with ARTR2
art <- Den[,c(1,5)]
LAhealth <- merge(LA, art, by=c("Plot"))
NPhealth <- merge(NP, art, by=c("Plot"))
# Look at LA or NP with ARTR2 and soils
ALAhealth <- merge(ALA, art, by=c("Plot"))
ANPhealth <- merge(ANP, art, by=c("Plot"))
library(randomForest)
# Look at LA and NP in random forests
#Without Soils
live.rf = randomForest(as.numeric(ARTR2) ~ pdw+sla
, data = LAhealth,proximity=TRUE,
importance=TRUE,keep.forest=TRUE,
na.action = na.omit,mtry=2,
ntree = 500)
#var explained printed
print(live.rf)
varImpPlot(live.rf)
#With Soils
live.rf = randomForest(as.numeric(ARTR2) ~ pdw+sla+Elevation+DepthClass
, data = ALAhealth,proximity=TRUE,
importance=TRUE,keep.forest=TRUE,
na.action = na.omit,mtry=2,
ntree = 500)
#var explained printed
print(live.rf)
varImpPlot(live.rf)
live.rf = randomForest(as.numeric(ARTR2) ~ NitrogePct+ProteinPct
, data = ANPhealth,proximity=TRUE,
importance=TRUE,keep.forest=TRUE,
na.action = na.omit,mtry=2,
ntree = 500)
#var explained printed
print(live.rf)
# Look at correlations between Health and Soil variables
# panel.smooth function is built in.
# panel.cor puts correlation in upper panels, size proportional to correlation
panel.cor <- function(x, y, digits=2, prefix="", cex.cor, ...)
{
usr <- par("usr"); on.exit(par(usr))
par(usr = c(0, 1, 0, 1))
r <- abs(cor(x, y))
txt <- format(c(r, 0.123456789), digits=digits)[1]
txt <- paste(prefix, txt, sep="")
if(missing(cex.cor)) cex.cor <- 0.8/strwidth(txt)
text(0.5, 0.5, txt, cex = cex.cor * r)
}
# Correlations with significance levels
library(Hmisc)
rcorr((data.matrix(LAhealth,rownames.force=T)), type="pearson") # type can be pearson or spearman
plot(LAhealth$pdw,LAhealth$ARTR2)
abline(lm(LAhealth$pdw~LAhealth$ARTR2), col="red") # regression line (y~x)
lines(lowess(LAhealth$pdw,LAhealth$ARTR2), col="blue") # lowess line (x,y)
p<-a$P
r<-a$r
a<-rcorr((data.matrix(ALAhealth,rownames.force=T)), type="pearson") # type can be pearson or spearman
df <- data.frame(matrix(unlist(a), nrow=52, byrow=T),stringsAsFactors=FALSE)
rcorr((data.matrix(LAhealth,rownames.force=T)), type="pearson") # type can be pearson or spearman
plot(LAhealth$pdw,LAhealth$ARTR2)
plot(LAhealth$pdw,LAhealth$ARTR2)
plot(LAhealth$pdw,LAhealth$ARTR2)
abline(lm(LAhealth$pdw~LAhealth$ARTR2), col="red") # regression line (y~x)
lines(lowess(LAhealth$pdw,LAhealth$ARTR2), col="blue") # lowess line (x,y)
p<-a$P
r<-a$r
a<-rcorr((data.matrix(ALAhealth,rownames.force=T)), type="pearson") # type can be pearson or spearman
View(ALAhealth)
df <- data.frame(matrix(unlist(a), nrow=52, byrow=T),stringsAsFactors=FALSE)
View(df)
View(df)
View(LAhealth)
z <- subset(ALAhealth, select = -c(SlopeShape,DepthClass,H1.Texture,H1.SandSize,Tot.Texture,Tot.SandSize) )
View(z)
View(ALAhealth)
pearson <- cor(z, method = c("pearson"),use = "complete.obs")
View(z)
View(z)
z$Plot <- row.name
z$Plot <- row.names
row.names(z$Plot)
View(z)
z <- data.frame(z[,-1], row.names=z[,1])
View(z)
pearson <- cor(z, method = c("pearson"),use = "complete.obs")
kendall <- cor(z, method = c("kendall"),use = "complete.obs")
spearman <- cor(z, method = c("spearman"),use = "complete.obs")
# write.csv(spearman,file="F:/SpearmanSoilCorrelation.csv", row.names=TRUE)
# install.packages("Hmisc")
library(Hmisc)
library(graphics)
# ++++++++++++++++++++++++++++
# flattenCorrMatrix
# ++++++++++++++++++++++++++++
# cormat : matrix of the correlation coefficients
# pmat : matrix of the correlation p-values
flattenCorrMatrix <- function(cormat, pmat) {
ut <- upper.tri(cormat)
data.frame(
row = rownames(cormat)[row(cormat)[ut]],
column = rownames(cormat)[col(cormat)[ut]],
cor  =(cormat)[ut],
p = pmat[ut]
)
}
res<-rcorr(as.matrix(z[,1:42]), type=c("spearman"))
corPval <- flattenCorrMatrix(res$r, res$P)
q <- symnum(spearman)
Susan7 <- corPval[ which((corPval$cor >= 0.7)|(corPval$cor < -0.7)),]
Susan8 <- corPval[ which((corPval$cor >= 0.8)|(corPval$cor < -0.8)),]
View(Susan7)
View(z)
View(Susan8)
View(corPval)
View(corPval)
View(corPval)
newdata <- corPval[ which(corPval$row=='sla' |corPval$column=='sla'
| corPval$row =='pdw'|corPval$column =='pdw'), ]
View(newdata)
newdata2 <- order(newdata)
View(newdata)
newdata2 <- newdata[with(newdata, order(cor)), ]
View(newdata2)
write.csv(newdata2,file="F:/WriteAndPoster/SlaPdwSpearman.csv", row.names=TRUE)
View(ANPhealth)
x <- subset(ANPhealth, select = -c(SlopeShape,DepthClass,H1.Texture,H1.SandSize,Tot.Texture,Tot.SandSize) )
x <- data.frame(z[,-1], row.names=x[,1])
View(x)
x <- data.frame(x[,-1], row.names=x[,1])
spearmanx <- cor(x, method = c("spearman"),use = "complete.obs")
# install.packages("Hmisc")
library(Hmisc)
library(graphics)
# ++++++++++++++++++++++++++++
# flattenCorrMatrix
# ++++++++++++++++++++++++++++
# cormat : matrix of the correlation coefficients
# pmat : matrix of the correlation p-values
flattenCorrMatrix <- function(cormat, pmat) {
ut <- upper.tri(cormat)
data.frame(
row = rownames(cormat)[row(cormat)[ut]],
column = rownames(cormat)[col(cormat)[ut]],
cor  =(cormat)[ut],
p = pmat[ut]
)
}
View(z)
res<-rcorr(as.matrix(z[,1:45]), type=c("spearman"))
resx<-rcorr(as.matrix(x[,1:45]), type=c("spearman"))
corPval <- flattenCorrMatrix(res$r, res$P)
corPval <- flattenCorrMatrix(res$r, res$P)
corPvalx <- flattenCorrMatrix(resx$r, resx$P)
newdata <- corPval[ which(corPval$row=='sla' |corPval$column=='sla'
| corPval$row =='pdw'|corPval$column =='pdw'), ]
newdata2 <- newdata[with(newdata, order(cor)), ]
write.csv(newdata2,file="F:/WriteAndPoster/SlaPdwSpearman.csv", row.names=TRUE)
newdatax <- corPvalx[ which(corPvaxl$row=='sla' |corPvalx$column=='sla'
| corPvalx$row =='pdw'|corPvalx$column =='pdw'), ]
newdata2x <- newdatax[with(newdatax, order(cor)), ]
newdatax <- corPvalx[ which(corPvalx$row=='sla' |corPvalx$column=='sla'
| corPvalx$row =='pdw'|corPvalx$column =='pdw'), ]
newdata2x <- newdatax[with(newdatax, order(cor)), ]
View(newdatax)
View(corPvalx)
newdatax <- corPvalx[ which(corPvalx$row=='NitrogePct' |corPvalx$column=='NitrogePct'
| corPvalx$row =='ProteinPct'|corPvalx$column =='ProteinPct'), ]
View(newdatax)
newdata2x <- newdatax[with(newdatax, order(cor)), ]
View(newdata2x)
write.csv(newdata2x,file="F:/WriteAndPoster/NPSpearman.csv", row.names=TRUE)
