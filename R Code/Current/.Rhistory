plot(1:15, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares")
# From scree plot elbow occurs at k = 3 (or 8?)
# Apply k-means with k=3 (then try 8)
k <- kmeans(ord$points, 3, nstart=25, iter.max=1000)
library(RColorBrewer)
library(scales)
palette(alpha(brewer.pal(9,'Set1'), 0.5))
plot(ord$points, col=k$clust, pch=16)
legend("topright",c("Cluster 1", "Cluster 2","Cluster 3")
,pch=16, col=unique(k$cluster))
# Cluster sizes
table(k$clust)
clust <- names(table(k$clust))
row.names(data[k$clust==clust[2],])# clust[2] is #1 because sort() did it 2,1,3
# First cluster
row.names(data[k$clust==clust[1],])
# Second Cluster
row.names(data[k$clust==clust[2],])
# Third Cluster
row.names(data[k$clust==clust[3],])
table(k$clust)
k <- kmeans(ord$points, 3, nstart=25, iter.max=1000)
library(RColorBrewer)
library(scales)
palette(alpha(brewer.pal(9,'Set1'), 0.5))
plot(ord$points, col=k$clust, pch=16)
legend("topright",c("Cluster 1", "Cluster 2","Cluster 3")
,pch=16, col=unique(k$cluster))
k <- kmeans(ord$points, 3, nstart=25, iter.max=1000)
library(RColorBrewer)
library(scales)
palette(alpha(brewer.pal(9,'Set1'), 0.5))
plot(ord$points, col=k$clust, pch=16)
legend("topright",c("Cluster 1", "Cluster 2","Cluster 3")
,pch=16, col=unique(k$cluster))
table(k$clust)
clust <- names(table(k$clust))
clust
row.names(data[k$clust==clust[1],])
# Second Cluster
row.names(data[k$clust==clust[2],])
# Third Cluster
row.names(data[k$clust==clust[3],])
# Pull Out Cluster Plot Names
Clust1 <- row.names(data[k$clust==clust[1],])
Clust2 <- row.names(data[k$clust==clust[2],])
Clust3 <- row.names(data[k$clust==clust[3],])
# Health Data
LA<-read.csv("F:/Health/LeafAreaEpidermalConductance.csv",header=TRUE)
LA <- LA[ which(!LA$Wet.Dry<0.000000), ] # Remove negative weights.
LA <- LA[,c(1,14:15)]
NP<-read.csv("F:/Health/April Sagebrush N and Protein.csv",header=TRUE)
NP <- NP[,c(2,5:6)]
# find means from LA
pdw <- ddply( LA, 'Plot', summarize, pdw = mean(PctDryWeight, na.rm = T))
sla <- ddply( LA, 'Plot', summarize, sla = mean(SLAcm, na.rm = T))
LA <- join(pdw, sla, by = 'Plot', type = 'inner')
# What plots do LA and NP have in common?
LA.NP <- merge(NP, LA, by=c("Plot"))
# Find which Health rows are in which clusters
LAC1 <- LA[LA$Plot %in% Clust1,]
LAC2 <- LA[LA$Plot %in% Clust2,]
LAC3 <- LA[LA$Plot %in% Clust3,]
NPC1 <- NP[NP$Plot %in% Clust1,]
NPC2 <- NP[NP$Plot %in% Clust2,]
NPC3 <- NP[NP$Plot %in% Clust3,]
MeanLAC1 <- colMeans(LAC1[,c(2,3)])
MeanLAC2 <- colMeans(LAC2[,c(2,3)])
# Find the Mean of each column (each health variable)
MeanLAC3 <- colMeans(LAC3[,c(2,3)])
MeanNPC1 <- colMeans(NPC1[,c(2,3)])
MeanNPC2 <- colMeans(NPC2[,c(2,3)])
MeanNPC3 <- colMeans(NPC3[,c(2,3)])
# Combine means of LA and NP into one string
MeanC1 <- c(MeanLAC1,MeanNPC1)
MeanC2 <- c(MeanLAC2,MeanNPC2)
MeanC3 <- c(MeanLAC3,MeanNPC3)
# Combine into cluster mean table
Mean <- rbind(MeanC1,MeanC2,MeanC3)
Clust1
View(NPC1)
Clust2
View(NPC2)
Clust3
View(NPC3)
View(LAC1)
View(LAC2)
View(LAC3)
# Health Means on MDS before K-Means 11/17/2016
# LPI Data
data <- read.csv("F:/LPI/Output/AprilLPIPercentCover.csv",header=TRUE, row.names=1)
######## NMDS #########
library(vegan)
library(MASS)
library(colorspace)
ord<-metaMDS(comm=data,distance="euc",trace=FALSE)
ord #.195
plot.sc = scores(ord)
# Stress <0.10 indicates that the ordination is good "with no real
# risk of drawing false inferences" (Clarke 1993, p. 26).
# linear fit is the fit between ordination values and distances
stressplot(ord)
gof <- goodness(ord)
### K-Means ###
# Determine number of clusters
wss <- (nrow(ord$points)-1)*sum(apply(ord$points,2,var))
for (i in 2:15) wss[i] <- sum(kmeans(ord$points,
centers=i)$withinss)
plot(1:15, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares")
# From scree plot elbow occurs at k = 3 (or 8?)
# Apply k-means with k=3 (then try 8)
k <- kmeans(ord$points, 3, nstart=25, iter.max=1000)
library(RColorBrewer)
library(scales)
palette(alpha(brewer.pal(9,'Set1'), 0.5))
plot(ord$points, col=k$clust, pch=16)
legend("topright",c("Cluster 1", "Cluster 2","Cluster 3")
,pch=16, col=unique(k$cluster))
# Cluster sizes
table(k$clust)
clust <- names(table(k$clust))
# First cluster
row.names(data[k$clust==clust[1],])
# Second Cluster
row.names(data[k$clust==clust[2],])
# Third Cluster
row.names(data[k$clust==clust[3],])
# Pull Out Cluster Plot Names
Clust1 <- row.names(data[k$clust==clust[1],])
Clust2 <- row.names(data[k$clust==clust[2],])
Clust3 <- row.names(data[k$clust==clust[3],])
# Health Data
LA<-read.csv("F:/Health/LeafAreaEpidermalConductance.csv",header=TRUE)
LA <- LA[ which(!LA$Wet.Dry<0.000000), ] # Remove negative weights.
LA <- LA[,c(1,14:15)]
NP<-read.csv("F:/Health/April Sagebrush N and Protein.csv",header=TRUE)
NP <- NP[,c(2,5:6)]
# find means from LA
pdw <- ddply( LA, 'Plot', summarize, pdw = mean(PctDryWeight, na.rm = T))
sla <- ddply( LA, 'Plot', summarize, sla = mean(SLAcm, na.rm = T))
LA <- join(pdw, sla, by = 'Plot', type = 'inner')
# What plots do LA and NP have in common?
LA.NP <- merge(NP, LA, by=c("Plot"))
# Find which Health rows are in which clusters
LAC1 <- LA[LA$Plot %in% Clust1,]
LAC2 <- LA[LA$Plot %in% Clust2,]
LAC3 <- LA[LA$Plot %in% Clust3,]
NPC1 <- NP[NP$Plot %in% Clust1,]
NPC2 <- NP[NP$Plot %in% Clust2,]
NPC3 <- NP[NP$Plot %in% Clust3,]
# Find the Mean of each column (each health variable)
MeanLAC1 <- colMeans(LAC1[,c(2,3)])
MeanLAC2 <- colMeans(LAC2[,c(2,3)])
MeanLAC3 <- colMeans(LAC3[,c(2,3)])
MeanNPC1 <- colMeans(NPC1[,c(2,3)])
MeanNPC2 <- colMeans(NPC2[,c(2,3)])
MeanNPC3 <- colMeans(NPC3[,c(2,3)])
# Combine means of LA and NP into one string
MeanC1 <- c(MeanLAC1,MeanNPC1)
MeanC2 <- c(MeanLAC2,MeanNPC2)
MeanC3 <- c(MeanLAC3,MeanNPC3)
# Combine into cluster mean table
Mean <- rbind(MeanC1,MeanC2,MeanC3)
View(Mean)
View(Mean)
### Plot Soils and Ordihull ###
par(mfrow=c(1,1))
plot(ord$points, col=k$clust, pch=16,
xlim=c(-0.25,0.3),ylim=c(-0.2,0.35))
legend("topright",c("Cluster 1", "Cluster 2","Cluster 3")
,pch=16, col=unique(k$cluster),x.intersp=0.6
, y.intersp=0.6,bty="n")
ordihull(ord, groups = k$clust, display = "sites"
,draw="polygon")
Mean
text(0.045,0.08, "pdw=0.55",pch=3,cex=1.25)
text(-0.12,0.01, "pdw=0.43",pch=3,cex=1.25)
par(mfrow=c(1,1))
plot(ord$points, col=k$clust, pch=16,
xlim=c(-0.25,0.3),ylim=c(-0.2,0.35))
legend("topright",c("Cluster 1", "Cluster 2","Cluster 3")
,pch=16, col=unique(k$cluster),x.intersp=0.6
, y.intersp=0.6,bty="n")
ordihull(ord, groups = k$clust, display = "sites"
,draw="polygon")
text(0.045,0.08, "pdw=0.55",pch=3,cex=1.25)
text(0.01,-0.07, "pdw=0.43",pch=3,cex=1.25)
text(-0.12,0.01, "pdw=0.57",pch=3,cex=1.25)
text(0.045,0.08, "Percent Dry Weight=0.55",pch=3,cex=1.25)
par(mfrow=c(1,1))
plot(ord$points, col=k$clust, pch=16,
xlim=c(-0.25,0.3),ylim=c(-0.2,0.35))
legend("topright",c("Cluster 1", "Cluster 2","Cluster 3")
,pch=16, col=unique(k$cluster),x.intersp=0.6
, y.intersp=0.6,bty="n")
ordihull(ord, groups = k$clust, display = "sites"
,draw="polygon")
text(0.045,0.08, "Percent Dry Weight=0.55",pch=3,cex=1.25)
text(0.01,-0.07, "Percent Dry Weight=0.43",pch=3,cex=1.25)
text(-0.12,0.01, "Percent Dry Weight=0.57",pch=3,cex=1.25)
par(mfrow=c(1,1))
plot(ord$points, col=k$clust, pch=16,
xlim=c(-0.25,0.3),ylim=c(-0.2,0.35))
legend("topright",c("Cluster 1", "Cluster 2","Cluster 3")
,pch=16, col=unique(k$cluster),x.intersp=0.6
, y.intersp=0.6,bty="n")
ordihull(ord, groups = k$clust, display = "sites"
,draw="polygon")
text(0.045,0.08, "pdw=0.55",pch=3,cex=1.25)
text(0.01,-0.07, "pdw=0.43",pch=3,cex=1.25)
text(-0.12,0.01, "pdw=0.57",pch=3,cex=1.25)
### Plot Soils and Ordihull ###
par(mfrow=c(1,1))
plot(ord$points, col=k$clust, pch=16,
xlim=c(-0.25,0.3),ylim=c(-0.2,0.35), label="Percent Dry Weight")
legend("topright",c("Cluster 1", "Cluster 2","Cluster 3")
,pch=16, col=unique(k$cluster),x.intersp=0.6
, y.intersp=0.6,bty="n")
ordihull(ord, groups = k$clust, display = "sites"
,draw="polygon")
text(0.045,0.08, "pdw=0.55",pch=3,cex=1.25)
text(0.01,-0.07, "pdw=0.43",pch=3,cex=1.25)
text(-0.12,0.01, "pdw=0.57",pch=3,cex=1.25)
par(mfrow=c(1,1))
plot(ord$points, col=k$clust, pch=16,
xlim=c(-0.25,0.3),ylim=c(-0.2,0.35), main="Percent Dry Weight")
warnings()
par(mfrow=c(1,1))
plot(ord$points, col=k$clust, pch=16,
xlim=c(-0.25,0.3),ylim=c(-0.2,0.35), main="Percent Dry Weight")
legend("topright",c("Cluster 1", "Cluster 2","Cluster 3")
,pch=16, col=unique(k$cluster),x.intersp=0.6
, y.intersp=0.6,bty="n")
ordihull(ord, groups = k$clust, display = "sites"
,draw="polygon")
text(0.045,0.08, "pdw=0.55",pch=3,cex=1.25)
text(0.01,-0.07, "pdw=0.43",pch=3,cex=1.25)
text(-0.12,0.01, "pdw=0.57",pch=3,cex=1.25)
### Plot Soils and Ordihull ###
par(mfrow=c(1,1))
plot(ord$points, col=k$clust, pch=16,
xlim=c(-0.25,0.3),ylim=c(-0.2,0.35), main="Percent Dry Weight")
legend("topright",c("Cluster 1", "Cluster 2","Cluster 3")
,pch=16, col=unique(k$cluster),x.intersp=0.6
, y.intersp=0.6,bty="n")
ordihull(ord, groups = k$clust, display = "sites"
,draw="polygon")
text(0.045,0.08, "0.55",pch=3,cex=1.25)
text(0.01,-0.07, "0.43",pch=3,cex=1.25)
text(-0.12,0.01, "0.57",pch=3,cex=1.25)
Main
Mean
# MDS before K-Means 05/11/2016
# LPI Data
data <- read.csv("F:/LPI/Output/AprilLPIPercentCover.csv",header=TRUE, row.names=1)
# # plot variance of columns
# mar <- par()$mar
# par(mar=mar+c(0,5,0,0))
# # par(mfrow=c(1,2))
# barplot(sapply(data, var), horiz=T, las=1, cex.names=0.5)
# barplot(sapply(data, var), horiz=T, las=1, cex.names=0.5, log='x')
# par(mar=mar)
######## NMDS #########
library(vegan)
library(MASS)
library(colorspace)
ord<-metaMDS(comm=data,distance="euc",trace=FALSE)
ord #.195
plot.sc = scores(ord)
# Stress <0.10 indicates that the ordination is good "with no real
# risk of drawing false inferences" (Clarke 1993, p. 26).
# linear fit is the fit between ordination values and distances
stressplot(ord)
gof <- goodness(ord)
### K-Means ###
# Determine number of clusters
wss <- (nrow(ord$points)-1)*sum(apply(ord$points,2,var))
for (i in 2:15) wss[i] <- sum(kmeans(ord$points,
centers=i)$withinss)
plot(1:15, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares")
# From scree plot elbow occurs at k = 3 (or 8?)
# Apply k-means with k=3 (then try 8)
k <- kmeans(ord$points, 3, nstart=25, iter.max=1000)
library(RColorBrewer)
library(scales)
palette(alpha(brewer.pal(9,'Set1'), 0.5))
plot(ord$points, col=k$clust, pch=16)
legend("topright",c("Cluster 1", "Cluster 2","Cluster 3")
,pch=16, col=unique(k$cluster))
# Cluster sizes
sort(table(k$clust))
clust <- names(sort(table(k$clust)))
# First cluster
row.names(data[k$clust==clust[2],])# clust[2] is #1 because sort() did it 2,1,3
# Second Cluster
row.names(data[k$clust==clust[1],])# clust[1] is #2 because sort() did it 2,1,3
# Third Cluster
row.names(data[k$clust==clust[3],])
# Fourth Cluster
row.names(data[k$clust==clust[4],])
# Fifth Cluster
row.names(data[k$clust==clust[5],])
# Compare accommodation by cluster in boxplot
boxplot(data$KRLA2 ~ k$cluster,
xlab='Cluster', ylab='KRLA2',
main='KRLA2 by Cluster')
boxplot(data$JUOS ~ k$cluster,
xlab='Cluster', ylab='JUOS',
main='JUOS by Cluster')
boxplot(data$PIED ~ k$cluster,
xlab='Cluster', ylab='PIED',
main='PIED by Cluster')
par(mfrow=c(1,2))
boxplot(data$ARTR2 ~ k$cluster,
xlab='Cluster', ylab='ARTR2',
main='ARTR2 by Cluster')
boxplot(data$ARTR2.D ~ k$cluster,
xlab='Cluster', ylab='ARTR2.D',
main='ARTR2.D by Cluster')
boxplot(data$ATCA2 ~ k$cluster,
xlab='Cluster', ylab='ATCA2',
main='ATCA2 by Cluster')
boxplot(data$ATCA2.D ~ k$cluster,
xlab='Cluster', ylab='ATCA2.D',
main='ATCA2.D by Cluster')
boxplot(data$BOGR2 ~ k$cluster,
xlab='Cluster', ylab='BOGR2',
main='BOGR2 by Cluster')
boxplot(data$BOGR2.D ~ k$cluster,
xlab='Cluster', ylab='BOGR2.D',
main='BOGR2.D by Cluster')
boxplot(data$SPCR ~ k$cluster,
xlab='Cluster', ylab='SPCR',
main='SPCR by Cluster')
boxplot(data$SPCR.D ~ k$cluster,
xlab='Cluster', ylab='SPCR.D',
main='SPCR.D by Cluster')
boxplot(data$HECO26 ~ k$cluster,
xlab='Cluster', ylab='HECO26',
main='HECO26 by Cluster')
boxplot(data$HECO26.D ~ k$cluster,
xlab='Cluster', ylab='HECO26.D',
main='HECO26.D by Cluster')
boxplot(data$OPPO ~ k$cluster,
xlab='Cluster', ylab='OPPO',
main='OPPO by Cluster')
boxplot(data$OPPO.D ~ k$cluster,
xlab='Cluster', ylab='OPPO.D',
main='OPPO.D by Cluster')
### Add in Soils Varibles ###
data.env <- read.csv("F:/Soils/SoilEnvironmentaldataApril.csv",header=TRUE, row.names=1)
data.env[is.na(data.env)] <- 0 # replace NA with 0
fit.env <- envfit(ord,data.env,perm=1000)
fit.env
sig.fit.env <- data.env[ which(fit.env$vectors$pvals<.05), ]
sig.fit.env <- data.env[fit.env$vectors$pvals<.05]
sig.fit.env <- envfit(ord,sig.fit.env,perm=1000)
sig.fit.env$factors <- NULL
sig.fit.env # Check that you pulled up the right factors.
v.sig.fit.env <- data.env[ which(fit.env$factors$pvals<.05), ]
v.sig.fit.env
v.sig.fit.env <- data.env[fit.env$factors$pvals<.05]
v.sig.fit.env
View(v.sig.fit.env)
v.sig.fit.env <- envfit(ord,v.sig.fit.env,perm=1000)
v.sig.fit.env
v.sig.fit.env$vectors <- NULL
v.sig.fit.env
v.sig.fit.env # Check that you pulled up the right factors.
par(mfrow=c(1,1))
plot(ord$points, col=k$clust, pch=16,
xlim=c(-0.25,0.3),ylim=c(-0.2,0.35))
legend("topright",c("Cluster 1", "Cluster 2","Cluster 3")
,pch=16, col=unique(k$cluster),x.intersp=0.6
, y.intersp=0.6,bty="n")
ordihull(ord, groups = k$clust, display = "sites"
,draw="polygon")
v.sig.fit.env # Check that you pulled up the right factors.
v.sig.fit.env$var.id
v.sig.fit.env$permutations
centroids
v.sig.fit.env$centroids
v.sig.fit.env
v.sig.fit.env$facotrs
v.sig.fit.env$factors
v.sig.fit.env$factors$centroids
v.sig.fit.env$factors$centroids$chr
v.sig.fit.env$factors$centroids$chr[1:14]
v.sig.fit.env$factors$r
Tot <- v.sig.fit.env$factors$r[,1]
Tot <- v.sig.fit.env$factors$r[1]
Tot
# MDS before K-Means 05/11/2016
# LPI Data
data <- read.csv("F:/LPI/Output/AprilLPIPercentCover.csv",header=TRUE, row.names=1)
# # plot variance of columns
# mar <- par()$mar
# par(mar=mar+c(0,5,0,0))
# # par(mfrow=c(1,2))
# barplot(sapply(data, var), horiz=T, las=1, cex.names=0.5)
# barplot(sapply(data, var), horiz=T, las=1, cex.names=0.5, log='x')
# par(mar=mar)
######## NMDS #########
library(vegan)
library(MASS)
library(colorspace)
ord<-metaMDS(comm=data,distance="euc",trace=FALSE)
ord #.195
plot.sc = scores(ord)
# Stress <0.10 indicates that the ordination is good "with no real
# risk of drawing false inferences" (Clarke 1993, p. 26).
# linear fit is the fit between ordination values and distances
stressplot(ord)
gof <- goodness(ord)
### K-Means ###
# Determine number of clusters
wss <- (nrow(ord$points)-1)*sum(apply(ord$points,2,var))
for (i in 2:15) wss[i] <- sum(kmeans(ord$points,
centers=i)$withinss)
plot(1:15, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares")
# From scree plot elbow occurs at k = 3 (or 8?)
# Apply k-means with k=3 (then try 8)
k <- kmeans(ord$points, 3, nstart=25, iter.max=1000)
library(RColorBrewer)
library(scales)
palette(alpha(brewer.pal(9,'Set1'), 0.5))
plot(ord$points, col=k$clust, pch=16)
legend("topright",c("Cluster 1", "Cluster 2","Cluster 3")
,pch=16, col=unique(k$cluster))
# Cluster sizes
sort(table(k$clust))
clust <- names(sort(table(k$clust)))
# First cluster
row.names(data[k$clust==clust[2],])# clust[2] is #1 because sort() did it 2,1,3
# Second Cluster
row.names(data[k$clust==clust[1],])# clust[1] is #2 because sort() did it 2,1,3
# Third Cluster
row.names(data[k$clust==clust[3],])
# Fourth Cluster
row.names(data[k$clust==clust[4],])
# Fifth Cluster
row.names(data[k$clust==clust[5],])
# Compare accommodation by cluster in boxplot
boxplot(data$KRLA2 ~ k$cluster,
xlab='Cluster', ylab='KRLA2',
main='KRLA2 by Cluster')
boxplot(data$JUOS ~ k$cluster,
xlab='Cluster', ylab='JUOS',
main='JUOS by Cluster')
boxplot(data$PIED ~ k$cluster,
xlab='Cluster', ylab='PIED',
main='PIED by Cluster')
par(mfrow=c(1,2))
boxplot(data$ARTR2 ~ k$cluster,
xlab='Cluster', ylab='ARTR2',
main='ARTR2 by Cluster')
boxplot(data$ARTR2.D ~ k$cluster,
xlab='Cluster', ylab='ARTR2.D',
main='ARTR2.D by Cluster')
boxplot(data$ATCA2 ~ k$cluster,
xlab='Cluster', ylab='ATCA2',
main='ATCA2 by Cluster')
boxplot(data$ATCA2.D ~ k$cluster,
xlab='Cluster', ylab='ATCA2.D',
main='ATCA2.D by Cluster')
boxplot(data$BOGR2 ~ k$cluster,
xlab='Cluster', ylab='BOGR2',
main='BOGR2 by Cluster')
boxplot(data$BOGR2.D ~ k$cluster,
xlab='Cluster', ylab='BOGR2.D',
main='BOGR2.D by Cluster')
boxplot(data$SPCR ~ k$cluster,
xlab='Cluster', ylab='SPCR',
main='SPCR by Cluster')
boxplot(data$SPCR.D ~ k$cluster,
xlab='Cluster', ylab='SPCR.D',
main='SPCR.D by Cluster')
boxplot(data$HECO26 ~ k$cluster,
xlab='Cluster', ylab='HECO26',
main='HECO26 by Cluster')
boxplot(data$HECO26.D ~ k$cluster,
xlab='Cluster', ylab='HECO26.D',
main='HECO26.D by Cluster')
boxplot(data$OPPO ~ k$cluster,
xlab='Cluster', ylab='OPPO',
main='OPPO by Cluster')
boxplot(data$OPPO.D ~ k$cluster,
xlab='Cluster', ylab='OPPO.D',
main='OPPO.D by Cluster')
### Add in Soils Varibles ###
data.env <- read.csv("F:/Soils/SoilEnvironmentaldataApril.csv",header=TRUE, row.names=1)
data.env[is.na(data.env)] <- 0 # replace NA with 0
fit.env <- envfit(ord,data.env,perm=1000)
fit.env
sig.fit.env <- data.env[ which(fit.env$vectors$pvals<.05), ]
sig.fit.env <- data.env[fit.env$vectors$pvals<.05]
sig.fit.env <- envfit(ord,sig.fit.env,perm=1000)
sig.fit.env$factors <- NULL
sig.fit.env # Check that you pulled up the right factors.
v.sig.fit.env <- data.env[ which(fit.env$factors$pvals<.05), ]
v.sig.fit.env <- data.env[fit.env$factors$pvals<.05]
v.sig.fit.env <- envfit(ord,v.sig.fit.env,perm=1000)
v.sig.fit.env$vectors <- NULL
v.sig.fit.env # Check that you pulled up the right factors.
v.sig.fit.env$factors$r
v.sig.fit.env$factors$r[1]
Tot <- v.sig.fit.env$factors$r[1]=NULL
Tot <- v.sig.fit.env
